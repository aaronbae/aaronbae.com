{"version":3,"sources":["Constants.js","Redux/BlogActions.js","Redux/AdminActions.js","Utils/RedirectButton.js","Common/Header.js","Common/Footer.js","Home/Intro.js","Home/Education.js","Home/TechnicalExperienceEntry.js","Home/TechnicalExperiences.js","Home/Home.js","Utils/HelperFunctions.js","Blog/PostCard.js","Blog/MainBlogPage.js","Blog/PostViewer.js","Utils/MetaHelpers.js","Admin/LogInPage.js","Admin/AdminPost.js","Utils/Toggle.js","Admin/PublicToggle.js","Admin/ContentEditor.js","Admin/PostEditor.js","Admin/AdminBlog.js","Testing/Editable.js","Testing/FileSender.js","Testing/Main.js","Warnings/NonExistentRoute.js","Redux/BlogReducer.js","Redux/AdminReducer.js","Redux/Store.js","Common/Main.js","index.js"],"names":["config","url","FILE_URL","POST_URL","USER_URL","remove_paragraph","post_index","paragraph_index","type","add_new_paragraph","initial_content","update_post","new_post","index","receive_posts","res","id2index","Array","isArray","_id","posts","receivedAt","Date","now","fetch_posts","dispatch","fetch","then","json","check_account","id","password","data","login_id","login_password","method","headers","body","JSON","stringify","status","receive_account_results","change_edit_mode","boolean_value","edit_mode","viewpost","post_id","RedirectButton","props","state","addClasses","message","route","handleRedirect","bind","this","history","push","className","onClick","Component","withRouter","Header","handleLogOut","e","stopPropagation","logged_in","path","location","pathname","startsWith","data-toggle","src","alt","connect","AdminReducer","Footer","href","title","Intro","download","TechnicalExperienceEntry","logo","logo_alt","position","company","date_formatted","roles","map","item","key","description","TechnicalExperiences","Home","format_date","date_string","given_date","corrected_d","getTime","getTimezoneOffset","getDay","getMonth","getDate","getFullYear","isMyImageURL","str","toLowerCase","endsWith","convertMyImageURL","re","RegExp","replace","PostCard","handlePostClick","date","summarized_content","formatted_date","ownProps","BlogReducer","this_post","substring","length","createtime","content","join","MainBlogPage","PostViewer","fetch_post_by_id","match","params","window","scrollTo","isPostFetched","thisPost","img","i","c","Helmet","name","property","metaFromPost","tags","FacebookShareButton","quote","FacebookIcon","size","round","bgStyle","fill","LinkedinShareButton","summary","source","LinkedinIcon","TwitterShareButton","TwitterIcon","LogInPage","handleSignInButton","both_inputs","document","getElementsByClassName","value","failed_attempt","placeholder","AdminPost","scrollY","innerHeight","public_flag","selected_post","filter","x","public","Toggle","width","parseInt","slice","height","toString","checked","click_behavior","style_object","prevProps","setState","style","onChange","PublicToggle","update_public","post","ContentEditor","update_content","key_down","handle_focus","handle_blur","handle_add_image_button","image_key_down","focus_index","image_div_show","image_div_y","post_update_focus_paragraph_index","post_update_focus_character_index","paragraph","character","needs_focus","focus","nodeName","Math","min","innerHTML","setSelectionRange","prev_posts","from","forEach","scrollX","y","scrollHeight","num_paragraphs","target","getAttribute","preventDefault","max","current_paragraph","cursor_index","selectionStart","staying_content","created_content","merged_content","Number","MAX_VALUE","offsetTop","f","files","file","FormData","append","new_content","upload_image","top","htmlFor","tabIndex","onKeyDown","onBlur","onFocus","PostEditor","enterEditMode","update_title","update_tags","save_changes","cancel_changes","handle_delete_button","title_input_ref","React","createRef","dom","current","split","save_local_changes","delete_post","ref","AdminBlog","handleNewPostButton","to","renderRedirect","Editable","rows","clickHandler","keyDownHandler","event","original","splice","contentEditable","FileSender","selectedFile","onChangeHandler","onClickHandler","loaded","console","log","border","marginBottom","Main","minHeight","NonExistentRoute","role","initialState","action","new_posts","unshift","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","Sentry","dsn","charset","metaDefault","exact","component","Testing","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a085f09d.chunk.js","sourcesContent":["const prod = {\r\n  url: {\r\n    FILE_URL: \"https://aaronbae.com/api/files/\",\r\n    POST_URL: \"https://aaronbae.com/api/posts/\",\r\n    USER_URL: \"https://aaronbae.com/api/users/\",\r\n  }\r\n}\r\nconst dev = {\r\n  url: {\r\n    FILE_URL: \"http://localhost:4000/api/files/\",\r\n    POST_URL: \"http://localhost:4000/api/posts/\",\r\n    USER_URL: \"http://localhost:4000/api/users/\",\r\n  }\r\n}\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import { config } from '../Constants'\r\n\r\nexport const RECEIVE_POSTS = \"RECEIVE_POSTS\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const CLEAR_POSTS = \"CLEAR_POSTS\";\r\nexport const ADD_NEW_POST = \"ADD_NEW_POST\";\r\nexport const ADD_NEW_PARAGRAPH = \"ADD_NEW_PARAGRAPH\";\r\nexport const REMOVE_PARAGRAPH = \"REMOVE_PARAGRAPH\";\r\n\r\n\r\n// TERMINALS\r\nexport function remove_paragraph(post_index, paragraph_index) {\r\n  return {\r\n    type: REMOVE_PARAGRAPH,\r\n    post_index: post_index,\r\n    paragraph_index: paragraph_index\r\n  }\r\n}\r\nexport function add_new_paragraph(post_index, paragraph_index, initial_content) {\r\n  return {\r\n    type: ADD_NEW_PARAGRAPH,\r\n    post_index: post_index,\r\n    paragraph_index: paragraph_index,\r\n    initial_content: initial_content\r\n  }\r\n}\r\nexport function add_new_post(new_post) {\r\n  return {\r\n    type: ADD_NEW_POST,\r\n    new_post: new_post\r\n  }\r\n}\r\nexport function update_post(new_post, index) {\r\n  return {\r\n    type: UPDATE_POST, \r\n    new_post: new_post, \r\n    index: index\r\n  }\r\n}\r\nexport function clear_posts() {\r\n  return {\r\n    type: CLEAR_POSTS,\r\n    posts: [],\r\n    id2index: {}\r\n  }\r\n}\r\nfunction receive_posts(res) {\r\n  var id2index = {}   \r\n  if(!Array.isArray(res)){\r\n    res = [res]\r\n  }\r\n  for( var index in res ) {\r\n    id2index[res[index]._id] = index\r\n  }\r\n  return {\r\n    type: RECEIVE_POSTS,\r\n    posts: res,\r\n    id2index: id2index,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\n// PROCESSORS\r\nexport function fetch_public_posts() {\r\n  return dispatch => {\r\n    fetch(config.url.POST_URL+\"public\")\r\n      .then(res => res.json())\r\n      .then(res => dispatch(receive_posts(res)))\r\n  }\r\n}\r\n\r\nexport function fetch_posts() {\r\n  return dispatch => {\r\n    fetch(config.url.POST_URL)\r\n      .then(res => res.json())\r\n      .then(res => dispatch(receive_posts(res)))\r\n  }\r\n}\r\n\r\nexport function fetch_post_by_id(post_id) {\r\n  return dispatch => {\r\n    fetch(config.url.POST_URL+post_id)\r\n      .then(res => res.json())\r\n      .then(res => dispatch(receive_posts(res)))\r\n  }\r\n}\r\n","import { config } from '../Constants'\r\nimport { \r\n  update_post,\r\n  fetch_posts, \r\n  add_new_post \r\n} from './BlogActions'\r\n\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const FAILED_ADMIN_PASSWORD = \"FAILED_ADMIN_PASSWORD\";\r\nexport const SUCCEEDED_ADMIN_PASSWORD = \"SUCCEEDED_ADMIN_PASSWORD\";\r\nexport const CHANGE_EDIT_MODE = \"CHANGE_EDIT_MODE\";\r\nexport const VIEWPOST = \"VIEW_POST\";\r\n\r\n// Admin Actions\r\nexport function sign_out() {\r\n  return {\r\n    type: SIGN_OUT,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\nfunction receive_account_results(res) {\r\n  if(res.status === 400){\r\n    return {\r\n      type: FAILED_ADMIN_PASSWORD,\r\n      receivedAt: Date.now()\r\n    }\r\n  }\r\n  return {\r\n    type: SUCCEEDED_ADMIN_PASSWORD,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\nexport function check_account(id, password) {\r\n  let data = {\r\n    login_id: id,\r\n    login_password: password\r\n  }\r\n  return dispatch => {\r\n    var url = config.url.USER_URL + \"login\"\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }).then(res => dispatch(receive_account_results(res)))\r\n  }\r\n}\r\n\r\n// UI Changing Actions\r\nexport function change_edit_mode(boolean_value) {\r\n  return {\r\n    type: CHANGE_EDIT_MODE, \r\n    edit_mode: boolean_value\r\n  }\r\n}\r\nexport function viewpost(post_id) {\r\n  return {\r\n    type: VIEWPOST, \r\n    post_id: post_id\r\n  }\r\n}\r\n\r\n// Data Manipulating Actions\r\nexport function upload_image(file, post, index, paragraph_index) {\r\n  return dispatch => {\r\n    var url = config.url.FILE_URL + 'upload'\r\n    const data = new FormData() \r\n    data.append('file', file)\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: data\r\n    }).then(res => res.json())\r\n    .then(res => {\r\n      let new_content = [...post.content]\r\n      new_content[paragraph_index] = res.url\r\n      let new_post = {...post, content: [...new_content]}\r\n      dispatch(update_post(new_post, index))\r\n    })\r\n  }\r\n}\r\nexport function create_new_post() {\r\n  return dispatch => {\r\n    var url = config.url.POST_URL + \"add/\"\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({})\r\n    }).then(res => res.json())\r\n    .then(res => {\r\n      dispatch(add_new_post(res.post))\r\n      dispatch(viewpost(0))\r\n      dispatch(change_edit_mode(true))\r\n    })\r\n  }\r\n}\r\nexport function save_local_changes(post) {\r\n  var url = config.url.POST_URL + \"update/\" + post._id.toString()\r\n  return dispatch => {\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(post)\r\n    }).then(res => dispatch(change_edit_mode(false)))\r\n  }\r\n}\r\n\r\nexport function delete_post(post_id) {\r\n  var url = config.url.POST_URL + \"delete/\" +post_id.toString()\r\n  return dispatch => {\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n    .then(() => dispatch(fetch_posts()))\r\n    .then(() => dispatch(change_edit_mode(false)))\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './RedirectButton.scss';\r\n\r\nclass RedirectButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addClasses: props.addClasses + \" link-button\",\r\n      message: props.message,\r\n      route: props.route\r\n    }\r\n    this.handleRedirect = this.handleRedirect.bind(this);\r\n  }\r\n\r\n  handleRedirect(route) {\r\n    this.props.history.push(route)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <button\r\n        className={this.state.addClasses} \r\n        onClick={this.handleRedirect.bind(this, this.state.route)}>\r\n          {this.state.message}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(RedirectButton);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { sign_out } from '../Redux/AdminActions'\r\nimport { clear_posts } from '../Redux/BlogActions'\r\n\r\nimport RedirectButton from '../Utils/RedirectButton';\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogOut = this.handleLogOut.bind(this);\r\n  }\r\n\r\n  handleLogOut(e) {\r\n    e.stopPropagation();\r\n    // TODO: give a warning\r\n    // TODO: clear cache\r\n    const { dispatch } = this.props;\r\n    dispatch(sign_out());\r\n    dispatch(clear_posts());\r\n    this.props.history.push(\"/login\")\r\n  }\r\n\r\n  render() {\r\n    const { logged_in } = this.props;\r\n    const path = this.props.history.location.pathname;\r\n    return (\r\n      <div className=\"header-container d-flex row\">\r\n        <div className=\"offset-md-2 col-12 col-md-8 header-inner-container\">\r\n          <div className=\"row\">\r\n            <div><RedirectButton addClasses=\"navbrand\" message=\"Aaron Bae\" route=\"/\" /></div>\r\n\r\n            <div className=\"d-none d-sm-block collapsable\">\r\n              <div className={path===\"/\"?\"tab active\":\"tab\"}>\r\n                <RedirectButton addClasses=\"navlink\" message=\"Home\" route=\"/\" />\r\n              </div>\r\n\r\n              <div className=\"tab line\"></div>\r\n              <div className={path.startsWith(\"/blog\") || path.startsWith(\"/admin\")?\"tab active\":\"tab\"}>\r\n                {logged_in && \r\n                  <RedirectButton addClasses=\"navlink\" message=\"Blog\" route=\"/admin\" />\r\n                }\r\n                {!logged_in &&\r\n                  <RedirectButton addClasses=\"navlink\" message=\"Blog\" route=\"/blog\" />\r\n                }\r\n              </div>\r\n\r\n              <div className={path===\"/login\"?\"tab admin-container active\":\"admin-container\"}>\r\n                {logged_in && \r\n                  <button className=\"navlink adminButton\" onClick={this.handleLogOut}>Sign Out</button>\r\n                }\r\n                {!logged_in &&\r\n                  <RedirectButton addClasses=\"navlink adminButton\" message=\"Admin\" route=\"/login\" />\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"d-block d-sm-none dropdown-container\">\r\n              <div className=\"dropdown\">\r\n                <button className=\"btn\" type=\"button\" data-toggle=\"dropdown\">\r\n                  <img className='menu-icon' src=\"/assets/icons/hamburger_icon.png\" alt=\"menu\" />\r\n                </button>\r\n                <div className=\"dropdown-menu dropdown-menu-right\" >\r\n                  <RedirectButton addClasses=\"dropdown-item\" message=\"Home\" route=\"/\" />\r\n                  {logged_in && \r\n                    <RedirectButton addClasses=\"dropdown-item\" message=\"Blog\" route=\"/admin\" />\r\n                  }\r\n                  {!logged_in &&\r\n                    <RedirectButton addClasses=\"dropdown-item\" message=\"Blog\" route=\"/blog\" />\r\n                  }\r\n                \r\n                  <div className=\"dropdown-divider\"></div>\r\n                  {logged_in && \r\n                    <button className=\"dropdown-item\" onClick={this.handleLogOut}>Sign Out</button>\r\n                  }\r\n                  {!logged_in &&\r\n                    <RedirectButton addClasses=\"dropdown-item\" message=\"Admin\" route=\"/login\" />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>  \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { logged_in: state.AdminReducer.logged_in }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Header));\r\n","import React, { Component } from 'react';\r\nimport './Footer.scss';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row footer\">\r\n        <div className=\"col\">\r\n          <div className='row'>\r\n            <div className=\"col-12\">\r\n              <a href=\"https://github.com/aaronbae\" title=\"GitHub\">\r\n                <img src=\"/assets/icons/github.png\" alt=\"GitHub\" className='footer-link-icon' />\r\n              </a>\r\n              <a href=\"https://www.linkedin.com/in/aaron-bae/\" title=\"LinkedIn\">\r\n                <img src=\"/assets/icons/linkedin.png\" alt=\"LinkedIn\" className='footer-link-icon' />\r\n              </a>\r\n              <a href=\"mailto:aaronbae@uw.edu\" title=\"email\">\r\n                <img src=\"/assets/icons/gmail.png\" alt=\"Email\" className='footer-link-icon' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\"><p>Designed and Built by Aaron Bae</p></div>  \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport './Intro.scss';\r\n\r\nclass Intro extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card-wrapper\">\r\n        <div className=\"row introduction-content-row\">\r\n          <img className='round profile-img' src=\"assets/profile2.jpg\" alt=\"profile\" />\r\n        </div>\r\n        <div className=\"row introduction-content-row\">\r\n          <ul id=\"bio-info\" className=\"col\">\r\n            <li className='row name-item'><span className=\"h2 my-name\">Aaron Beomjun Bae</span></li>\r\n            <li className=\"row bio-one-liner\"><span>Masters in Computer Science</span></li>\r\n            <li className=\"row bio-one-liner\"><span>UC Irvine Class of 2021</span></li>\r\n            <li className=\"row bio-one-liner\"><span>Focus on Natural Language Processing</span></li>\r\n            <li className=\"row bio-one-liner\"><span>Bachelor of Science in Mathematics</span></li>\r\n            <li className=\"row bio-one-liner\"><span>University of Washington Class of 2019</span></li>\r\n            <li className=\"row bio-one-liner\">\r\n              <a href=\"/assets/downloadables/resume.pdf\" download>Download a copy of my resume</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"card-section-break\" />\r\n        <div className='row introduction-content-row'>\r\n          <div id=\"link-info\" className=\"col-12\">\r\n            <a href=\"https://github.com/aaronbae\" title=\"GitHub\">\r\n              <img src=\"/assets/icons/github.png\" alt=\"GitHub\" className='external-link-icon' />\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/aaron-bae/\" title=\"LinkedIn\">\r\n              <img src=\"/assets/icons/linkedin.png\" alt=\"LinkedIn\" className='external-link-icon' />\r\n            </a>\r\n            <a href=\"mailto:aaronbae@uw.edu\" title=\"email\">\r\n              <img src=\"/assets/icons/gmail.png\" alt=\"Email\" className='external-link-icon' />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intro;\r\n","import React, { Component } from 'react';\r\nimport './Education.scss';\r\n\r\nclass Intro extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row total-section\">\r\n        <div className=\"card-wrapper\">\r\n          <div className=\"row title-section\">\r\n            <p className=\"col h3\">Education</p>\r\n          </div>\r\n          <div className=\"row card-title-break\" />\r\n          <div id=\"education-total-content-section\" className=\"row\" >\r\n            <div className=\"col\">\r\n              <div className=\"row content-section\">\r\n                <div className=\"col-md-12 col-lg-3 center education-img-wrapper\">\r\n                  <img className=\"education-img\" src=\"/assets/uci_seal_200.png\" alt=\"University of California Irvine\" />\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-9\">\r\n                  <span><span  className=\"h6\">Masters in Computer Science</span>, <i>University of California - Irvine</i></span>\r\n                  <ul className=\"education-bullets\">\r\n                    <li>Started attending since September 2019.</li>\r\n                    <li>Focus in natural language processing using transformer based models.</li>\r\n                    <li>Participating in Center for Machine Learning and Intelligent Systems.</li>\r\n                    <li>Looking for full time software engineering or data scientist role after graduation</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className=\"row content-section\">\r\n                <div className=\"col-md-12 col-lg-3 center education-img-wrapper\">\r\n                  <img className=\"education-img\" src=\"/assets/uw_seal_200.jpg\" alt=\"University of Washington\" />\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-9\">\r\n                  <span><span  className=\"h6\">Bachelor of Science in Mathematics</span>, <i>University of Washington</i></span>\r\n                  <ul className=\"education-bullets\">\r\n                    <li>Attended from September 2015 until June 2019</li>\r\n                    <li>Applicable Mathematics classes such as Matrix Algebra, Differential Equations, and Mathematical Reasoning </li>\r\n                    <li>Applicable Data Science classes such as Database Management, Data Structures and Algorithms, and Artificial Intelligence </li>\r\n                    <li>Efficient in Python, Java, JavaScript, MySQL, AWS, D3, NodeJS, React, AJAX, Ruby, Sparks</li>\r\n                    <li>Abundant research experience from Washington Experimental Mathematics Lab (WXML) and assistantship to graduate researcher at Foster School of Business.</li>\r\n                    <li>Member of the Sigma Nu Fraternity Gamma Chi Chapter.</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intro;\r\n","import React, { Component } from 'react';\r\nimport './TechnicalExperienceEntry.scss';\r\n\r\nclass TechnicalExperienceEntry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logo: props.logo,\r\n      logo_alt: props.logo_alt,\r\n      position: props.position,\r\n      company: props.company,\r\n      date_formatted: props.date_formatted,\r\n      roles: props.roles\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row individual-experience\">\r\n        <div className=\"col\">\r\n          <div className=\"row experience-title\">\r\n            <img className=\"company-logo\" src={this.state.logo} alt={this.state.logo_alt} />\r\n            <div className=\"company-info-wrapper\">\r\n              <span className=\"h5 position-title-span\">{this.state.position}</span>\r\n              <span className=\"time-worked-span\">{this.state.date_formatted}</span>\r\n              <span className=\"company-name-span\">{this.state.company}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row experience-description\">\r\n            {this.state.roles.map((item, index)=> {\r\n              return (\r\n                <div key={index}>\r\n                  <p className=\"role-title\">{item.title}:</p>\r\n                  <p>{item.description}</p>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TechnicalExperienceEntry;\r\n","import React, { Component } from 'react';\r\nimport TechnicalExperienceEntry from './TechnicalExperienceEntry';\r\nimport './TechnicalExperiences.scss';\r\n\r\nclass TechnicalExperiences extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row total-section\">\r\n        <div className=\"card-wrapper\">\r\n          <div className=\"row title-section\">\r\n            <p className=\"col h3\">Technical Experiences</p>\r\n          </div>\r\n          <div className=\"row card-title-break\" />\r\n          <div className=\"row content-section\">\r\n            <div className=\"col\">\r\n              <TechnicalExperienceEntry \r\n                logo=\"/assets/icons/uci.png\"\r\n                logo_alt=\"university of california, irvine logo\"\r\n                position=\"Graduate Student Researcher\"\r\n                company=\"University of California, Irvine\"\r\n                date_formatted=\"March 2020 - Present\"\r\n                roles={[\r\n                  {title: \"Professor Padhraic Smyth Research Team\",\r\n                  description: \"As a graduate researcher for Professor Padhraic Smyth, I am working \"\r\n                  +\"on ways to analyze dialogue dataset. Datasets like Switchboard Corpus and ICSI \"\r\n                  +\"Meeting Recording Corpus contains a turn-by-turn grouped utterances along with \"\r\n                  +\"semantic annotations. The goal of the project is to analyze this conversational\"\r\n                  +\"dataset to identify questions in any group conversations and possibly classify\"\r\n                  +\"person-to-person dynamics like leadership qualities.\"}]}\r\n              /> \r\n              <div className=\"row card-section-break\" />\r\n              <TechnicalExperienceEntry \r\n                logo=\"/assets/icons/uw_logo.png\"\r\n                logo_alt=\"university of washington logo\"\r\n                position=\"Undergraduate Researcher\"\r\n                company=\"University of Washington\"\r\n                date_formatted=\"Jun 2018 - Jun 2019\"\r\n                roles={[\r\n                  {\r\n                    title: \"Washington Experimental Mathematics Lab\",\r\n                    description: \"I was invited to work with Professor Christopher Hoffman to \"\r\n                    +\"participate on his Mathematics in Gerrymandering Project. He works to analyze \"\r\n                    +\"search the state space for the ways to draw out the districts. We used C++ and \"\r\n                    +\"Python as the engine of the project, and built NodeJS servers to distribute, \"\r\n                    +\"visualize, and explain the political data we mined.\"\r\n                  },\r\n                  {\r\n                    title: \"Assitantship to Emisa Nateigh, Ph.D\",\r\n                    description: \"As a lab assistant to Emisa Nateigh, a Ph.D student at the \"\r\n                    +\"University of Washington Foster School of business, I helped to create a \"\r\n                    +\"machine learning system to perform Multi-Tasking Gaussian Process learning \"\r\n                    +\"algorithm on the collected medical data. Mainly, used Python and NumPy to \"\r\n                    +\"carry out the statistical process. Used MatplotLib and D3.js to visualize the\"\r\n                    +\"information.\"\r\n                  }\r\n                ]}\r\n              /> \r\n              <div className=\"row card-section-break\" />\r\n              <TechnicalExperienceEntry \r\n                logo=\"/assets/icons/dapper.jpg\"\r\n                logo_alt=\"dapper company logo\"\r\n                position=\"Backend Software Engineer\"\r\n                company=\"Dapper Grooming\"\r\n                date_formatted=\"Jun 2018 - August 2019\"\r\n                roles={[\r\n                  {\r\n                    title: \"Backend Server Development Team\",\r\n                    description: \"Continuing my intersets in backend web development, I worked with a \"\r\n                    +\"University of Washington alumn who was starting a company called Dapper. The \"\r\n                    +\"company needed a basic web based platform to launch their project, and I helped\"\r\n                    +\"them by creating an AWS server to handle their client traffic.\"\r\n                  }\r\n                ]}\r\n              /> \r\n              <div className=\"row card-section-break\" />\r\n              <TechnicalExperienceEntry \r\n                logo=\"/assets/icons/crowdcow.jpg\"\r\n                logo_alt=\"crowd cow company logo\"\r\n                position=\"Software Engineering Intern\"\r\n                company=\"Crowd Cow\"\r\n                date_formatted=\"Jun 2017 - August 2017\"\r\n                roles={[\r\n                  {\r\n                    title: \"Frontend Developer\",\r\n                    description: \"As a frontend developer, I worked on improving CrowdCow's private\"\r\n                    +\" e-commerce platform by changing the client purchase UI pipeline. Also, \"\r\n                    +\"worked on various features like in-house data visualization dashboard that \"\r\n                    +\"displays company statistics.\"\r\n                  },\r\n                  {\r\n                    title: \"Backend Developer\",\r\n                    description: \"As a backend developer, I worked on middlman the information \"\r\n                    +\"between the database and the client servers. Main technologies that I used \"\r\n                    +\"were MySQL, Ruby on Rails, Git, Budler, RuboCop, Stripe, and Puma.\"\r\n                  }\r\n                ]}\r\n              /> \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TechnicalExperiences;\r\n","import React, { Component } from 'react';\r\nimport Intro from './Intro';\r\nimport Education from './Education';\r\nimport './Home.scss';\r\nimport TechnicalExperiences from './TechnicalExperiences';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row home-container\">\r\n        <div id=\"introduction-container\" className=\"center col-md-12 col-lg-3\">\r\n          <Intro />\r\n        </div>\r\n        <div className=\"col-md 12 col-lg-8\">\r\n          <Education />\r\n          <TechnicalExperiences />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import { config } from '../Constants'\r\n\r\nexport function format_date(date_string) {\r\n  var given_date = new Date(date_string)\r\n  var corrected_d = new Date(given_date.getTime() - new Date().getTimezoneOffset() * 60000)\r\n  var month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n  var days = [\"Monday\", \"Tueday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\n  var result = days[corrected_d.getDay()] + \", \" + month[corrected_d.getMonth()] + \" \" + corrected_d.getDate() + \", \" + corrected_d.getFullYear()\r\n  return result\r\n}\r\nexport function isMyImageURL(str) {\r\n  if (!str) return false\r\n  str = str.toLowerCase()\r\n  return str.startsWith(\"https://aaronbaebucket.s3\") && (str.endsWith(\"jpg\") || str.endsWith(\"png\"))\r\n}\r\nexport function convertMyImageURL(str) {\r\n  let re = new RegExp('https://aaronbaebucket.s3..*/')\r\n  return str.replace(re, config.url.FILE_URL)\r\n}","import React, { Component } from 'react';\r\nimport { format_date } from '../Utils/HelperFunctions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './PostCard.scss';\r\n\r\nclass PostCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post_id: props.post_id\r\n    }\r\n    this.handlePostClick = this.handlePostClick.bind(this);\r\n  }\r\n\r\n  handlePostClick(e) {\r\n    e.stopPropagation();\r\n    this.props.history.push(\"/blog/\"+this.props.post_id)\r\n  }\r\n\r\n  render() {\r\n    const { title, date, summarized_content } = this.props\r\n    const formatted_date = format_date(date)\r\n    return (\r\n      <div className=\"individual-post-container col-12\" onClick={this.handlePostClick}>\r\n        <div className=\"row individual-post\">\r\n          <div className=\"col\">\r\n            <div className=\"row date\">{formatted_date}</div>\r\n            <div className=\"row title\">{title}</div>\r\n            <div className=\"row\">{summarized_content}</div>\r\n            <div className=\"row read-more\">Read More</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  summarized_content: PropTypes.string.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { posts, id2index } = state.BlogReducer\r\n  let this_post = posts[id2index[ownProps.post_id]]\r\n  return {\r\n    title: this_post.title.substring(0,61) + (this_post.title.length > 61 ? \"...\" : \"\" ),\r\n    date: this_post.createtime,\r\n    summarized_content: this_post.content.join(\" \").substring(0, 200) + \"...\"\r\n  }\r\n}\r\n\r\nexport default  withRouter(connect(mapStateToProps)(PostCard));","import React, { Component } from 'react';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  fetch_public_posts\r\n} from '../Redux/BlogActions'\r\n\r\n// components \r\nimport PostCard from './PostCard';\r\nimport './MainBlogPage.scss';\r\n\r\nclass MainBlogPage extends Component {\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props\r\n    dispatch(fetch_public_posts())\r\n  }\r\n\r\n  render() { \r\n    const { posts } = this.props\r\n    return (\r\n      <div className='row all-blog-container'>\r\n        <div className=\"offset-1 col-10 offset-md-2 col-md-8 offset-lg-3 col-lg-6 card-wrapper\">\r\n          <div className=\"row whats-new-container\">What's New?</div>\r\n          <div className=\"card-title-break\"></div>\r\n          <div className=\"row post-container\">\r\n            {posts.map((item, index) => \r\n              <PostCard key={index} post_id={item._id} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nMainBlogPage.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    posts: state.BlogReducer.posts,\r\n    logged_in: state.AdminReducer.logged_in \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainBlogPage);\r\n","import React, { Component } from 'react';\r\nimport { format_date } from '../Utils/HelperFunctions';\r\nimport { metaFromPost } from \"../Utils/MetaHelpers\";\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { fetch_post_by_id } from '../Redux/BlogActions'\r\n\r\nimport { \r\n  isMyImageURL,\r\n  convertMyImageURL\r\n} from '../Utils/HelperFunctions';\r\n\r\n\r\nimport {\r\n  FacebookShareButton,\r\n  FacebookIcon,\r\n  LinkedinShareButton,\r\n  LinkedinIcon,\r\n  TwitterShareButton,\r\n  TwitterIcon,\r\n} from \"react-share\";\r\n\r\nimport './PostViewer.scss';\r\n\r\nclass PostViewer extends Component {  \r\n  componentDidMount() {\r\n    const { dispatch } = this.props\r\n    let post_id = this.props.match.params[\"id\"]\r\n    dispatch(fetch_post_by_id(post_id))\r\n    window.scrollTo(0, 0) // Need to scroll to top if coming from /blog\r\n  }\r\n\r\n  render() {\r\n    const { posts } = this.props\r\n    let post_id = this.props.match.params[\"id\"]\r\n    let isPostFetched = posts.length > 0\r\n    // TOOD: Remember that we don't have spinner div developed yet\r\n    if( isPostFetched ) {\r\n      var id2index = this.props.id2index\r\n      var thisPost = posts[id2index[post_id]]\r\n    }\r\n    return (\r\n      <div className=\"row post-viewer-container \">\r\n        {isPostFetched && \r\n            <div className=\"col-11 offset-md-2 col-md-8 offset-xl-3 col-xl-6 post-viewer-main-col card-wrapper\"> \r\n              {metaFromPost(thisPost)}\r\n              <div className=\"row viewer-information-row\">\r\n                <div className=\"col-5 no-padding\">\r\n                  {format_date(thisPost.createtime)}\r\n                </div>\r\n                <div className=\"col-7 no-padding\">\r\n                  <div className=\"float-right\">\r\n                    <span className=\"tags-label\">Tags : </span>\r\n                    {thisPost.tags.map((item, index) =>\r\n                      <span key={index} className={\"tag \" + item}>\r\n                        {item + \", \"}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row viewer-title-row\">\r\n                {thisPost.title}\r\n              </div>\r\n              <div className=\"row viewer-media-row\">\r\n                <FacebookShareButton\r\n                url={\"https://www.aaronbae.com\" + this.props.location.pathname}\r\n                quote={thisPost.title + \" from aaronbae.com\"}\r\n                className=\"media-button\"\r\n                >\r\n                  <FacebookIcon size={20} round={true} bgStyle={{fill: \"#696867\"}}/>\r\n                </FacebookShareButton>\r\n                <LinkedinShareButton \r\n                  url={\"https://www.aaronbae.com\" + this.props.location.pathname}\r\n                  title={thisPost.title + \" from aaronbae.com\"} \r\n                  summary={thisPost.content.join(\" \").substring(0, 100)}\r\n                  source=\"aaronbae.com\"\r\n                  className=\"media-button\"\r\n                  >\r\n                  <LinkedinIcon size={20} round={true} bgStyle={{fill: \"#696867\"}}/>\r\n                </LinkedinShareButton>\r\n                <TwitterShareButton \r\n                  url={\"https://www.aaronbae.com\" + this.props.location.pathname}\r\n                  title={thisPost.title}\r\n                  className=\"media-button\"\r\n                  >\r\n                  <TwitterIcon size={20} round={true} bgStyle={{fill: \"#696867\"}}/>\r\n                </TwitterShareButton>\r\n              </div>\r\n              <div className=\"row viewer-content-row\">\r\n                {thisPost.content.map((i, key) => {\r\n                  if(isMyImageURL(i)){\r\n                    return <img key={key} className=\"aws-image\" src={convertMyImageURL(i)} alt=\"Loaded from AWS\" /> \r\n                  }\r\n                  else {\r\n                    return <div className=\"content-paragraph\" key={key}>{i}</div>\r\n                  }\r\n                })}\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostViewer.propTypes = {\r\n  id2index: PropTypes.object.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { posts, id2index } = state.BlogReducer\r\n  return {\r\n    id2index: id2index,\r\n    posts: posts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostViewer);\r\n","import React from 'react';\r\nimport Helmet from \"react-helmet\";\r\nimport { isMyImageURL, convertMyImageURL } from \"./HelperFunctions\";\r\n\r\nexport function metaFromPost(thisPost) {\r\n  let description = thisPost.content.join(\" \").substring(0, 200) + \"...\";\r\n  let img = \"\"\r\n  for( let i in thisPost.content) {\r\n    let c = thisPost.content[i]\r\n    if(isMyImageURL(c)){\r\n      img = convertMyImageURL(c);\r\n      break;\r\n    }\r\n  }\r\n  return (\r\n    <Helmet>\r\n      <title>{thisPost.title}</title>\r\n      <meta name=\"title\" content={thisPost.title} />\r\n      <meta name=\"description\" content={description} />\r\n      <meta property=\"og:url\" content={\"https://www.aaronbae.com/blog/\"+thisPost._id} />\r\n      <meta property=\"og:type\" content=\"article\" />\r\n      <meta property=\"og:title\" content={thisPost.title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      {img !== \"\" && <meta property=\"og:image\" content={img} />}\r\n    </Helmet>\r\n  )\r\n}\r\nexport function metaDefault() {\r\n  let description = 'A Website created and maintained by Aaron Bae.'\r\n    +\" On this website, many of the achievements and projects are highlighted to show \"\r\n    +\"passions and interests of Aaron Bae. Make sure to share the website with \"\r\n    +\"whomever might be intersted in working with him or get his opinion on something.\";\r\n  return (\r\n    <Helmet>\r\n      <meta charset=\"utf-8\" />\r\n      <title>AaronBae | Software Engineer</title>\r\n      <meta name=\"og:site_name\" content=\"AaronBae.com\" />\r\n      <meta name=\"title\" content=\"AaronBae | Software Engineer\" />\r\n      <meta name=\"description\" content={description} />\r\n      <meta property=\"og:url\" content={\"https://www.aaronbae.com/\"} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:title\" content=\"AaronBae | Software Engineer\" />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content=\"https://github.com/aaronbae/aaronbae.com/blob/master/aaronbae.com.screencapture.PNG\" />\r\n      <meta name=\"robots\" content=\"index, follow\" />\r\n      <meta name=\"referrer\" content=\"origin\" />\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n    </Helmet>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { check_account } from '../Redux/AdminActions'\r\n\r\n// components \r\nimport './LogInPage.scss';\r\n\r\nclass LogInPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSignInButton = this.handleSignInButton.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { logged_in } = this.props;\r\n    if( logged_in ) {\r\n      this.props.history.push(\"/admin\")\r\n    }\r\n  }\r\n\r\n  handleSignInButton(e) {\r\n    e.stopPropagation();\r\n    var both_inputs = document.getElementsByClassName(\"text-input\")\r\n    const { dispatch } = this.props;\r\n    dispatch(check_account(both_inputs[0].value, both_inputs[1].value))\r\n  }\r\n\r\n  render() { \r\n    const { failed_attempt } = this.props;\r\n    return (\r\n      <div className='row all-signin-container'>\r\n        <div className=\"main-column col-10 col-sm-5 col-md-4 \">\r\n          <div className=\"form-unit card-wrapper\">\r\n            <div className=\"row admin-title-row\">\r\n              <h3>Admin Access</h3>\r\n            </div>\r\n            <div className=\"row form-item-row\">\r\n              <input className={failed_attempt?\"incorrect text-input\":\"text-input\"} type=\"text\" placeholder=\"Admin Id\"/>\r\n            </div>\r\n            <div className=\"row form-item-row\">\r\n              <input className={failed_attempt?\"incorrect text-input\":\"text-input\"} type=\"password\" placeholder=\"Admin Password\"/>\r\n            </div>\r\n            <div className=\"row buttons-row form-item-row\">\r\n              <button className=\"sign-in-button\" onClick={this.handleSignInButton}>Sign In</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogInPage.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  failed_attempt: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    logged_in: state.AdminReducer.logged_in,\r\n    failed_attempt: state.AdminReducer.failed_attempt\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(LogInPage));\r\n","import React, { Component } from 'react';\r\nimport { format_date } from '../Utils/HelperFunctions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { \r\n  isMyImageURL\r\n} from '../Utils/HelperFunctions';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { viewpost } from '../Redux/AdminActions'\r\n\r\nimport './AdminPost.scss';\r\n\r\nclass AdminPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post_id: props.post_id\r\n    }\r\n    this.handlePostClick = this.handlePostClick.bind(this);\r\n  }\r\n\r\n  handlePostClick(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, edit_mode } = this.props\r\n    if(edit_mode){\r\n      // TODO: remind user that a post is selected already\r\n    } else {\r\n      dispatch(viewpost(this.state.post_id))  \r\n      if(window.scrollY > window.innerHeight / 4){\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, date, summarized_content, public_flag } = this.props\r\n    const formatted_date = format_date(date)\r\n    return (\r\n      <div className={public_flag ? \"row admin-post-container public\" : \"row admin-post-container\"} onClick={this.handlePostClick}>\r\n        <div className=\"individual-post\">\r\n          <div className=\"offset-1 col-10\">\r\n            <div className=\"row date\">{formatted_date}</div>\r\n            <div className=\"row title\"><p className=\"h5\">{title}</p></div>\r\n            <div className=\"row\">{summarized_content}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAdminPost.propTypes = {\r\n  edit_mode: PropTypes.bool.isRequired,\r\n  selected_post: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  summarized_content: PropTypes.string.isRequired,\r\n  public_flag: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { edit_mode, selected_post } = state.AdminReducer\r\n  const { posts } = state.BlogReducer\r\n  let this_post = posts[ownProps.post_id]\r\n  let summary = this_post.content.filter(x => !isMyImageURL(x)).join(\" \").substring(0, 100) + \"...\"\r\n  return {\r\n    edit_mode: edit_mode,\r\n    selected_post: selected_post,\r\n    title: this_post.title.substring(0,61) + (this_post.title.length > 61 ? \"...\" : \"\" ),\r\n    date: this_post.createtime,\r\n    summarized_content: summary,\r\n    public_flag: this_post.public\r\n  }\r\n}\r\n\r\nexport default  withRouter(connect(mapStateToProps)(AdminPost));","import React, { Component } from 'react';\r\nimport './Toggle.scss';\r\n\r\nclass Toggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // calculate height\r\n    var width = parseInt(props.width.slice(0, -2)) * 0.8\r\n    var height = (width/1.7).toString() + \"px\"\r\n\r\n    this.state = {\r\n      checked: props.checked,\r\n      click_behavior: props.click_behavior,\r\n      style_object: {\r\n        width: width.toString() + \"px\",\r\n        height: height\r\n      }\r\n    }\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.checked !== this.props.checked) {\r\n      this.setState({checked: this.props.checked});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"public-toggle-container\">\r\n        <label className=\"switch\" style={this.state.style_object}>\r\n        <input type=\"checkbox\" checked={this.state.checked} onChange={this.state.click_behavior}/>\r\n        <span className=\"slider round\"></span>\r\n        </label>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Toggle;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { update_post } from '../Redux/BlogActions'\r\nimport Toggle from '../Utils/Toggle';\r\n\r\n\r\nclass PublicToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.update_public = this.update_public.bind(this);\r\n  }\r\n\r\n  update_public(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index } = this.props\r\n    let post = posts[index]\r\n    dispatch(update_post({...post, public: !post.public}, index))\r\n  }\r\n\r\n  render() {\r\n    const { posts, index } = this.props\r\n    return (\r\n      <Toggle checked={posts[index].public} width=\"50px\" click_behavior={this.update_public}/>\r\n    )\r\n  }\r\n}\r\n\r\nPublicToggle.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n  index: PropTypes.number.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { selected_post } = state.AdminReducer\r\n  const { posts } = state.BlogReducer\r\n  return { \r\n    posts: posts,\r\n    index: selected_post\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(PublicToggle);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  isMyImageURL,\r\n  convertMyImageURL\r\n} from '../Utils/HelperFunctions';\r\nimport {\r\n  add_new_paragraph,\r\n  update_post,\r\n  remove_paragraph\r\n} from '../Redux/BlogActions'\r\nimport {\r\n  upload_image\r\n} from '../Redux/AdminActions'\r\n\r\nimport './ContentEditor.scss';\r\n\r\n\r\nclass ContentEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.update_content = this.update_content.bind(this);\r\n    this.key_down = this.key_down.bind(this);\r\n    this.handle_focus = this.handle_focus.bind(this);\r\n    this.handle_blur = this.handle_blur.bind(this);\r\n    this.handle_add_image_button = this.handle_add_image_button.bind(this);\r\n\r\n    this.image_key_down = this.image_key_down.bind(this);\r\n\r\n    this.state = {\r\n      focus_index: -1,\r\n      image_div_show: false,\r\n      image_div_y: 0,\r\n      post_update_focus_paragraph_index: 0,\r\n      post_update_focus_character_index: 0\r\n    }\r\n  }\r\n  focus(paragraph, character) {\r\n    let needs_focus = document.getElementsByClassName(\"post-editor-paragraph\")[paragraph] \r\n    needs_focus.focus()\r\n    if(needs_focus.nodeName===\"TEXTAREA\"){\r\n      character = Math.min(character, needs_focus.innerHTML.length)\r\n      needs_focus.setSelectionRange(character,character)\r\n    } \r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { posts, index, edit_mode } = this.props\r\n    let prev_posts = prevProps.posts\r\n\r\n    // Resize title and content input\r\n    Array.from(document.getElementsByClassName(\"resize-required\")).forEach((e)=>{\r\n      let x = window.scrollX;\r\n      let y = window.scrollY;\r\n      e.style.height = \"0px\"\r\n      e.style.height = (e.scrollHeight+1) + \"px\"\r\n      window.scrollTo(x,y);\r\n\r\n    })\r\n    \r\n    // re-focus after paragraph creation or deletion\r\n    if ( edit_mode && index !== -1 && prev_posts.length > 0 \r\n      && posts[index].content.length !== prev_posts[index].content.length) {\r\n      this.focus(this.state.post_update_focus_paragraph_index, this.state.post_update_focus_character_index)\r\n    }\r\n  }\r\n  image_key_down(e) {\r\n    const { posts, dispatch, index } = this.props\r\n    let num_paragraphs = parseInt(posts[index].content.length)\r\n    let paragraph_index = parseInt(e.target.getAttribute(\"index\"))\r\n    if(e.key === \"Enter\"){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      dispatch(add_new_paragraph(index, paragraph_index, \"\"))  \r\n      this.setState({\r\n        post_update_focus_paragraph_index: paragraph_index + 1,\r\n        post_update_focus_character_index: 0\r\n      })    \r\n    } \r\n    else if(e.key === \"Backspace\" || e.key === \"Delete\"){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      dispatch(remove_paragraph(index, paragraph_index)) \r\n      this.setState({\r\n        post_update_focus_paragraph_index: paragraph_index < num_paragraphs ? paragraph_index : Math.max(0, paragraph_index - 1),\r\n        post_update_focus_character_index: 0\r\n      })    \r\n    } \r\n    else if (e.key === \"ArrowUp\" && paragraph_index > 0){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      this.focus(paragraph_index - 1, 0)\r\n    } \r\n    else if (e.key === \"ArrowDown\" && paragraph_index < num_paragraphs - 1){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      this.focus(paragraph_index + 1, 0)\r\n    } \r\n  }\r\n\r\n  key_down(e) {\r\n    const { posts, dispatch, index } = this.props\r\n    let num_paragraphs = parseInt(posts[index].content.length)\r\n    let paragraph_index = parseInt(e.target.getAttribute(\"index\"))\r\n    let current_paragraph = e.target.value\r\n    let cursor_index = parseInt(e.target.selectionStart)\r\n\r\n    if(e.key === \"Enter\"){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      let staying_content = [...posts[index].content]\r\n      staying_content[paragraph_index] = current_paragraph.substring(0, cursor_index)\r\n      let created_content = current_paragraph.substring(cursor_index)\r\n      dispatch(update_post({...posts[index], content: staying_content}, index)) \r\n      dispatch(add_new_paragraph(index, paragraph_index, created_content))  \r\n      this.setState({\r\n        post_update_focus_paragraph_index: paragraph_index + 1,\r\n        post_update_focus_character_index: 0\r\n      })    \r\n    } \r\n    else if(e.key === \"Backspace\" && cursor_index === 0 && paragraph_index > 0){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      let merged_content = [...posts[index].content]\r\n      merged_content[paragraph_index - 1] = merged_content[paragraph_index - 1] + current_paragraph\r\n      dispatch(update_post({...posts[index], content: merged_content}, index)) \r\n      dispatch(remove_paragraph(index, paragraph_index)) \r\n      this.setState({\r\n        post_update_focus_paragraph_index: paragraph_index - 1,\r\n        post_update_focus_character_index: merged_content[paragraph_index - 1].length - current_paragraph.length\r\n      })    \r\n    } \r\n    else if (e.key === \"Delete\" && cursor_index === current_paragraph.length && paragraph_index < num_paragraphs - 1){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      let merged_content = [...posts[index].content]\r\n      merged_content[paragraph_index] = current_paragraph + merged_content[paragraph_index + 1] \r\n      dispatch(update_post({...posts[index], content: merged_content}, index)) \r\n      dispatch(remove_paragraph(index, paragraph_index + 1))\r\n      this.setState({\r\n        post_update_focus_paragraph_index: paragraph_index,\r\n        post_update_focus_character_index: current_paragraph.length\r\n      })    \r\n    } \r\n    else if (e.key === \"ArrowUp\" && cursor_index === 0 && paragraph_index > 0){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      this.focus(paragraph_index - 1, cursor_index)\r\n    } \r\n    else if (e.key === \"ArrowDown\" && cursor_index === current_paragraph.length && paragraph_index < num_paragraphs - 1){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      this.focus(paragraph_index + 1, cursor_index)\r\n    } \r\n    else if (e.key === \"ArrowLeft\" && cursor_index === 0 && paragraph_index > 0){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      this.focus(paragraph_index - 1, Number.MAX_VALUE)\r\n    } \r\n    else if (e.key === \"ArrowRight\" && cursor_index === current_paragraph.length && paragraph_index < num_paragraphs - 1){\r\n      e.stopPropagation();\r\n      e.preventDefault() // this prevents update_content\r\n      this.focus(paragraph_index + 1, 0)\r\n    } \r\n  }\r\n  handle_blur(e) {\r\n    this.setState({\r\n      image_div_show: false,\r\n    })\r\n  }\r\n  handle_focus(e) {\r\n    // check to show image tooltip\r\n    if(e.target.nodeName===\"TEXTAREA\"){\r\n      this.setState({\r\n        focus_index: e.target.getAttribute(\"index\"),\r\n        image_div_show: e.target.value.length === 0,\r\n        image_div_y: e.target.offsetTop\r\n      })\r\n    } else {\r\n      // Don't show when focus is set on image\r\n      this.setState({ image_div_show: false })\r\n    }\r\n  }\r\n  handle_add_image_button(e) {\r\n    const { posts, index, dispatch } = this.props\r\n    let f = e.target.files[0]\r\n    if(f.type.startsWith(\"image\")){\r\n      dispatch(upload_image(f, posts[index], index, this.state.focus_index))\r\n    }\r\n  }\r\n\r\n  update_content(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index } = this.props\r\n    var new_content = [...posts[index].content]\r\n    new_content[e.target.getAttribute(\"index\")] = e.target.value\r\n    this.setState({\r\n      image_div_show: e.target.value.length === 0\r\n    })\r\n    dispatch(update_post({...posts[index], content: new_content}, index)) \r\n  }\r\n\r\n  render() {\r\n    const { index, posts } = this.props\r\n    let post = index !== -1? posts[index]: {content: []}\r\n    return (\r\n      <div className=\"row content-editor-container content-row\">\r\n        <div className=\"add-image-div\" style={{top: this.state.image_div_y + \"px\" }}>\r\n          <input type=\"file\" name=\"file\" className=\"file-selector\" id=\"file-selector\" onChange={this.handle_add_image_button}/>\r\n          <label htmlFor=\"file-selector\" className={this.state.image_div_show ? \"add-file-label show\":\"add-file-label\"}>\r\n            <img className=\"add-file-img\" src=\"/assets/icons/plus-sign.png\" alt=\"Add Button\" />\r\n          </label>\r\n        </div>\r\n        {post.content.map((i, key) => {\r\n          if(isMyImageURL(i)){\r\n            return <div key={key} index={key} tabIndex={key} className=\"post-editor-paragraph aws-image-wrapper\" \r\n                    onKeyDown={this.image_key_down} \r\n                    onBlur={this.handle_blur}\r\n                    onFocus={this.handle_focus}> \r\n                    <img className=\"aws-image \" src={convertMyImageURL(i)} alt=\"Loaded from AWS\" /> \r\n                  </div>\r\n          }\r\n          else {\r\n            // post-editor-paragrph : used to manage focusing\r\n            // content-paragraph    : used to match style with paragraphs in PostEditor\r\n            return <textarea key={key} index={key} tabIndex={key} className=\"content-editor-text-area resize-required post-editor-paragraph content-paragraph\" \r\n                    value={i} \r\n                    onChange={this.update_content} \r\n                    onKeyDown={this.key_down}\r\n                    onFocus={this.handle_focus}\r\n                    onBlur={this.handle_blur}\r\n                    placeholder={key===0?\"What's on your Mind?\":\"\"}/>\r\n          }\r\n          \r\n        })}\r\n      </div> \r\n    )\r\n  }\r\n}\r\n\r\nContentEditor.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  edit_mode: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { selected_post, edit_mode } = state.AdminReducer\r\n  const { posts } = state.BlogReducer\r\n  return { \r\n    index: selected_post,\r\n    posts: posts,\r\n    edit_mode: edit_mode\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContentEditor);\r\n","import React, { Component } from 'react';\r\nimport { format_date } from '../Utils/HelperFunctions';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  fetch_posts,\r\n  update_post\r\n} from '../Redux/BlogActions'\r\n\r\nimport {\r\n  change_edit_mode,\r\n  save_local_changes,\r\n  delete_post\r\n} from '../Redux/AdminActions'\r\n\r\n\r\nimport { \r\n  isMyImageURL,\r\n  convertMyImageURL\r\n} from '../Utils/HelperFunctions';\r\n\r\nimport PublicToggle from './PublicToggle';\r\nimport ContentEditor from './ContentEditor';\r\nimport './PostEditor.scss';\r\n\r\nclass PostEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.enterEditMode = this.enterEditMode.bind(this);\r\n    this.update_title = this.update_title.bind(this);\r\n    this.update_tags = this.update_tags.bind(this);\r\n    this.save_changes = this.save_changes.bind(this);\r\n    this.cancel_changes = this.cancel_changes.bind(this);\r\n    this.handle_delete_button = this.handle_delete_button.bind(this);\r\n\r\n    this.title_input_ref = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0) // Need to scroll to top if coming from /blog\r\n  }\r\n  componentDidUpdate() {\r\n    // Resize title\r\n    let dom = this.title_input_ref.current\r\n    if(dom){\r\n      dom.style.height = \"0px\"\r\n      dom.style.height = (dom.scrollHeight+1) + \"px\"\r\n    }\r\n    \r\n  }\r\n  enterEditMode(e) {\r\n    e.stopPropagation();\r\n    const { dispatch } = this.props\r\n    dispatch(change_edit_mode(true))\r\n  }\r\n\r\n  update_title(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index } = this.props\r\n    dispatch(update_post({...posts[index], title: e.target.value}, index)) \r\n  }\r\n  update_tags(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index } = this.props\r\n    dispatch(update_post({...posts[index], tags: e.target.value.split(',')}, index)) \r\n  }\r\n\r\n  save_changes(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index  } = this.props\r\n    dispatch(save_local_changes(posts[index]))\r\n  }\r\n\r\n  cancel_changes(e) {\r\n    e.stopPropagation();\r\n    const { dispatch  } = this.props\r\n    dispatch(fetch_posts())\r\n    dispatch(change_edit_mode(false))\r\n  }\r\n\r\n  handle_delete_button(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index } = this.props\r\n    dispatch(delete_post(posts[index]['_id']))\r\n  }\r\n  \r\n  render() {\r\n    const { edit_mode, logged_in, index, posts } = this.props\r\n    let formatted_date = \"\"\r\n    let post = {}\r\n    if( index !== -1 ) {\r\n      post = posts[index]\r\n      formatted_date = format_date(post.createtime)\r\n    }\r\n    return (\r\n      <div className=\"row post-editor-container\">\r\n        {index > -1 &&\r\n          <div className={edit_mode ? \"col post-editor-main-col hidden\" : \"col post-editor-main-col\"}> \r\n            <div className=\"row title-row\">\r\n              <p className=\"plain-title\">{post.title}</p>\r\n            </div>\r\n            <div className=\"row information-row\">\r\n              <div className=\"col-5 no-padding\">\r\n                {formatted_date}\r\n              </div>\r\n              <div className=\"col-7 no-padding\">\r\n                <div className=\"float-right\">\r\n                  <span className=\"tags-label\">Tags : </span>\r\n                  {post.tags.map((item, index) =>\r\n                    <span key={index} className={\"tag \" + item}>\r\n                      {item + \", \"}                  \r\n                    </span>\r\n                  )}           \r\n                  {logged_in &&\r\n                    <span className=\"edit-button\" onClick={this.enterEditMode} >Edit Post</span>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row content-row\">\r\n              {post.content.map((i, key) => {\r\n                if(isMyImageURL(i)){\r\n                  return <img key={key} className=\"aws-image\" src={convertMyImageURL(i)} alt=\"Loaded from AWS\" /> \r\n                } else {\r\n                  return <div className=\"plain-content content-paragraph\" key={key}>{i}</div>\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        }\r\n        {index > -1 && \r\n          <div className={edit_mode ? \"col post-editor-main-col\" : \"col post-editor-main-col hidden\"}>\r\n            <div className=\"row title-row\">\r\n              <textarea ref={this.title_input_ref} value={post.title} onChange={this.update_title} placeholder=\"Your Title...\"/>\r\n            </div>\r\n            <div className=\"row information-row\">\r\n              <div className=\"col-sm-12 col-md-5 no-padding\">\r\n                {formatted_date}\r\n              </div>\r\n              <div className=\"col-sm-12 col-md-7 no-padding\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 offset-lg-3 col-lg-9 offset-xl-5 col-xl-7\">\r\n                    <span className=\"tags-label \">Tags : </span>\r\n                    <input  className=\"tags-input\" type=\"text\" value={post.tags} onChange={this.update_tags} placeholder=\"tag, tag, ...\"/>                  \r\n                    <span className=\"toggle-label\">Public: </span> \r\n                    <PublicToggle />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <ContentEditor />\r\n            <div className=\"row button-row\">\r\n              <div>\r\n                <button className=\"save-button\" type=\"button\" onClick={this.save_changes}>Save</button>\r\n                <button className=\"delete-button\" type=\"button\" onClick={this.handle_delete_button}>Delete</button>\r\n                <button className=\"cancel-button\" type=\"button\" onClick={this.cancel_changes}>Cancel</button>\r\n              </div>\r\n            </div>          \r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostEditor.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  edit_mode: PropTypes.bool.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { edit_mode, selected_post } = state.AdminReducer\r\n  const { posts } = state.BlogReducer\r\n  return {\r\n    logged_in: state.AdminReducer.logged_in,\r\n    edit_mode: edit_mode,\r\n    posts: posts,\r\n    index: selected_post\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostEditor);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { fetch_posts } from '../Redux/BlogActions'\r\nimport { create_new_post } from '../Redux/AdminActions'\r\n\r\n// components \r\nimport AdminPost from './AdminPost';\r\nimport PostEditor from './PostEditor';\r\nimport './AdminBlog.scss';\r\n\r\nclass AdminBlog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNewPostButton = this.handleNewPostButton.bind(this);\r\n  }\r\n\r\n  handleNewPostButton(e) {\r\n    e.stopPropagation();\r\n    const { dispatch } = this.props\r\n    dispatch(create_new_post())\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props\r\n    dispatch(fetch_posts())\r\n  }\r\n\r\n  renderRedirect() {\r\n    const { logged_in } = this.props\r\n    if(!logged_in) {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n  }\r\n\r\n  render() { \r\n    const { posts, logged_in } = this.props\r\n    return (\r\n      <div className='row admin-blog-container'>\r\n        {this.renderRedirect()}\r\n        <div id=\"blog-column\" className=\"col-12 col-sm-3 post-column\">\r\n          <div className=\"row center post-column-title\">\r\n            <p className=\"h4\">Recent Posts</p>\r\n            {logged_in &&\r\n              <button className=\"new-post-button h3\" type=\"button\" onClick={this.handleNewPostButton}>+</button>\r\n            }\r\n          </div>\r\n          {posts.map((item, index) => \r\n            <AdminPost key={index} post_id={index} />\r\n          )}\r\n        </div>\r\n        <div className=\"col-12 col-sm-9\">\r\n          <PostEditor />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAdminBlog.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    logged_in: state.AdminReducer.logged_in,\r\n    posts: state.BlogReducer.posts \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AdminBlog);\r\n","import React, { Component } from 'react';\r\nimport './Editable.scss';\r\n\r\nclass Editable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        rows: [\"\"],\r\n        index: 0\r\n    }\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n    this.keyDownHandler = this.keyDownHandler.bind(this);\r\n  }\r\n\r\n  clickHandler(event) {\r\n    this.setState({index: event.target.tabIndex})\r\n  }\r\n  keyDownHandler(event) {\r\n    event.preventDefault();\r\n    var original = this.state.rows\r\n    var index = this.state.index\r\n    if (event.key.length === 1) {\r\n      original[index] += event.key\r\n    } else if(event.key===\"Enter\"){\r\n      original.splice(index+1, 0, \"\")\r\n      // Shift focus\r\n      index += 1\r\n    } else if(event.key===\"Backspace\"){\r\n      if(original[index] === \"\"){\r\n        original.splice(index, 1)\r\n        index -= 1\r\n      } else {\r\n        original[index] = original[index].slice(0,-1)\r\n      }     \r\n    } \r\n    this.setState({\r\n      rows: original,\r\n      index: index\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { rows } = this.state\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col\" id=\"editable-container\">\r\n          <p className=\"row \" contentEditable={true}></p>\r\n          <p className=\"row \" contentEditable={true}></p>\r\n          {rows.map((item, index) => \r\n              <div key={index}\r\n                tabIndex={index}\r\n                className=\"row editable\"  \r\n                onClick={this.clickHandler} \r\n                onKeyDown={this.keyDownHandler}>\r\n                {item}\r\n              </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Editable;\r\n","import React, { Component } from 'react';\r\n\r\nclass FileSender extends Component {  \r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        selectedFile: null\r\n      }\r\n      this.onChangeHandler = this.onChangeHandler.bind(this);\r\n      this.onClickHandler = this.onClickHandler.bind(this);\r\n  }\r\n  onChangeHandler(event) {\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n      loaded: 0\r\n    })\r\n  }\r\n  onClickHandler() {\r\n    const data = new FormData() \r\n    data.append('file', this.state.selectedFile)\r\n    fetch(\"http://localhost:4000/files/upload\", {\r\n      method: 'POST',\r\n      body: data\r\n    }).then( function(res){\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row sender-container\">\r\n        <input type=\"file\" id=\"file\" name=\"file\" onChange={this.onChangeHandler} style={{\r\n          border: \"solid 1px black\",\r\n          width:\"100%\", \r\n          marginBottom: \"2px\"}}/>\r\n        <label htmlFor=\"file\">SHIT</label>\r\n        <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FileSender;\r\n","import React, { Component } from 'react';\r\nimport Editable from './Editable';\r\nimport FileSender from './FileSender';\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"row\" style={{minHeight: \"80vh\"}}>\r\n          <div className=\"col\">\r\n            <Editable />\r\n            <FileSender />\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport './NotReady.scss';\r\n\r\nclass NonExistentRoute extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row all-notready-container\">\r\n        <div className=\"jumbotron\">\r\n          <h1 className=\"display-4\">This Page Doesn't Exist...</h1>\r\n          <p className=\"lead\">Looks like you are trying to reach a page that does not exist. Check your URL one more time! Meanwhile, here is a cool link below!</p>\r\n          <a className=\"btn btn-primary btn-lg\" href=\"https://www.youtube.com/watch?v=DNWWi8RYzhM\" role=\"button\">Surprise Link</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NonExistentRoute;\r\n","import {\r\n  CLEAR_POSTS,\r\n  UPDATE_POST,\r\n  RECEIVE_POSTS,\r\n  ADD_NEW_POST,\r\n  ADD_NEW_PARAGRAPH,\r\n  REMOVE_PARAGRAPH\r\n} from './BlogActions'\r\n\r\n// The initial application state\r\nlet initialState = {\r\n  id2index: {},\r\n  posts: []\r\n}\r\n\r\n// Takes care of changing the application state\r\nfunction BlogReducer(state = initialState, action) {\r\n  var new_posts = [...state.posts]\r\n  switch (action.type) {\r\n    case REMOVE_PARAGRAPH:\r\n      new_posts[action.post_index].content.splice(action.paragraph_index, 1)\r\n      return { ...state, posts: new_posts }\r\n    case ADD_NEW_PARAGRAPH:\r\n      new_posts[action.post_index].content.splice(parseInt(action.paragraph_index) + 1, 0, action.initial_content)\r\n      return { ...state, posts: new_posts }\r\n    case CLEAR_POSTS:\r\n      return { ...state, posts: action.posts, id2index: action.id2index }\r\n    case UPDATE_POST:\r\n      new_posts[action.index] = action.new_post\r\n      return { ...state, posts: new_posts}\r\n    case RECEIVE_POSTS:\r\n      return { ...state, posts: action.posts, id2index: action.id2index }\r\n    case ADD_NEW_POST:\r\n      new_posts.unshift(action.new_post)\r\n      return { ...state, posts: new_posts }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default BlogReducer","import {\r\n  VIEWPOST,\r\n  SIGN_OUT,\r\n  FAILED_ADMIN_PASSWORD,\r\n  SUCCEEDED_ADMIN_PASSWORD,\r\n  CHANGE_EDIT_MODE\r\n} from './AdminActions'\r\n\r\n// The initial application state\r\nlet initialState = {\r\n  failed_attempt: false,\r\n  logged_in: false,\r\n  edit_mode: false,\r\n  selected_post: -1\r\n}\r\n\r\n// Takes care of changing the application state\r\nfunction AdminReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case VIEWPOST:\r\n      return { ...state, selected_post: action.post_id }\r\n    case SIGN_OUT:\r\n      return { ...state, logged_in: false }\r\n    case FAILED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: true }\r\n    case SUCCEEDED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: false, logged_in: true }\r\n    case CHANGE_EDIT_MODE:\r\n      return { ...state, edit_mode: action.edit_mode }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AdminReducer","\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport BlogReducer from './BlogReducer';\r\nimport AdminReducer from './AdminReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  BlogReducer,\r\n  AdminReducer\r\n});\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\nexport default store\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Home from '../Home/Home';\r\nimport MainBlogPage from '../Blog/MainBlogPage';\r\nimport PostViewer from '../Blog/PostViewer';\r\nimport LogInPage from '../Admin/LogInPage';\r\nimport AdminBlog from '../Admin/AdminBlog';\r\nimport Testing from '../Testing/Main';\r\n//import NotReady from '../Warnings/NotReady';\r\nimport NonExistentRoute from '../Warnings/NonExistentRoute';\r\nimport './Main.scss';\r\n\r\n// Other \r\nimport store from \"../Redux/Store\";\r\nimport * as Sentry from '@sentry/react';\r\nimport {\r\n  metaDefault\r\n} from \"../Utils/MetaHelpers\";\r\n\r\nSentry.init({ dsn: \"https://eafc03ce34b94dd98b03f1fc08903681@o418535.ingest.sentry.io/5321569\" });\r\n\r\n\r\nclass Main extends Component {\r\n  // NOTE THAT path=\"/api/\" is already reserved for backend\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        {metaDefault()}\r\n        <div className='container-fluid base_container main-container'>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/blog\" component={MainBlogPage} />\r\n            <Route exact path=\"/blog/:id\" component={PostViewer} />\r\n            <Route exact path=\"/admin\" component={AdminBlog} />\r\n            <Route exact path=\"/admin\" component={AdminBlog} />\r\n            <Route exact path=\"/login\" component={LogInPage} />\r\n            <Route exact path=\"/test\" component={Testing} />\r\n            <Route component={NonExistentRoute} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import \"bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './Common/Main';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Main />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}