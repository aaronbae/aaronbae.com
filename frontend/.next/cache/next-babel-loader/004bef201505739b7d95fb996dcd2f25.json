{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { VIEWPOST, SIGN_OUT, FAILED_ADMIN_PASSWORD, SUCCEEDED_ADMIN_PASSWORD, CHANGE_EDIT_MODE } from './AdminActions'; // The initial application state\n\nlet initialState = {\n  failed_attempt: false,\n  logged_in: false,\n  edit_mode: false,\n  selected_post: -1\n}; // Takes care of changing the application state\n\nfunction AdminReducer(state = initialState, action) {\n  switch (action.type) {\n    case VIEWPOST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected_post: action.post_id\n      });\n\n    case SIGN_OUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logged_in: false\n      });\n\n    case FAILED_ADMIN_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        failed_attempt: true\n      });\n\n    case SUCCEEDED_ADMIN_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        failed_attempt: false,\n        logged_in: true\n      });\n\n    case CHANGE_EDIT_MODE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        edit_mode: action.edit_mode\n      });\n\n    default:\n      return state;\n  }\n}\n\n_c = AdminReducer;\nexport default AdminReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminReducer\");","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/frontend/components/Redux/AdminReducer.js"],"names":["VIEWPOST","SIGN_OUT","FAILED_ADMIN_PASSWORD","SUCCEEDED_ADMIN_PASSWORD","CHANGE_EDIT_MODE","initialState","failed_attempt","logged_in","edit_mode","selected_post","AdminReducer","state","action","type","post_id"],"mappings":";;;;;;AAAA,SACEA,QADF,EAEEC,QAFF,EAGEC,qBAHF,EAIEC,wBAJF,EAKEC,gBALF,QAMO,gBANP,C,CAQA;;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,KADC;AAEjBC,EAAAA,SAAS,EAAE,KAFM;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,aAAa,EAAE,CAAC;AAJC,CAAnB,C,CAOA;;AACA,SAASC,YAAT,CAAsBC,KAAK,GAAGN,YAA9B,EAA4CO,MAA5C,EAAoD;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,QAAL;AACE,6CAAYW,KAAZ;AAAmBF,QAAAA,aAAa,EAAEG,MAAM,CAACE;AAAzC;;AACF,SAAKb,QAAL;AACE,6CAAYU,KAAZ;AAAmBJ,QAAAA,SAAS,EAAE;AAA9B;;AACF,SAAKL,qBAAL;AACE,6CAAYS,KAAZ;AAAmBL,QAAAA,cAAc,EAAE;AAAnC;;AACF,SAAKH,wBAAL;AACE,6CAAYQ,KAAZ;AAAmBL,QAAAA,cAAc,EAAE,KAAnC;AAA0CC,QAAAA,SAAS,EAAE;AAArD;;AACF,SAAKH,gBAAL;AACE,6CAAYO,KAAZ;AAAmBH,QAAAA,SAAS,EAAEI,MAAM,CAACJ;AAArC;;AACF;AACE,aAAOG,KAAP;AAZJ;AAcD;;KAfQD,Y;AAiBT,eAAeA,YAAf","sourcesContent":["import {\r\n  VIEWPOST,\r\n  SIGN_OUT,\r\n  FAILED_ADMIN_PASSWORD,\r\n  SUCCEEDED_ADMIN_PASSWORD,\r\n  CHANGE_EDIT_MODE\r\n} from './AdminActions'\r\n\r\n// The initial application state\r\nlet initialState = {\r\n  failed_attempt: false,\r\n  logged_in: false,\r\n  edit_mode: false,\r\n  selected_post: -1\r\n}\r\n\r\n// Takes care of changing the application state\r\nfunction AdminReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case VIEWPOST:\r\n      return { ...state, selected_post: action.post_id }\r\n    case SIGN_OUT:\r\n      return { ...state, logged_in: false }\r\n    case FAILED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: true }\r\n    case SUCCEEDED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: false, logged_in: true }\r\n    case CHANGE_EDIT_MODE:\r\n      return { ...state, edit_mode: action.edit_mode }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AdminReducer"]},"metadata":{},"sourceType":"module"}