{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaron\\\\Desktop\\\\aaronbae.com\\\\frontend\\\\components\\\\Admin\\\\AdminBlog.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'; // Redux handlers\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetch_posts } from '../Redux/BlogActions';\nimport { create_new_post } from '../Redux/AdminActions'; // components \n\nimport AdminPost from './AdminPost';\nimport PostEditor from './PostEditor';\nimport './AdminBlog.scss';\n\nclass AdminBlog extends Component {\n  constructor(props) {\n    super(props);\n    this.handleNewPostButton = this.handleNewPostButton.bind(this);\n  }\n\n  handleNewPostButton(e) {\n    e.stopPropagation();\n    const {\n      dispatch\n    } = this.props;\n    dispatch(create_new_post());\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    dispatch(fetch_posts());\n  }\n\n  renderRedirect() {\n    const {\n      logged_in\n    } = this.props;\n\n    if (!logged_in) {\n      return __jsx(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      posts,\n      logged_in\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"row admin-blog-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, this.renderRedirect(), __jsx(\"div\", {\n      id: \"blog-column\",\n      className: \"col-12 col-sm-3 post-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"row center post-column-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Recent Posts\"), logged_in && __jsx(\"button\", {\n      className: \"new-post-button h3\",\n      type: \"button\",\n      onClick: this.handleNewPostButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"+\")), posts.map((item, index) => __jsx(AdminPost, {\n      key: index,\n      post_id: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }))), __jsx(\"div\", {\n      className: \"col-12 col-sm-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, __jsx(PostEditor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nAdminBlog.propTypes = {\n  logged_in: PropTypes.bool.isRequired,\n  posts: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    logged_in: state.AdminReducer.logged_in,\n    posts: state.BlogReducer.posts\n  };\n}\n\nexport default connect(mapStateToProps)(AdminBlog);","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/frontend/components/Admin/AdminBlog.js"],"names":["React","Component","Redirect","PropTypes","connect","fetch_posts","create_new_post","AdminPost","PostEditor","AdminBlog","constructor","props","handleNewPostButton","bind","e","stopPropagation","dispatch","componentDidMount","renderRedirect","logged_in","render","posts","map","item","index","propTypes","bool","isRequired","array","func","mapStateToProps","state","AdminReducer","BlogReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { fetch_posts } from '../Redux/BlogActions'\r\nimport { create_new_post } from '../Redux/AdminActions'\r\n\r\n// components \r\nimport AdminPost from './AdminPost';\r\nimport PostEditor from './PostEditor';\r\nimport './AdminBlog.scss';\r\n\r\nclass AdminBlog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNewPostButton = this.handleNewPostButton.bind(this);\r\n  }\r\n\r\n  handleNewPostButton(e) {\r\n    e.stopPropagation();\r\n    const { dispatch } = this.props\r\n    dispatch(create_new_post())\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props\r\n    dispatch(fetch_posts())\r\n  }\r\n\r\n  renderRedirect() {\r\n    const { logged_in } = this.props\r\n    if(!logged_in) {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n  }\r\n\r\n  render() { \r\n    const { posts, logged_in } = this.props\r\n    return (\r\n      <div className='row admin-blog-container'>\r\n        {this.renderRedirect()}\r\n        <div id=\"blog-column\" className=\"col-12 col-sm-3 post-column\">\r\n          <div className=\"row center post-column-title\">\r\n            <p className=\"h4\">Recent Posts</p>\r\n            {logged_in &&\r\n              <button className=\"new-post-button h3\" type=\"button\" onClick={this.handleNewPostButton}>+</button>\r\n            }\r\n          </div>\r\n          {posts.map((item, index) => \r\n            <AdminPost key={index} post_id={index} />\r\n          )}\r\n        </div>\r\n        <div className=\"col-12 col-sm-9\">\r\n          <PostEditor />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAdminBlog.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    logged_in: state.AdminReducer.logged_in,\r\n    posts: state.BlogReducer.posts \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AdminBlog);\r\n"]},"metadata":{},"sourceType":"module"}