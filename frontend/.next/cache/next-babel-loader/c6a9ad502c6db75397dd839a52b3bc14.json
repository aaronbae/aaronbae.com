{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaron\\\\Desktop\\\\aaronbae.com\\\\frontend\\\\src\\\\pages\\\\projects\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Project from '../../components/Projects/Project';\nimport '../../styles/Projects/index.css';\nexport default function Projects() {\n  return __jsx(\"div\", {\n    id: \"projects-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"highlighted-projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(Project, {\n    section_title: \"Featured Projects\",\n    title: \"AaronBae.com\",\n    tech_tags: \"NextJS, Express, MongoDB\",\n    title_url: \"https://www.aaronbae.com\",\n    github_url: \"https://github.com/aaronbae/aaronbae.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"aaronbae-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"/projects/aaronbae.png\",\n    className: \"project-img\",\n    alt: \"aaronbae.com project screenshot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), __jsx(\"ul\", {\n    className: \"aaronbae-project-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, \"A personal website built on NextJS and React\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, \"Includes a custom blog feature that was built from ground up\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, \"MongoDB backend to handle the blog posts\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, \"AWS EC2 to host the website\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, \"AWS S3 to host the images to the blog\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, \"ExpressJS to handle the backend\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, \"SEO functionality possible via NextJS\"), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, \"Intended for collaborators and recruiters to learn more about me\"))), __jsx(\"div\", {\n    className: \"expand-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"d\"))), __jsx(\"div\", {\n    className: \"non-highlighted-projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Project, {\n    title: \"HighCurve\",\n    title_url: \"https://github.com/aaronbae/HighCurve\",\n    github_url: \"https://github.com/aaronbae/HighCurve\",\n    tech_tags: \"MongoDB, YahooAPI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Finance App is intended to be used as an analytical tool from the historical stock values. It automatically pulls daily Open-High-Low-Close (OHLC) values from Yahoo API, and shows the users the stocks of their choosing.\")), __jsx(Project, {\n    title: \"Human Dialogue\",\n    private: true,\n    tech_tags: \"Python, HuggingFace\",\n    title_url: \"https://github.com/aaronbae/HumanDialogue\",\n    github_url: \"https://github.com/aaronbae/HumanDialogue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Humang Dialogue quantifies the information exchange within a conversation. We are using a BERT-based transformer models to identify question-answer pairs within a transcript, and quantify them based on custom metrics.\")), __jsx(Project, {\n    title: \"AnaQA\",\n    tech_tags: \"Python, Pytorch, HotpotQA\",\n    title_url: \"https://github.com/aaronbae/AnaQA\",\n    github_url: \"https://github.com/aaronbae/AnaQA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"AnaQA is a project that merges together DecompRC and Dr.QA to create a different type of question answering system. Given a question in the form of an english sentence, it is able to answer them based on the data gathered from Wikipedia.\"))));\n}","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/frontend/src/pages/projects/index.js"],"names":["Project","Projects"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,OAAO,iCAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,SACE;AAAK,IAAA,EAAE,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,aAAa,EAAC,mBADhB;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,SAAS,EAAC,0BAHZ;AAIE,IAAA,SAAS,EAAC,0BAJZ;AAKE,IAAA,UAAU,EAAC,0CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,wBAAT;AAAkC,IAAA,SAAS,EAAC,aAA5C;AAA0D,IAAA,GAAG,EAAC,iCAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEARF,CAFF,CAPF,EAoBE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SApBF,CADF,CADF,EAyBE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,SAAS,EAAC,uCAFZ;AAGE,IAAA,UAAU,EAAC,uCAHb;AAIE,IAAA,SAAS,EAAC,mBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mOANF,CADF,EAaE,MAAC,OAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,OAAO,EAAE,IAFX;AAGE,IAAA,SAAS,EAAC,qBAHZ;AAIE,IAAA,SAAS,EAAC,2CAJZ;AAKE,IAAA,UAAU,EAAC,2CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iOAPF,CAbF,EA0BE,MAAC,OAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,SAAS,EAAC,2BAFZ;AAGE,IAAA,SAAS,EAAC,mCAHZ;AAIE,IAAA,UAAU,EAAC,mCAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qPANF,CA1BF,CAzBF,CADF;AAmED","sourcesContent":["import Project from '../../components/Projects/Project'\r\nimport '../../styles/Projects/index.css'\r\n\r\nexport default function Projects() {\r\n  return (\r\n    <div id=\"projects-container\">\r\n      <div className=\"highlighted-projects\">\r\n        <Project \r\n          section_title=\"Featured Projects\"\r\n          title=\"AaronBae.com\" \r\n          tech_tags=\"NextJS, Express, MongoDB\" \r\n          title_url=\"https://www.aaronbae.com\"\r\n          github_url=\"https://github.com/aaronbae/aaronbae.com\"\r\n        >\r\n          <div className=\"aaronbae-content\">\r\n            <img src=\"/projects/aaronbae.png\" className=\"project-img\" alt=\"aaronbae.com project screenshot\" />\r\n            <ul className=\"aaronbae-project-list\">\r\n              <li>A personal website built on NextJS and React</li>\r\n              <li>Includes a custom blog feature that was built from ground up</li>\r\n              <li>MongoDB backend to handle the blog posts</li>\r\n              <li>AWS EC2 to host the website</li>\r\n              <li>AWS S3 to host the images to the blog</li>\r\n              <li>ExpressJS to handle the backend</li>\r\n              <li>SEO functionality possible via NextJS</li>\r\n              <li>Intended for collaborators and recruiters to learn more about me</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"expand-wrapper\">d</div>\r\n        </Project>\r\n      </div>\r\n      <div className=\"non-highlighted-projects\">\r\n        <Project \r\n          title=\"HighCurve\"  \r\n          title_url=\"https://github.com/aaronbae/HighCurve\"\r\n          github_url=\"https://github.com/aaronbae/HighCurve\"\r\n          tech_tags=\"MongoDB, YahooAPI\" \r\n        >\r\n          <p>\r\n            Finance App is intended to be used as an analytical tool from the historical stock\r\n            values. It automatically pulls daily Open-High-Low-Close (OHLC) values from Yahoo API, \r\n            and shows the users the stocks of their choosing.\r\n          </p>\r\n        </Project> \r\n        <Project \r\n          title=\"Human Dialogue\" \r\n          private={true}\r\n          tech_tags=\"Python, HuggingFace\" \r\n          title_url=\"https://github.com/aaronbae/HumanDialogue\"\r\n          github_url=\"https://github.com/aaronbae/HumanDialogue\"\r\n        >\r\n          <p>\r\n            Humang Dialogue quantifies the information exchange within a conversation.\r\n            We are using a BERT-based transformer models to identify question-answer pairs within a \r\n            transcript, and quantify them based on custom metrics. \r\n          </p>\r\n        </Project> \r\n        <Project \r\n          title=\"AnaQA\" \r\n          tech_tags=\"Python, Pytorch, HotpotQA\" \r\n          title_url=\"https://github.com/aaronbae/AnaQA\"\r\n          github_url=\"https://github.com/aaronbae/AnaQA\"\r\n        >\r\n          <p>\r\n            AnaQA is a project that merges together DecompRC and Dr.QA to create a different type\r\n            of question answering system. Given a question in the form of an english sentence,\r\n            it is able to answer them based on the data gathered from Wikipedia. \r\n          </p>\r\n        </Project> \r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}