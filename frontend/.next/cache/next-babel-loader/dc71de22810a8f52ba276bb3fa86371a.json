{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { config } from '../Constants';\nimport { update_post, fetch_posts, add_new_post } from './BlogActions';\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const FAILED_ADMIN_PASSWORD = \"FAILED_ADMIN_PASSWORD\";\nexport const SUCCEEDED_ADMIN_PASSWORD = \"SUCCEEDED_ADMIN_PASSWORD\";\nexport const CHANGE_EDIT_MODE = \"CHANGE_EDIT_MODE\";\nexport const VIEWPOST = \"VIEW_POST\"; // Admin Actions\n\nexport function sign_out() {\n  return {\n    type: SIGN_OUT,\n    receivedAt: Date.now()\n  };\n}\n\nfunction receive_account_results(res) {\n  if (res.status === 400) {\n    return {\n      type: FAILED_ADMIN_PASSWORD,\n      receivedAt: Date.now()\n    };\n  }\n\n  return {\n    type: SUCCEEDED_ADMIN_PASSWORD,\n    receivedAt: Date.now()\n  };\n}\n\nexport function check_account(id, password) {\n  let data = {\n    login_id: id,\n    login_password: password\n  };\n  return dispatch => {\n    var url = config.url.USER_URL + \"login\";\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => dispatch(receive_account_results(res)));\n  };\n} // UI Changing Actions\n\nexport function change_edit_mode(boolean_value) {\n  return {\n    type: CHANGE_EDIT_MODE,\n    edit_mode: boolean_value\n  };\n}\nexport function viewpost(post_id) {\n  return {\n    type: VIEWPOST,\n    post_id: post_id\n  };\n} // Data Manipulating Actions\n\nexport function upload_image(file, post, index, paragraph_index) {\n  return dispatch => {\n    var url = config.url.FILE_URL + 'upload';\n    const data = new FormData();\n    data.append('file', file);\n    fetch(url, {\n      method: 'POST',\n      body: data\n    }).then(res => res.json()).then(res => {\n      let new_content = [...post.content];\n      new_content[paragraph_index] = res.url;\n\n      let new_post = _objectSpread(_objectSpread({}, post), {}, {\n        content: [...new_content]\n      });\n\n      dispatch(update_post(new_post, index));\n    });\n  };\n}\nexport function create_new_post() {\n  return dispatch => {\n    var url = config.url.POST_URL + \"add/\";\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(res => res.json()).then(res => {\n      dispatch(add_new_post(res.post));\n      dispatch(viewpost(0));\n      dispatch(change_edit_mode(true));\n    });\n  };\n}\nexport function save_local_changes(post) {\n  var url = config.url.POST_URL + \"update/\" + post._id.toString();\n\n  return dispatch => {\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(post)\n    }).then(res => dispatch(change_edit_mode(false)));\n  };\n}\nexport function delete_post(post_id) {\n  var url = config.url.POST_URL + \"delete/\" + post_id.toString();\n  return dispatch => {\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(() => dispatch(fetch_posts())).then(() => dispatch(change_edit_mode(false)));\n  };\n}","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/frontend/components/Redux/AdminActions.js"],"names":["config","update_post","fetch_posts","add_new_post","SIGN_OUT","FAILED_ADMIN_PASSWORD","SUCCEEDED_ADMIN_PASSWORD","CHANGE_EDIT_MODE","VIEWPOST","sign_out","type","receivedAt","Date","now","receive_account_results","res","status","check_account","id","password","data","login_id","login_password","dispatch","url","USER_URL","fetch","method","headers","body","JSON","stringify","then","change_edit_mode","boolean_value","edit_mode","viewpost","post_id","upload_image","file","post","index","paragraph_index","FILE_URL","FormData","append","json","new_content","content","new_post","create_new_post","POST_URL","save_local_changes","_id","toString","delete_post"],"mappings":"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","sourcesContent":["import { config } from '../Constants'\r\nimport { \r\n  update_post,\r\n  fetch_posts, \r\n  add_new_post \r\n} from './BlogActions'\r\n\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const FAILED_ADMIN_PASSWORD = \"FAILED_ADMIN_PASSWORD\";\r\nexport const SUCCEEDED_ADMIN_PASSWORD = \"SUCCEEDED_ADMIN_PASSWORD\";\r\nexport const CHANGE_EDIT_MODE = \"CHANGE_EDIT_MODE\";\r\nexport const VIEWPOST = \"VIEW_POST\";\r\n\r\n// Admin Actions\r\nexport function sign_out() {\r\n  return {\r\n    type: SIGN_OUT,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\nfunction receive_account_results(res) {\r\n  if(res.status === 400){\r\n    return {\r\n      type: FAILED_ADMIN_PASSWORD,\r\n      receivedAt: Date.now()\r\n    }\r\n  }\r\n  return {\r\n    type: SUCCEEDED_ADMIN_PASSWORD,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\nexport function check_account(id, password) {\r\n  let data = {\r\n    login_id: id,\r\n    login_password: password\r\n  }\r\n  return dispatch => {\r\n    var url = config.url.USER_URL + \"login\"\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }).then(res => dispatch(receive_account_results(res)))\r\n  }\r\n}\r\n\r\n// UI Changing Actions\r\nexport function change_edit_mode(boolean_value) {\r\n  return {\r\n    type: CHANGE_EDIT_MODE, \r\n    edit_mode: boolean_value\r\n  }\r\n}\r\nexport function viewpost(post_id) {\r\n  return {\r\n    type: VIEWPOST, \r\n    post_id: post_id\r\n  }\r\n}\r\n\r\n// Data Manipulating Actions\r\nexport function upload_image(file, post, index, paragraph_index) {\r\n  return dispatch => {\r\n    var url = config.url.FILE_URL + 'upload'\r\n    const data = new FormData() \r\n    data.append('file', file)\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: data\r\n    }).then(res => res.json())\r\n    .then(res => {\r\n      let new_content = [...post.content]\r\n      new_content[paragraph_index] = res.url\r\n      let new_post = {...post, content: [...new_content]}\r\n      dispatch(update_post(new_post, index))\r\n    })\r\n  }\r\n}\r\nexport function create_new_post() {\r\n  return dispatch => {\r\n    var url = config.url.POST_URL + \"add/\"\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({})\r\n    }).then(res => res.json())\r\n    .then(res => {\r\n      dispatch(add_new_post(res.post))\r\n      dispatch(viewpost(0))\r\n      dispatch(change_edit_mode(true))\r\n    })\r\n  }\r\n}\r\nexport function save_local_changes(post) {\r\n  var url = config.url.POST_URL + \"update/\" + post._id.toString()\r\n  return dispatch => {\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(post)\r\n    }).then(res => dispatch(change_edit_mode(false)))\r\n  }\r\n}\r\n\r\nexport function delete_post(post_id) {\r\n  var url = config.url.POST_URL + \"delete/\" +post_id.toString()\r\n  return dispatch => {\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n    .then(() => dispatch(fetch_posts()))\r\n    .then(() => dispatch(change_edit_mode(false)))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}