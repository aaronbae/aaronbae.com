{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aaron\\\\Desktop\\\\aaronbae.com\\\\frontend\\\\components\\\\Admin\\\\PostEditor.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { format_date } from '../Utils/HelperFunctions'; // Redux handlers\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetch_posts, update_post } from '../Redux/BlogActions';\nimport { change_edit_mode, save_local_changes, delete_post } from '../Redux/AdminActions';\nimport { isMyImageURL, convertMyImageURL } from '../Utils/HelperFunctions';\nimport PublicToggle from './PublicToggle';\nimport ContentEditor from './ContentEditor';\nimport './PostEditor.scss';\n\nclass PostEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.enterEditMode = this.enterEditMode.bind(this);\n    this.update_title = this.update_title.bind(this);\n    this.update_tags = this.update_tags.bind(this);\n    this.save_changes = this.save_changes.bind(this);\n    this.cancel_changes = this.cancel_changes.bind(this);\n    this.handle_delete_button = this.handle_delete_button.bind(this);\n    this.title_input_ref = React.createRef();\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0); // Need to scroll to top if coming from /blog\n  }\n\n  componentDidUpdate() {\n    // Resize title\n    let dom = this.title_input_ref.current;\n\n    if (dom) {\n      dom.style.height = \"0px\";\n      dom.style.height = dom.scrollHeight + 1 + \"px\";\n    }\n  }\n\n  enterEditMode(e) {\n    e.stopPropagation();\n    const {\n      dispatch\n    } = this.props;\n    dispatch(change_edit_mode(true));\n  }\n\n  update_title(e) {\n    e.stopPropagation();\n    const {\n      dispatch,\n      posts,\n      index\n    } = this.props;\n    dispatch(update_post(_objectSpread(_objectSpread({}, posts[index]), {}, {\n      title: e.target.value\n    }), index));\n  }\n\n  update_tags(e) {\n    e.stopPropagation();\n    const {\n      dispatch,\n      posts,\n      index\n    } = this.props;\n    dispatch(update_post(_objectSpread(_objectSpread({}, posts[index]), {}, {\n      tags: e.target.value.split(',')\n    }), index));\n  }\n\n  save_changes(e) {\n    e.stopPropagation();\n    const {\n      dispatch,\n      posts,\n      index\n    } = this.props;\n    dispatch(save_local_changes(posts[index]));\n  }\n\n  cancel_changes(e) {\n    e.stopPropagation();\n    const {\n      dispatch\n    } = this.props;\n    dispatch(fetch_posts());\n    dispatch(change_edit_mode(false));\n  }\n\n  handle_delete_button(e) {\n    e.stopPropagation();\n    const {\n      dispatch,\n      posts,\n      index\n    } = this.props;\n    dispatch(delete_post(posts[index]['_id']));\n  }\n\n  render() {\n    const {\n      edit_mode,\n      logged_in,\n      index,\n      posts\n    } = this.props;\n    let formatted_date = \"\";\n    let post = {};\n\n    if (index !== -1) {\n      post = posts[index];\n      formatted_date = format_date(post.createtime);\n    }\n\n    return __jsx(\"div\", {\n      className: \"row post-editor-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, index > -1 && __jsx(\"div\", {\n      className: edit_mode ? \"col post-editor-main-col hidden\" : \"col post-editor-main-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"row title-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      className: \"plain-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, post.title)), __jsx(\"div\", {\n      className: \"row information-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"col-5 no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, formatted_date), __jsx(\"div\", {\n      className: \"col-7 no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"tags-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, \"Tags : \"), post.tags.map((item, index) => __jsx(\"span\", {\n      key: index,\n      className: \"tag \" + item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, item + \", \")), logged_in && __jsx(\"span\", {\n      className: \"edit-button\",\n      onClick: this.enterEditMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"Edit Post\")))), __jsx(\"div\", {\n      className: \"row content-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, post.content.map((i, key) => {\n      if (isMyImageURL(i)) {\n        return __jsx(\"img\", {\n          key: key,\n          className: \"aws-image\",\n          src: convertMyImageURL(i),\n          alt: \"Loaded from AWS\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 26\n          }\n        });\n      } else {\n        return __jsx(\"div\", {\n          className: \"plain-content content-paragraph\",\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 26\n          }\n        }, i);\n      }\n    }))), index > -1 && __jsx(\"div\", {\n      className: edit_mode ? \"col post-editor-main-col\" : \"col post-editor-main-col hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"row title-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, __jsx(\"textarea\", {\n      ref: this.title_input_ref,\n      value: post.title,\n      onChange: this.update_title,\n      placeholder: \"Your Title...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"row information-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"col-sm-12 col-md-5 no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, formatted_date), __jsx(\"div\", {\n      className: \"col-sm-12 col-md-7 no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"col-sm-12 offset-lg-3 col-lg-9 offset-xl-5 col-xl-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      className: \"tags-label \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, \"Tags : \"), __jsx(\"input\", {\n      className: \"tags-input\",\n      type: \"text\",\n      value: post.tags,\n      onChange: this.update_tags,\n      placeholder: \"tag, tag, ...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }), __jsx(\"span\", {\n      className: \"toggle-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"Public: \"), __jsx(PublicToggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }))))), __jsx(ContentEditor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      className: \"row button-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, __jsx(\"button\", {\n      className: \"save-button\",\n      type: \"button\",\n      onClick: this.save_changes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"Save\"), __jsx(\"button\", {\n      className: \"delete-button\",\n      type: \"button\",\n      onClick: this.handle_delete_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \"Delete\"), __jsx(\"button\", {\n      className: \"cancel-button\",\n      type: \"button\",\n      onClick: this.cancel_changes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nPostEditor.propTypes = {\n  logged_in: PropTypes.bool.isRequired,\n  edit_mode: PropTypes.bool.isRequired,\n  posts: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nfunction mapStateToProps(state) {\n  const {\n    edit_mode,\n    selected_post\n  } = state.AdminReducer;\n  const {\n    posts\n  } = state.BlogReducer;\n  return {\n    logged_in: state.AdminReducer.logged_in,\n    edit_mode: edit_mode,\n    posts: posts,\n    index: selected_post\n  };\n}\n\nexport default connect(mapStateToProps)(PostEditor);","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/frontend/components/Admin/PostEditor.js"],"names":["React","Component","format_date","PropTypes","connect","fetch_posts","update_post","change_edit_mode","save_local_changes","delete_post","isMyImageURL","convertMyImageURL","PublicToggle","ContentEditor","PostEditor","constructor","props","enterEditMode","bind","update_title","update_tags","save_changes","cancel_changes","handle_delete_button","title_input_ref","createRef","componentDidMount","window","scrollTo","componentDidUpdate","dom","current","style","height","scrollHeight","e","stopPropagation","dispatch","posts","index","title","target","value","tags","split","render","edit_mode","logged_in","formatted_date","post","createtime","map","item","content","i","key","propTypes","bool","isRequired","array","number","mapStateToProps","state","selected_post","AdminReducer","BlogReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { format_date } from '../Utils/HelperFunctions';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  fetch_posts,\r\n  update_post\r\n} from '../Redux/BlogActions'\r\n\r\nimport {\r\n  change_edit_mode,\r\n  save_local_changes,\r\n  delete_post\r\n} from '../Redux/AdminActions'\r\n\r\n\r\nimport { \r\n  isMyImageURL,\r\n  convertMyImageURL\r\n} from '../Utils/HelperFunctions';\r\n\r\nimport PublicToggle from './PublicToggle';\r\nimport ContentEditor from './ContentEditor';\r\nimport './PostEditor.scss';\r\n\r\nclass PostEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.enterEditMode = this.enterEditMode.bind(this);\r\n    this.update_title = this.update_title.bind(this);\r\n    this.update_tags = this.update_tags.bind(this);\r\n    this.save_changes = this.save_changes.bind(this);\r\n    this.cancel_changes = this.cancel_changes.bind(this);\r\n    this.handle_delete_button = this.handle_delete_button.bind(this);\r\n\r\n    this.title_input_ref = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0) // Need to scroll to top if coming from /blog\r\n  }\r\n  componentDidUpdate() {\r\n    // Resize title\r\n    let dom = this.title_input_ref.current\r\n    if(dom){\r\n      dom.style.height = \"0px\"\r\n      dom.style.height = (dom.scrollHeight+1) + \"px\"\r\n    }\r\n    \r\n  }\r\n  enterEditMode(e) {\r\n    e.stopPropagation();\r\n    const { dispatch } = this.props\r\n    dispatch(change_edit_mode(true))\r\n  }\r\n\r\n  update_title(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index } = this.props\r\n    dispatch(update_post({...posts[index], title: e.target.value}, index)) \r\n  }\r\n  update_tags(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index } = this.props\r\n    dispatch(update_post({...posts[index], tags: e.target.value.split(',')}, index)) \r\n  }\r\n\r\n  save_changes(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index  } = this.props\r\n    dispatch(save_local_changes(posts[index]))\r\n  }\r\n\r\n  cancel_changes(e) {\r\n    e.stopPropagation();\r\n    const { dispatch  } = this.props\r\n    dispatch(fetch_posts())\r\n    dispatch(change_edit_mode(false))\r\n  }\r\n\r\n  handle_delete_button(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts, index } = this.props\r\n    dispatch(delete_post(posts[index]['_id']))\r\n  }\r\n  \r\n  render() {\r\n    const { edit_mode, logged_in, index, posts } = this.props\r\n    let formatted_date = \"\"\r\n    let post = {}\r\n    if( index !== -1 ) {\r\n      post = posts[index]\r\n      formatted_date = format_date(post.createtime)\r\n    }\r\n    return (\r\n      <div className=\"row post-editor-container\">\r\n        {index > -1 &&\r\n          <div className={edit_mode ? \"col post-editor-main-col hidden\" : \"col post-editor-main-col\"}> \r\n            <div className=\"row title-row\">\r\n              <p className=\"plain-title\">{post.title}</p>\r\n            </div>\r\n            <div className=\"row information-row\">\r\n              <div className=\"col-5 no-padding\">\r\n                {formatted_date}\r\n              </div>\r\n              <div className=\"col-7 no-padding\">\r\n                <div className=\"float-right\">\r\n                  <span className=\"tags-label\">Tags : </span>\r\n                  {post.tags.map((item, index) =>\r\n                    <span key={index} className={\"tag \" + item}>\r\n                      {item + \", \"}                  \r\n                    </span>\r\n                  )}           \r\n                  {logged_in &&\r\n                    <span className=\"edit-button\" onClick={this.enterEditMode} >Edit Post</span>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row content-row\">\r\n              {post.content.map((i, key) => {\r\n                if(isMyImageURL(i)){\r\n                  return <img key={key} className=\"aws-image\" src={convertMyImageURL(i)} alt=\"Loaded from AWS\" /> \r\n                } else {\r\n                  return <div className=\"plain-content content-paragraph\" key={key}>{i}</div>\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        }\r\n        {index > -1 && \r\n          <div className={edit_mode ? \"col post-editor-main-col\" : \"col post-editor-main-col hidden\"}>\r\n            <div className=\"row title-row\">\r\n              <textarea ref={this.title_input_ref} value={post.title} onChange={this.update_title} placeholder=\"Your Title...\"/>\r\n            </div>\r\n            <div className=\"row information-row\">\r\n              <div className=\"col-sm-12 col-md-5 no-padding\">\r\n                {formatted_date}\r\n              </div>\r\n              <div className=\"col-sm-12 col-md-7 no-padding\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 offset-lg-3 col-lg-9 offset-xl-5 col-xl-7\">\r\n                    <span className=\"tags-label \">Tags : </span>\r\n                    <input  className=\"tags-input\" type=\"text\" value={post.tags} onChange={this.update_tags} placeholder=\"tag, tag, ...\"/>                  \r\n                    <span className=\"toggle-label\">Public: </span> \r\n                    <PublicToggle />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <ContentEditor />\r\n            <div className=\"row button-row\">\r\n              <div>\r\n                <button className=\"save-button\" type=\"button\" onClick={this.save_changes}>Save</button>\r\n                <button className=\"delete-button\" type=\"button\" onClick={this.handle_delete_button}>Delete</button>\r\n                <button className=\"cancel-button\" type=\"button\" onClick={this.cancel_changes}>Cancel</button>\r\n              </div>\r\n            </div>          \r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostEditor.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  edit_mode: PropTypes.bool.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { edit_mode, selected_post } = state.AdminReducer\r\n  const { posts } = state.BlogReducer\r\n  return {\r\n    logged_in: state.AdminReducer.logged_in,\r\n    edit_mode: edit_mode,\r\n    posts: posts,\r\n    index: selected_post\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostEditor);\r\n"]},"metadata":{},"sourceType":"module"}