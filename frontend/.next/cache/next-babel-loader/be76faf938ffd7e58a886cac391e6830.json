{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CLEAR_POSTS, UPDATE_POST, RECEIVE_POSTS, ADD_NEW_POST, ADD_NEW_PARAGRAPH, REMOVE_PARAGRAPH } from './BlogActions'; // The initial application state\n\nlet initialState = {\n  id2index: {},\n  posts: []\n}; // Takes care of changing the application state\n\nfunction BlogReducer(state = initialState, action) {\n  var new_posts = [...state.posts];\n\n  switch (action.type) {\n    case REMOVE_PARAGRAPH:\n      new_posts[action.post_index].content.splice(action.paragraph_index, 1);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: new_posts\n      });\n\n    case ADD_NEW_PARAGRAPH:\n      new_posts[action.post_index].content.splice(parseInt(action.paragraph_index) + 1, 0, action.initial_content);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: new_posts\n      });\n\n    case CLEAR_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.posts,\n        id2index: action.id2index\n      });\n\n    case UPDATE_POST:\n      new_posts[action.index] = action.new_post;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: new_posts\n      });\n\n    case RECEIVE_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.posts,\n        id2index: action.id2index\n      });\n\n    case ADD_NEW_POST:\n      new_posts.unshift(action.new_post);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: new_posts\n      });\n\n    default:\n      return state;\n  }\n}\n\n_c = BlogReducer;\nexport default BlogReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogReducer\");","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/frontend/components/Redux/BlogReducer.js"],"names":["CLEAR_POSTS","UPDATE_POST","RECEIVE_POSTS","ADD_NEW_POST","ADD_NEW_PARAGRAPH","REMOVE_PARAGRAPH","initialState","id2index","posts","BlogReducer","state","action","new_posts","type","post_index","content","splice","paragraph_index","parseInt","initial_content","index","new_post","unshift"],"mappings":";;;;;;AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,iBALF,EAMEC,gBANF,QAOO,eAPP,C,CASA;;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAAnB,C,CAKA;;AACA,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2CK,MAA3C,EAAmD;AACjD,MAAIC,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACF,KAAV,CAAhB;;AACA,UAAQG,MAAM,CAACE,IAAf;AACE,SAAKR,gBAAL;AACEO,MAAAA,SAAS,CAACD,MAAM,CAACG,UAAR,CAAT,CAA6BC,OAA7B,CAAqCC,MAArC,CAA4CL,MAAM,CAACM,eAAnD,EAAoE,CAApE;AACA,6CAAYP,KAAZ;AAAmBF,QAAAA,KAAK,EAAEI;AAA1B;;AACF,SAAKR,iBAAL;AACEQ,MAAAA,SAAS,CAACD,MAAM,CAACG,UAAR,CAAT,CAA6BC,OAA7B,CAAqCC,MAArC,CAA4CE,QAAQ,CAACP,MAAM,CAACM,eAAR,CAAR,GAAmC,CAA/E,EAAkF,CAAlF,EAAqFN,MAAM,CAACQ,eAA5F;AACA,6CAAYT,KAAZ;AAAmBF,QAAAA,KAAK,EAAEI;AAA1B;;AACF,SAAKZ,WAAL;AACE,6CAAYU,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACH,KAAjC;AAAwCD,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAAzD;;AACF,SAAKN,WAAL;AACEW,MAAAA,SAAS,CAACD,MAAM,CAACS,KAAR,CAAT,GAA0BT,MAAM,CAACU,QAAjC;AACA,6CAAYX,KAAZ;AAAmBF,QAAAA,KAAK,EAAEI;AAA1B;;AACF,SAAKV,aAAL;AACE,6CAAYQ,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACH,KAAjC;AAAwCD,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAAzD;;AACF,SAAKJ,YAAL;AACES,MAAAA,SAAS,CAACU,OAAV,CAAkBX,MAAM,CAACU,QAAzB;AACA,6CAAYX,KAAZ;AAAmBF,QAAAA,KAAK,EAAEI;AAA1B;;AACF;AACE,aAAOF,KAAP;AAlBJ;AAoBD;;KAtBQD,W;AAwBT,eAAeA,WAAf","sourcesContent":["import {\r\n  CLEAR_POSTS,\r\n  UPDATE_POST,\r\n  RECEIVE_POSTS,\r\n  ADD_NEW_POST,\r\n  ADD_NEW_PARAGRAPH,\r\n  REMOVE_PARAGRAPH\r\n} from './BlogActions'\r\n\r\n// The initial application state\r\nlet initialState = {\r\n  id2index: {},\r\n  posts: []\r\n}\r\n\r\n// Takes care of changing the application state\r\nfunction BlogReducer(state = initialState, action) {\r\n  var new_posts = [...state.posts]\r\n  switch (action.type) {\r\n    case REMOVE_PARAGRAPH:\r\n      new_posts[action.post_index].content.splice(action.paragraph_index, 1)\r\n      return { ...state, posts: new_posts }\r\n    case ADD_NEW_PARAGRAPH:\r\n      new_posts[action.post_index].content.splice(parseInt(action.paragraph_index) + 1, 0, action.initial_content)\r\n      return { ...state, posts: new_posts }\r\n    case CLEAR_POSTS:\r\n      return { ...state, posts: action.posts, id2index: action.id2index }\r\n    case UPDATE_POST:\r\n      new_posts[action.index] = action.new_post\r\n      return { ...state, posts: new_posts}\r\n    case RECEIVE_POSTS:\r\n      return { ...state, posts: action.posts, id2index: action.id2index }\r\n    case ADD_NEW_POST:\r\n      new_posts.unshift(action.new_post)\r\n      return { ...state, posts: new_posts }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default BlogReducer"]},"metadata":{},"sourceType":"module"}