{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SIGN_OUT, FAILED_ADMIN_PASSWORD, SUCCEEDED_ADMIN_PASSWORD } from './AdminActions'; // The initial application state\n\nexport var initialState = {\n  failed_attempt: false,\n  logged_in: false\n}; // Takes care of changing the application state\n\nfunction AdminReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_OUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logged_in: false\n      });\n\n    case FAILED_ADMIN_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        failed_attempt: true\n      });\n\n    case SUCCEEDED_ADMIN_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        failed_attempt: false,\n        logged_in: true\n      });\n\n    default:\n      return state;\n  }\n}\n\n_c = AdminReducer;\nexport default AdminReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminReducer\");","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/frontend/src/redux/AdminReducer.js"],"names":["SIGN_OUT","FAILED_ADMIN_PASSWORD","SUCCEEDED_ADMIN_PASSWORD","initialState","failed_attempt","logged_in","AdminReducer","state","action","type"],"mappings":";;;;;;AAAA,SACEA,QADF,EAEEC,qBAFF,EAGEC,wBAHF,QAIO,gBAJP,C,CAMA;;AACA,OAAO,IAAIC,YAAY,GAAG;AACxBC,EAAAA,cAAc,EAAE,KADQ;AAExBC,EAAAA,SAAS,EAAE;AAFa,CAAnB,C,CAKP;;AACA,SAASC,YAAT,GAAoD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,QAAL;AACE,6CAAYO,KAAZ;AAAmBF,QAAAA,SAAS,EAAE;AAA9B;;AACF,SAAKJ,qBAAL;AACE,6CAAYM,KAAZ;AAAmBH,QAAAA,cAAc,EAAE;AAAnC;;AACF,SAAKF,wBAAL;AACE,6CAAYK,KAAZ;AAAmBH,QAAAA,cAAc,EAAE,KAAnC;AAA0CC,QAAAA,SAAS,EAAE;AAArD;;AACF;AACE,aAAOE,KAAP;AARJ;AAUD;;KAXQD,Y;AAaT,eAAeA,YAAf","sourcesContent":["import {\r\n  SIGN_OUT,\r\n  FAILED_ADMIN_PASSWORD,\r\n  SUCCEEDED_ADMIN_PASSWORD\r\n} from './AdminActions'\r\n\r\n// The initial application state\r\nexport let initialState = {\r\n  failed_attempt: false,\r\n  logged_in: false\r\n}\r\n\r\n// Takes care of changing the application state\r\nfunction AdminReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SIGN_OUT:\r\n      return { ...state, logged_in: false }\r\n    case FAILED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: true }\r\n    case SUCCEEDED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: false, logged_in: true }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AdminReducer"]},"metadata":{},"sourceType":"module"}