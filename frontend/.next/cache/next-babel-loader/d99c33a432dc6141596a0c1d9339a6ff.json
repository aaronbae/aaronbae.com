{"ast":null,"code":"export var RECEIVE_POSTS = \"RECEIVE_POSTS\";\nexport var UPDATE_POST = \"UPDATE_POST\";\nexport var ADD_NEW_POST = \"ADD_NEW_POST\";\nexport var ADD_NEW_PARAGRAPH = \"ADD_NEW_PARAGRAPH\";\nexport var REMOVE_PARAGRAPH = \"REMOVE_PARAGRAPH\";\nexport var CHANGE_EDIT_MODE = \"CHANGE_EDIT_MODE\"; // TERMINALS\n\nexport function change_edit_mode(boolean_value) {\n  return {\n    type: CHANGE_EDIT_MODE,\n    edit_mode: boolean_value\n  };\n}\nexport function add_new_post(new_post) {\n  return {\n    type: ADD_NEW_POST,\n    new_post: new_post\n  };\n}\nexport function update_title(new_post, title) {\n  new_post.title = title;\n  return {\n    type: UPDATE_POST,\n    new_post: new_post\n  };\n}\nexport function update_tags(new_post, tags) {\n  new_post.tags = tags;\n  return {\n    type: UPDATE_POST,\n    new_post: new_post\n  };\n}\nexport function update_public(new_post, public_boolean) {\n  new_post[\"public\"] = public_boolean;\n  return {\n    type: UPDATE_POST,\n    new_post: new_post\n  };\n}\nexport function update_content(new_post, content) {\n  new_post.content = content;\n  return {\n    type: UPDATE_POST,\n    new_post: new_post\n  };\n}\n\nfunction receive_posts(res) {\n  // TEMPORARY\n  if (!res.hasOwnProperty('posts')) {\n    res = {\n      posts: res,\n      current_page: 1,\n      total_pages: 1\n    };\n  }\n\n  var posts = {};\n\n  for (var index in res.posts) {\n    var p = res.posts[index];\n    posts[p._id] = p;\n  }\n\n  return {\n    type: RECEIVE_POSTS,\n    posts: posts,\n    current_page: res.current_page,\n    total_pages: res.total_pages,\n    receivedAt: Date.now()\n  };\n} // FETCHERS\n\n\nexport function fetch_public_posts() {\n  var skip = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return function (dispatch) {\n    var url = process.env.NEXT_PUBLIC_POST_URL + \"public\";\n\n    if (skip > 0) {\n      url += \"?skip=\" + skip.toString();\n    }\n\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      dispatch(receive_posts(res));\n    });\n  };\n}\nexport function fetch_posts() {\n  var skip = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return function (dispatch) {\n    var url = process.env.NEXT_PUBLIC_POST_URL;\n\n    if (skip > 0) {\n      url = url.slice(0, -1) + \"?skip=\" + skip.toString();\n    }\n\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(receive_posts(res));\n    });\n  };\n}\nexport function fetch_post_by_id(post_id) {\n  return function (dispatch) {\n    fetch(process.env.NEXT_PUBLIC_POST_URL + post_id).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(receive_posts(res));\n    });\n  };\n}\nexport function create_new_post() {\n  return function (dispatch) {\n    var url = process.env.NEXT_PUBLIC_POST_URL + \"add/\";\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      dispatch(add_new_post(res.post));\n      dispatch(change_edit_mode(true));\n    });\n  };\n}\nexport function save_local_changes(post) {\n  var url = process.env.NEXT_PUBLIC_POST_URL + \"update/\" + post._id.toString();\n\n  return function (dispatch) {\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(post)\n    }).then(function (res) {\n      return dispatch(change_edit_mode(false));\n    });\n  };\n}\nexport function delete_post(post_id) {\n  var url = process.env.NEXT_PUBLIC_POST_URL + \"delete/\" + post_id.toString();\n  return function (dispatch) {\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function () {\n      return dispatch(change_edit_mode(false));\n    });\n  };\n}","map":null,"metadata":{},"sourceType":"module"}