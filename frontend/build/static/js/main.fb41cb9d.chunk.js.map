{"version":3,"sources":["Constants.js","Admin/AdminActions.js","Common/Link.js","Common/Header.js","Common/Footer.js","Home/Home.js","Blog/BlogActions.js","Blog/Post.js","Common/Toggle.js","Blog/PublicToggle.js","Blog/PostEditor.js","Blog/Blog.js","Admin/LogIn.js","Warnings/NonExistentRoute.js","Warnings/NotReady.js","Common/Main.js","Blog/BlogReducer.js","Admin/AdminReducer.js","index.js"],"names":["config","url","POST_URL","USER_URL","SIGN_OUT","FAILED_ADMIN_PASSWORD","SUCCEEDED_ADMIN_PASSWORD","check_account","id","password","data","login_id","login_password","dispatch","fetch","method","headers","body","JSON","stringify","then","res","status","type","receivedAt","Date","now","receive_account_results","Link","props","state","addClasses","message","route","handleRedirect","bind","this","history","push","className","onClick","Component","withRouter","Header","handleLogOut","e","stopPropagation","logged_in","path","location","pathname","connect","AdminReducer","Footer","href","title","src","alt","Home","download","VIEWPOST","RECEIVE_POSTS","CHANGE_EDIT_MODE","UPDATE_EDIT_CHANGES","CREATE_NEW_POST","receive_posts","posts","fetch_posts","json","viewpost","post_id","change_edit_mode","boolean_value","edit_mode","update_edit_changes","edit_data","Post","handlePostClick","selected_post","date","ownProps","BlogReducer","this_post","createtime","Toggle","width","parseInt","slice","height","toString","checked","click_behavior","style_object","prevProps","setState","style","onChange","PublicToggle","update_public","old_value","public","PostEditor","enterEditMode","update_title","update_content","update_tags","save_changes","cancel_changes","handle_delete_button","curr_post","new_edit_data","content","tags","target","scrollHeight","value","split","post","_id","save_local_changes","delete_post","map","item","index","key","i","placeholder","Blog","handleNewPostButton","toISOString","LogIn","handleSignInButton","both_inputs","document","getElementsByClassName","failed_attempt","NonExistentRoute","class","role","Main","exact","component","initialState","action","new_posts","new_post","author","updatetime","unshift","rootReducer","combineReducers","rootStore","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.fb41cb9d.chunk.js","sourcesContent":["const prod = {\r\n  url: {\r\n    POST_URL: \"https://aaronbae.com/api/posts/\",\r\n    USER_URL: \"https://aaronbae.com/api/users/\",\r\n  }\r\n}\r\nconst dev = {\r\n  url: {\r\n    POST_URL: \"http://localhost:4000/posts/\",\r\n    USER_URL: \"http://localhost:4000/users/\",\r\n  }\r\n}\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import { config } from '../Constants'\r\n\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const FAILED_ADMIN_PASSWORD = \"FAILED_ADMIN_PASSWORD\";\r\nexport const SUCCEEDED_ADMIN_PASSWORD = \"SUCCEEDED_ADMIN_PASSWORD\";\r\n\r\nexport function sign_out() {\r\n  return {\r\n    type: SIGN_OUT,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nfunction receive_account_results(res) {\r\n  if(res.status == 400){\r\n    return {\r\n      type: FAILED_ADMIN_PASSWORD,\r\n      receivedAt: Date.now()\r\n    }\r\n  }\r\n  \r\n  return {\r\n    type: SUCCEEDED_ADMIN_PASSWORD,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nexport function check_account(id, password) {\r\n  let data = {\r\n    login_id: id,\r\n    login_password: password\r\n  }\r\n  return dispatch => {\r\n    var url = config.url.USER_URL + \"login\"\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }).then(res => dispatch(receive_account_results(res)))\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Link.scss';\r\n\r\nclass Link extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addClasses: props.addClasses + \" link-button\",\r\n      message: props.message,\r\n      route: props.route\r\n    }\r\n    this.handleRedirect = this.handleRedirect.bind(this);\r\n  }\r\n\r\n  handleRedirect(route) {\r\n    this.props.history.push(route)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <button\r\n        className={this.state.addClasses} \r\n        onClick={this.handleRedirect.bind(this, this.state.route)}>\r\n          {this.state.message}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Link);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { sign_out } from '../Admin/AdminActions'\r\n\r\nimport Link from './Link';\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogOut = this.handleLogOut.bind(this);\r\n  }\r\n\r\n  handleLogOut(e) {\r\n    e.stopPropagation();\r\n    // TODO: give a warning\r\n    // TODO: clear cache\r\n    const { dispatch } = this.props;\r\n    dispatch(sign_out());\r\n    this.props.history.push(\"/login\")\r\n  }\r\n\r\n  render() {\r\n    const { logged_in } = this.props;\r\n    const path = this.props.history.location.pathname;\r\n    return (\r\n      <div className=\"header-container d-flex row\">\r\n        <div><Link addClasses=\"navbrand\" message=\"Aaron Bae\" route=\"/\" /></div>\r\n\r\n        <div className={path==\"/\"?\"active\":\"\"}>\r\n          <Link addClasses=\"navlink\" message=\"Home\" route=\"/\" />\r\n        </div>\r\n\r\n        <div className=\"line\"></div>\r\n        <div className={path==\"/blog\"?\"active\":\"\"}>\r\n          <Link addClasses=\"navlink\" message=\"Blog\" route=\"/blog\" />\r\n        </div>\r\n\r\n        <div className={path==\"/login\"?\"admin-container ml-auto active\":\"admin-container ml-auto\"}>\r\n          {logged_in && \r\n            <button className=\"navlink sign-out-button\" onClick={this.handleLogOut}>Sign Out</button>\r\n          }\r\n          {!logged_in &&\r\n            <Link addClasses=\"navlink sign-out-button\" message=\"Admin\" route=\"/login\" />\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { logged_in: state.AdminReducer.logged_in }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Header));\r\n","import React, { Component } from 'react';\r\nimport './Footer.scss';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row footer\">\r\n        <div className=\"col\">\r\n          <div className='row'>\r\n            <div className=\"col-12\">\r\n              <a href=\"https://github.com/aaronbae\" title=\"GitHub\">\r\n                <img src=\"assets/icons/github.png\" alt=\"GitHub\" className='footer-link-icon' />\r\n              </a>\r\n              <a href=\"https://www.linkedin.com/in/aaron-bae/\" title=\"LinkedIn\">\r\n                <img src=\"assets/icons/linkedin.png\" alt=\"LinkedIn\" className='footer-link-icon' />\r\n              </a>\r\n              <a href=\"mailto:aaronbae@uw.edu\" title=\"email\">\r\n                <img src=\"assets/icons/gmail.png\" alt=\"Email\" className='footer-link-icon' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\"><p>Designed and Built by Aaron Bae</p></div>  \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport './Home.scss';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row all-home-container\">\r\n        <div className=\"side-panel center col-md-12 col-lg-3\">\r\n          <div className='row row-spacer'></div>\r\n          <div className=\"row\">\r\n            <img className='round profile-img' src=\"assets/profile.jpg\" alt=\"profile\" />\r\n          </div>\r\n          <div className='row row-spacer'></div>\r\n          <div className=\"row\">\r\n            <ul className=\"col\">\r\n              <li className='row name-item'><span className=\"h2 my-name\">Aaron Beomjun Bae</span></li>\r\n              <li className=\"row bio-one-liner\"><span>Masters in Computer Science</span></li>\r\n              <li className=\"row bio-one-liner\"><span>UC Irvine Class of 2021</span></li>\r\n              <li className=\"row bio-one-liner\"><span>Focus on Natural Language Processing</span></li>\r\n              <li className=\"row bio-one-liner\"><span>Bachelor of Science in Mathematics</span></li>\r\n              <li className=\"row bio-one-liner\"><span>University of Washington Class of 2019</span></li>\r\n              <li className=\"row bio-one-liner\">\r\n                <a href=\"assets/downloadables/resume.pdf\" download>Download a copy of my resume</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className='row row-spacer'></div>\r\n          <div className='row'>\r\n            <div className=\"col-12\">\r\n              <a href=\"https://github.com/aaronbae\" title=\"GitHub\">\r\n                <img src=\"assets/icons/github.png\" alt=\"GitHub\" className='external-link-icon' />\r\n              </a>\r\n              <a href=\"https://www.linkedin.com/in/aaron-bae/\" title=\"LinkedIn\">\r\n                <img src=\"assets/icons/linkedin.png\" alt=\"LinkedIn\" className='external-link-icon' />\r\n              </a>\r\n              <a href=\"mailto:aaronbae@uw.edu\" title=\"email\">\r\n                <img src=\"assets/icons/gmail.png\" alt=\"Email\" className='external-link-icon' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className='row row-spacer'></div>\r\n        </div>\r\n\r\n\r\n        <div className=\"main-panel col-md-12 col-lg-9\">\r\n          <div className=\"row total-section\">\r\n            <div className=\"col\">\r\n              <div className=\"row title-section\">\r\n                <p className=\"col h3\">Education</p>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <div className=\"row content-section\">\r\n                    <div className=\"col-md-12 col-lg-3 center\">\r\n                      <img className=\"education-img\" src=\"assets/uci_seal_500.png\" alt=\"University of California Irvine\" />\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-9\">\r\n                      <span><span  className=\"h6\">Masters in Computer Science</span>, <i>University of California - Irvine</i></span>\r\n                      <ul className=\"education-bullets\">\r\n                        <li>Attended from September 2019 until June 2021</li>\r\n                        <li>Focus in augmenting Knowledge Base with NLP techniques.</li>\r\n                        <li>Participating in Center for Machine Learning and Intelligent Systems.</li>\r\n                        <li>Looking for NLP research based summer 2020 internships</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row content-section\">\r\n                    <div className=\"col-md-12 col-lg-3 center\">\r\n                      <img className=\"education-img\" src=\"assets/uw_seal_500.jpg\" alt=\"University of Washington\" />\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-9\">\r\n                      <span><span  className=\"h6\">Bachelor of Science in Mathematics</span>, <i>University of Washington</i></span>\r\n                      <ul className=\"education-bullets\">\r\n                        <li>Attended from September 2015 until June 2019</li>\r\n                        <li>Applicable Mathematics classes such as Matrix Algebra, Differential Equations, and Mathematical Reasoning </li>\r\n                        <li>Applicable Data Science classes such as Database Management, Data Structures and Algorithms, and Artificial Intelligence </li>\r\n                        <li>Efficient in Python, Java, JavaScript, MySQL, AWS, D3, NodeJS, React, AJAX, Ruby, Sparks</li>\r\n                        <li>Abundant research experience from Washington Experimental Mathematics Lab (WXML) and assistantship to graduate researcher at Foster School of Business.</li>\r\n                        <li>Member of the Sigma Nu Fraternity Gamma Chi Chapter.</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row total-section\">\r\n            <div className=\"col\">\r\n              <div className=\"row title-section\">\r\n                <p className=\"col h3\">Technical Experiences</p>\r\n              </div>\r\n              <div className=\"row content-section\">\r\n                <div className=\"col\">\r\n\r\n\r\n\r\n                  <div className=\"row individual-experience\">\r\n                    <div className=\"col logo-col center no-padding\">\r\n                      <div className=\"logo-wrapper\"><img src=\"assets/icons/uw_logo.png\" alt=\"university of washington logo\" className=\"company-logo\"/></div>\r\n                    </div>\r\n                    <div className=\"col experience-col\">\r\n                      <div className=\"row experience-title\">\r\n                        <div><span className=\"h5\">Undergraduate Researcher</span></div>\r\n                        <div className=\"support-info ml-auto\">\r\n                          <span>- University of Washington</span>\r\n                          <span className=\"float-right\">Jun 2018 - Jun 2019</span>    \r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <p className=\"h6\">Washington Experimental Mathematics Lab</p>\r\n                        <p>I was invited to work with Professor Christopher Hoffman to participate on his Mathematics \r\n                          in Gerrymandering Project. He works to analyze search the state space for the ways to draw \r\n                          out the districts. We used C++ and Python as the engine of the project, and built NodeJS \r\n                          servers to distribute, visualize, and explain the political data we mined.\r\n                        </p>\r\n                        <p className=\"h6\">Assitantship to Emisa Nateigh, Ph.D:</p>\r\n                        <p>As a lab assistant to Emisa Nateigh, a Ph.D student at the University of Washington Foster \r\n                          School of business, I helped to create a machine learning system to perform Multi-Tasking \r\n                          Gaussian Process learning algorithm on the collected medical data. Mainly, used Python and \r\n                          NumPy to carry out the statistical process. Used MatplotLib and D3.js to visualize the \r\n                          information.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n\r\n                  <div className=\"row individual-experience\">\r\n                    <div className=\"col logo-col center no-padding\">\r\n                      <div className=\"logo-wrapper\"><img src=\"assets/icons/dapper.jpg\" alt=\"dapper company logo\" className=\"company-logo\"/></div>\r\n                    </div>\r\n                    <div className=\"col experience-col\">\r\n                      <div className=\"row experience-title\">\r\n                        <div><span className=\"h5\">Backend Software Engineer</span></div>\r\n                        <div className=\"support-info ml-auto\">\r\n                          <span>- Dapper Grooming</span>\r\n                          <span className=\"float-right\">Jun 2018 - August 2019</span> \r\n                        </div>   \r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <p className=\"h6\">Dapper Grooming | Backend Server Development Team</p>\r\n                        <p>I was invited to work with Professor Christopher Hoffman to participate on his Mathematics \r\n                          in Gerrymandering Project. He works to analyze search the state space for the ways to draw \r\n                          out the districts. We used C++ and Python as the engine of the project, and built NodeJS \r\n                          servers to distribute, visualize, and explain the political data we mined.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n\r\n                  <div className=\"row individual-experience\">\r\n                    <div className=\"col logo-col no-padding center\">\r\n                      <div className=\"logo-wrapper\"><img src=\"assets/icons/crowdcow.jpg\" alt=\"crowd cow company logo\" className=\"company-logo\"/></div>\r\n                    </div>\r\n                    <div className=\"col experience-col\">\r\n                      <div className=\"row experience-title\">\r\n                        <div><span className=\"h5\">Software Engineering Intern</span></div>\r\n                        <div className=\"support-info ml-auto\">\r\n                          <span>- Crowd Cow</span>\r\n                          <span className=\"float-right\">Jun 2017 - August 2017</span>\r\n                        </div>  \r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <p className=\"h6\">Frontend Developer:</p>\r\n                        <p>As a frontend developer, I worked on improving CrowdCow's private e-commerce platform by \r\n                          changing the client purchase UI pipeline. Also, worked on various features like in-house \r\n                          data visualization dashboard that displays company statistics.\r\n                        </p>\r\n                        <p className=\"h6\">Backend Developer:</p>\r\n                        <p>As a backend developer, I worked on middlman the information between the database and the \r\n                          client servers. Main technologies that I used were MySQL, Ruby on Rails, Git, Budler, RuboCop, \r\n                          Stripe, and Puma.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import { config } from '../Constants'\r\n\r\nexport const VIEWPOST = \"VIEW_POST\";\r\nexport const RECEIVE_POSTS = \"RECEIVE_POSTS\";\r\nexport const CHANGE_EDIT_MODE = \"CHANGE_EDIT_MODE\";\r\nexport const UPDATE_EDIT_CHANGES = \"UPDATE_EDIT_CHANGES\";\r\nexport const CREATE_NEW_POST = \"CREATE_NEW_POST\";\r\n\r\nfunction receive_posts(res) {\r\n  return {\r\n    type: RECEIVE_POSTS,\r\n    posts: res,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\nexport function fetch_public_posts() {\r\n  return dispatch => {\r\n    fetch(config.url.POST_URL+\"public\")\r\n      .then(res => res.json())\r\n      .then(res => dispatch(receive_posts(res)))\r\n  }\r\n}\r\n\r\nexport function fetch_posts() {\r\n  return dispatch => {\r\n    fetch(config.url.POST_URL)\r\n      .then(res => res.json())\r\n      .then(res => dispatch(receive_posts(res)))\r\n  }\r\n}\r\n\r\nexport function viewpost(post_id) {\r\n  return {\r\n    type: VIEWPOST, \r\n    post_id: post_id\r\n  }\r\n}\r\n\r\nexport function change_edit_mode(boolean_value) {\r\n  return {\r\n    type: CHANGE_EDIT_MODE, \r\n    edit_mode: boolean_value\r\n  }\r\n}\r\n\r\nexport function update_edit_changes(edit_data) {\r\n  return {\r\n    type: UPDATE_EDIT_CHANGES, \r\n    edit_data: edit_data\r\n  }\r\n}\r\n\r\nexport function save_local_changes(post) {\r\n  var url = config.url.POST_URL + \"update/\" + post._id.toString()\r\n  if(post._id == -1){\r\n    url = config.url.POST_URL + \"add/\" \r\n    delete post._id\r\n  } \r\n  return dispatch => {\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(post)\r\n    }).then(res => dispatch(change_edit_mode(false)))\r\n  }\r\n}\r\n\r\nexport function create_new_post() {\r\n  return {\r\n    type: CREATE_NEW_POST,\r\n    date: new Date().toISOString()\r\n  }\r\n}\r\n\r\nexport function delete_post(post_id) {\r\n  var url = config.url.POST_URL + \"delete/\" +post_id.toString()\r\n  return dispatch => {\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n    .then(res => dispatch(fetch_posts()))\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { viewpost } from './BlogActions'\r\n\r\nimport './Post.scss';\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post_id: props.post_id\r\n    }\r\n    this.handlePostClick = this.handlePostClick.bind(this);\r\n  }\r\n\r\n  handlePostClick(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, edit_mode, posts, selected_post } = this.props\r\n    if(edit_mode){\r\n      // TODO: send a warning\r\n    } else {\r\n      dispatch(viewpost(this.state.post_id))  \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, date, selected_post } = this.props\r\n    return (\r\n      <div className=\"row individual-post-container\" onClick={this.handlePostClick}>\r\n        <div className={selected_post==this.state.post_id? \"individual-post selected-post\" : \"individual-post\"}>\r\n          <div className=\"offset-1 col-10\">\r\n            <div className=\"row date\">{date}</div>\r\n            <div className=\"row title\"><p className=\"h5\">{title}</p></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  edit_mode: PropTypes.bool.isRequired,\r\n  selected_post: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { edit_mode, selected_post, posts } = state.BlogReducer\r\n  let this_post = posts[ownProps.post_id]\r\n  return {\r\n    edit_mode: edit_mode,\r\n    selected_post: selected_post,\r\n    title: this_post.title,\r\n    date: this_post.createtime\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post);","import React, { Component } from 'react';\r\nimport './Toggle.scss';\r\n\r\nclass Toggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // calculate height\r\n    var width = parseInt(props.width.slice(0, -2)) * 0.8\r\n    var height = (width/1.7).toString() + \"px\"\r\n\r\n    this.state = {\r\n      checked: props.checked,\r\n      click_behavior: props.click_behavior,\r\n      style_object: {\r\n        width: width.toString() + \"px\",\r\n        height: height\r\n      }\r\n    }\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.checked !== this.props.checked) {\r\n      this.setState({checked: this.props.checked});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"public-toggle-container\">\r\n        <label className=\"switch\" style={this.state.style_object}>\r\n          <input type=\"checkbox\" checked={this.state.checked} onChange={this.state.click_behavior}/>\r\n          <span className=\"slider round\"></span>\r\n        </label>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Toggle;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { update_edit_changes } from './BlogActions'\r\nimport Toggle from '../Common/Toggle';\r\n\r\n\r\nclass PublicToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.update_public = this.update_public.bind(this);\r\n  }\r\n\r\n  update_public(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, edit_data } = this.props\r\n    let old_value = this.props.edit_data.public\r\n    let new_edit_data = {...edit_data, public: !old_value}\r\n    dispatch(update_edit_changes(new_edit_data))\r\n  }\r\n\r\n  render() {\r\n    const { edit_data } = this.props\r\n    return (\r\n      <Toggle checked={edit_data.public} width=\"50px\" click_behavior={this.update_public}/>\r\n    )\r\n  }\r\n}\r\n\r\nPublicToggle.propTypes = {\r\n  edit_data: PropTypes.object.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { edit_data } = state.BlogReducer\r\n  return { edit_data: edit_data }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(PublicToggle);\r\n","import React, { Component } from 'react';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  fetch_posts,\r\n  change_edit_mode,\r\n  update_edit_changes,\r\n  save_local_changes,\r\n  delete_post\r\n} from './BlogActions'\r\n\r\nimport PublicToggle from './PublicToggle';\r\nimport './PostEditor.scss';\r\n\r\nclass PostEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.enterEditMode = this.enterEditMode.bind(this);\r\n    this.update_title = this.update_title.bind(this);\r\n    this.update_content = this.update_content.bind(this);\r\n    this.update_tags = this.update_tags.bind(this);\r\n    this.save_changes = this.save_changes.bind(this);\r\n    this.cancel_changes = this.cancel_changes.bind(this);\r\n    this.handle_delete_button = this.handle_delete_button.bind(this);\r\n  }\r\n\r\n  enterEditMode(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, selected_post, posts  } = this.props\r\n    const curr_post = posts[selected_post]\r\n    let new_edit_data = {\r\n      title: curr_post.title,\r\n      content: curr_post.content,\r\n      tags: curr_post.tags,\r\n      public: curr_post.public\r\n    }\r\n    dispatch(change_edit_mode(true))\r\n    dispatch(update_edit_changes(new_edit_data))\r\n  }\r\n\r\n  update_title(e) {\r\n    e.stopPropagation();\r\n    // auto re-size\r\n    e.target.style.height = e.target.scrollHeight.toString() + \"px\" \r\n\r\n    const { dispatch, edit_data } = this.props\r\n    let new_edit_data = {...edit_data, title: e.target.value}\r\n    dispatch(update_edit_changes(new_edit_data))\r\n  }\r\n\r\n  update_content(e) {\r\n    e.stopPropagation();\r\n    // auto re-size\r\n    e.target.style.height = e.target.scrollHeight.toString() + \"px\" \r\n\r\n    const { dispatch, edit_data } = this.props\r\n    let new_edit_data = {...edit_data, content: e.target.value}\r\n    dispatch(update_edit_changes(new_edit_data))\r\n  }\r\n\r\n  update_tags(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, edit_data } = this.props\r\n    let new_edit_data = {...edit_data, tags: e.target.value.split(',')}\r\n    dispatch(update_edit_changes(new_edit_data))\r\n  }\r\n\r\n\r\n  save_changes(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, selected_post, posts  } = this.props\r\n    var curr_post = posts[selected_post]\r\n    dispatch(save_local_changes(curr_post))\r\n  }\r\n\r\n  cancel_changes(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, selected_post, posts  } = this.props\r\n    dispatch(fetch_posts())\r\n    dispatch(change_edit_mode(false))\r\n  }\r\n\r\n  handle_delete_button(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, selected_post, posts  } = this.props\r\n    dispatch(delete_post(posts[selected_post]['_id']))\r\n    dispatch(change_edit_mode(false))\r\n  }\r\n  \r\n  render() {\r\n    const { edit_mode, logged_in, selected_post, posts, edit_data } = this.props\r\n    return (\r\n      <div className=\"row post-editor-container\">\r\n        {selected_post > -1 &&\r\n          <div className={edit_mode ? \"col post-editor-main-col hidden\" : \"col post-editor-main-col\"}> \r\n            <div className=\"row title-row\">\r\n              <p className=\"h3\">{posts[selected_post].title}</p>\r\n            </div>\r\n            <div className=\"row information-row\">\r\n              <div className=\"col-5 no-padding\">\r\n                {posts[selected_post].createtime}\r\n              </div>\r\n              <div className=\"col-7 no-padding\">\r\n                <div className=\"float-right\">\r\n                  <span className=\"tags-label\">Tags : </span>\r\n                  {posts[selected_post].tags.map((item, index) =>\r\n                    <span key={index} className={\"tag \" + item}>\r\n                      {item + \", \"}                  \r\n                    </span>\r\n                  )}           \r\n                  {logged_in &&\r\n                    <span className=\"edit-button\" onClick={this.enterEditMode} >Edit Post</span>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"padding-row row\"></div>\r\n            <div className=\"row content-row\">\r\n              {posts[selected_post].content.split(\"\\n\").map((i, key) => {\r\n                return <div className=\"content-paragraph\" key={key}>{i}</div>\r\n              })}\r\n            </div>\r\n          </div>\r\n        }\r\n        {selected_post > -1 && \r\n          <div className={edit_mode ? \"col post-editor-main-col\" : \"col post-editor-main-col hidden\"}>\r\n            <div className=\"row title-row\">\r\n              <textarea className=\"title-input h3\" value={edit_data.title} onChange={this.update_title} placeholder=\"Your Title...\"/>\r\n            </div>\r\n            <div className=\"row information-row\">\r\n              <div className=\"col-5 no-padding\">\r\n                {posts[selected_post].createtime}\r\n              </div>\r\n              <div className=\"col-7 no-padding\">\r\n                <div className=\"float-right\">\r\n                  <span className=\"tags-label\">Tags : </span>\r\n                  <input  className=\"tags-input\" type=\"text\" value={edit_data.tags} onChange={this.update_tags} placeholder=\"tag, tag, ...\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row toggle-row\">\r\n              <div className=\"offset-5 col-7 no-padding\">\r\n                <div className=\"float-right\">\r\n                  <span>Public: </span> \r\n                  <div className=\"toggle-wrapper\">\r\n                    <PublicToggle />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"row content-row\">\r\n              <textarea  className=\"content-input\" value={edit_data.content} onChange={this.update_content} placeholder=\"What's on your Mind?\"/>\r\n            </div> \r\n            <div className=\"row button-row\">\r\n              <div>\r\n                <button className=\"save-button\" type=\"button\" onClick={this.save_changes}>Save</button>\r\n                <button className={posts[selected_post]['_id']==-1 ? \"delete-button hidden\" : \"delete-button\"} type=\"button\" onClick={this.handle_delete_button}>Delete</button>\r\n                <button className=\"cancel-button\" type=\"button\" onClick={this.cancel_changes}>Cancel</button>\r\n              </div>\r\n            </div>          \r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostEditor.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  edit_mode: PropTypes.bool.isRequired,\r\n  edit_data: PropTypes.object.isRequired,\r\n  selected_post: PropTypes.number.isRequired,\r\n  posts: PropTypes.array.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { edit_mode, edit_data, selected_post, posts } = state.BlogReducer\r\n  return {\r\n    logged_in: state.AdminReducer.logged_in,\r\n    edit_mode: edit_mode,\r\n    edit_data: edit_data,\r\n    selected_post: selected_post,\r\n    posts: posts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostEditor);\r\n","import React, { Component } from 'react';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  fetch_public_posts,\r\n  fetch_posts, \r\n  create_new_post, \r\n  viewpost,\r\n  change_edit_mode,\r\n  update_edit_changes\r\n} from './BlogActions'\r\n\r\n// components \r\nimport Post from './Post';\r\nimport PostEditor from './PostEditor';\r\nimport './Blog.scss';\r\n\r\nclass Blog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNewPostButton = this.handleNewPostButton.bind(this);\r\n  }\r\n\r\n  handleNewPostButton(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, posts } = this.props\r\n    let new_edit_data = {\r\n      title: \"\",\r\n      content: \"\",\r\n      tags: [],\r\n      public: true\r\n    }\r\n    dispatch(create_new_post())\r\n    dispatch(viewpost(0))  \r\n    dispatch(update_edit_changes(new_edit_data))\r\n    dispatch(change_edit_mode(true))\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch, logged_in } = this.props\r\n    if(logged_in){\r\n      dispatch(fetch_posts())\r\n    } else {\r\n      dispatch(fetch_public_posts())\r\n    }\r\n  }\r\n\r\n  render() { \r\n    const { posts, logged_in } = this.props\r\n    return (\r\n      <div className='row all-blog-container'>\r\n        <div id=\"blog-column\" className=\"col-12 col-sm-4 post-column\">\r\n          <div className=\"row center post-column-title\">\r\n            <p className=\"h4\">Recent Posts</p>\r\n            {logged_in &&\r\n              <button className=\"new-post-button h3\" type=\"button\" onClick={this.handleNewPostButton}>+</button>\r\n            }\r\n          </div>\r\n          {posts.map((item, index) => \r\n            <Post key={index} post_id={index} />\r\n          )}\r\n        </div>\r\n        <div className=\"col-12 col-sm-8\">\r\n          <PostEditor />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nBlog.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    logged_in: state.AdminReducer.logged_in,\r\n    posts: state.BlogReducer.posts \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Blog);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { check_account } from './AdminActions'\r\n\r\n// components \r\nimport './LogIn.scss';\r\n\r\nclass LogIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSignInButton = this.handleSignInButton.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { logged_in } = this.props;\r\n    if( logged_in ) {\r\n      this.props.history.push(\"/blog\")\r\n    }\r\n  }\r\n\r\n  handleSignInButton(e) {\r\n    e.stopPropagation();\r\n    var both_inputs = document.getElementsByClassName(\"text-input\")\r\n    const { dispatch } = this.props;\r\n    dispatch(check_account(both_inputs[0].value, both_inputs[1].value))\r\n  }\r\n\r\n  render() { \r\n    const { failed_attempt } = this.props;\r\n    return (\r\n      <div className='row all-signin-container'>\r\n        <div className=\"main-column col-10 col-sm-5 col-md-4\">\r\n          <div className=\"form-unit\">\r\n            <div className=\"row admin-title-row\">\r\n              <h3>Admin Access</h3>\r\n            </div>\r\n            <div className=\"row form-item-row\">\r\n              <input className={failed_attempt?\"incorrect text-input\":\"text-input\"} type=\"text\" placeholder=\"Admin Id\"/>\r\n            </div>\r\n            <div className=\"row form-item-row\">\r\n              <input className={failed_attempt?\"incorrect text-input\":\"text-input\"} type=\"password\" placeholder=\"Admin Password\"/>\r\n            </div>\r\n            <div className=\"row buttons-row form-item-row\">\r\n              <button className=\"sign-in-button\" onClick={this.handleSignInButton}>Sign In</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogIn.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  failed_attempt: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    logged_in: state.AdminReducer.logged_in,\r\n    failed_attempt: state.AdminReducer.failed_attempt\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(LogIn));\r\n","import React, { Component } from 'react';\r\nimport './NotReady.scss';\r\n\r\nclass NonExistentRoute extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row all-notready-container\">\r\n        <div class=\"jumbotron\">\r\n          <h1 class=\"display-4\">This Page Doesn't Exist...</h1>\r\n          <p class=\"lead\">Looks like you are trying to reach a page that does not exist. Check your URL one more time! Meanwhile, here is a cool link below!</p>\r\n          <a class=\"btn btn-primary btn-lg\" href=\"https://www.youtube.com/watch?v=DNWWi8RYzhM\" role=\"button\">Surprise Link</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NonExistentRoute;\r\n","import React, { Component } from 'react';\r\nimport './NotReady.scss';\r\n\r\nclass NotReady extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row all-notready-container\">\r\n        <div class=\"jumbotron\">\r\n          <h1 class=\"display-4\">Still In Development...</h1>\r\n          <p class=\"lead\">Sorry, I am still working on this page. Just ironing out some small bugs. Meanwhile, click on the surprise link below!</p>\r\n          <a class=\"btn btn-primary btn-lg\" href=\"https://www.youtube.com/watch?v=DNWWi8RYzhM\" role=\"button\">Surprise Link</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotReady;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Home from '../Home/Home';\r\nimport Blog from '../Blog/Blog';\r\nimport LogIn from '../Admin/LogIn';\r\nimport NotReady from '../Warnings/NotReady';\r\nimport NonExistentRoute from '../Warnings/NonExistentRoute';\r\n\r\nclass Main extends Component {\r\n  // NOTE THAT path=\"/api/\" is already reserved for backend\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className='container-fluid base_container'>\r\n          <Header />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/blog\" component={Blog} />\r\n              <Route exact path=\"/login\" component={LogIn} />\r\n              <Route component={NonExistentRoute} />\r\n            </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import {\r\n  VIEWPOST,\r\n  RECEIVE_POSTS,\r\n  CHANGE_EDIT_MODE,\r\n  UPDATE_EDIT_CHANGES,\r\n  CREATE_NEW_POST\r\n} from './BlogActions'\r\n\r\n// The initial application state\r\nlet initialState = {\r\n  edit_mode: false,\r\n  edit_data: {\r\n    title: \"\",\r\n    tags: [],\r\n    content: \"\",\r\n    public: true\r\n  },\r\n  selected_post: -1,\r\n  posts: []\r\n}\r\n\r\n// Takes care of changing the application state\r\nfunction BlogReducer(state = initialState, action) {\r\n  let new_posts = [...state.posts]\r\n  switch (action.type) {\r\n    case VIEWPOST:\r\n      return { ...state, selected_post: action.post_id }\r\n    case RECEIVE_POSTS:\r\n      return { ...state, posts: action.posts }\r\n    case CHANGE_EDIT_MODE:\r\n      return { ...state, edit_mode: action.edit_mode }\r\n    case UPDATE_EDIT_CHANGES:\r\n      new_posts[state.selected_post].title = action.edit_data.title\r\n      new_posts[state.selected_post].content = action.edit_data.content\r\n      new_posts[state.selected_post].tags = action.edit_data.tags\r\n      new_posts[state.selected_post].public = action.edit_data.public\r\n      return { ...state, posts: new_posts, edit_data: action.edit_data }\r\n    case CREATE_NEW_POST:\r\n      let new_post = {\r\n        tags: [],\r\n        _id: -1,\r\n        author: 1,\r\n        title: \"\",\r\n        content: \"\",\r\n        createtime: action.date,\r\n        public: true,\r\n        updatetime: action.date\r\n      }\r\n      new_posts.unshift(new_post)\r\n      return { ...state, posts: new_posts }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default BlogReducer","import {\r\n  SIGN_OUT,\r\n  FAILED_ADMIN_PASSWORD,\r\n  SUCCEEDED_ADMIN_PASSWORD,\r\n} from './AdminActions'\r\n\r\n// The initial application state\r\nlet initialState = {\r\n  failed_attempt: false,\r\n  logged_in: false\r\n}\r\n\r\n// Takes care of changing the application state\r\nfunction AdminReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SIGN_OUT:\r\n      return { ...state, logged_in: false }\r\n    case FAILED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: true }\r\n    case SUCCEEDED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: false, logged_in: true }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AdminReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './Common/Main';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport BlogReducer from './Blog/BlogReducer';\r\nimport AdminReducer from './Admin/AdminReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  BlogReducer,\r\n  AdminReducer\r\n});\r\nconst rootStore = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nReactDOM.render(\r\n  <Provider store={rootStore}>\r\n    <Main />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}