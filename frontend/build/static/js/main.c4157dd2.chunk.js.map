{"version":3,"sources":["Constants.js","Redux/BlogActions.js","Redux/AdminActions.js","Utils/RedirectButton.js","Common/Header.js","Common/Footer.js","Home/Home.js","Utils/HelperFunctions.js","Blog/PostCard.js","Blog/MainBlogPage.js","Blog/PostViewer.js","Admin/LogInPage.js","Admin/AdminPost.js","Utils/Toggle.js","Admin/PublicToggle.js","Admin/PostEditor.js","Admin/AdminBlog.js","Warnings/NonExistentRoute.js","Common/Main.js","Redux/BlogReducer.js","Redux/AdminReducer.js","index.js"],"names":["config","url","POST_URL","USER_URL","update_post","new_post","index","type","receive_posts","res","id2index","Array","isArray","_id","posts","receivedAt","Date","now","fetch_public_posts","dispatch","fetch","then","json","fetch_posts","check_account","id","password","data","login_id","login_password","method","headers","body","JSON","stringify","status","receive_account_results","change_edit_mode","boolean_value","edit_mode","change_edit_data","edit_data","viewpost","post_id","RedirectButton","props","state","addClasses","message","route","handleRedirect","bind","this","history","push","className","onClick","Component","withRouter","Header","handleLogOut","e","stopPropagation","logged_in","path","location","pathname","startsWith","data-toggle","src","alt","connect","AdminReducer","Footer","href","title","Home","download","format_date","date_string","given_date","corrected_d","getTime","getTimezoneOffset","getDay","getMonth","getDate","getFullYear","PostCard","handlePostClick","date","summarized_content","formatted_date","ownProps","BlogReducer","this_post","substring","length","createtime","content","MainBlogPage","map","item","key","PostViewer","fetch_post_by_id","match","params","window","scrollTo","isPostFetched","thisPost","tags","split","i","LogInPage","handleSignInButton","both_inputs","document","getElementsByClassName","value","failed_attempt","placeholder","AdminPost","selected_post","Toggle","width","parseInt","slice","height","toString","checked","click_behavior","style_object","prevProps","setState","style","onChange","PublicToggle","update_public","old_value","public","new_edit_data","PostEditor","enterEditMode","update_title","update_content","update_tags","save_changes","cancel_changes","handle_delete_button","curr_post","target","scrollHeight","post","save_local_changes","delete_post","AdminBlog","handleNewPostButton","toISOString","to","renderRedirect","NonExistentRoute","role","Main","exact","component","initialState","action","new_posts","author","updatetime","unshift","rootReducer","combineReducers","rootStore","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.c4157dd2.chunk.js","sourcesContent":["const prod = {\r\n  url: {\r\n    POST_URL: \"https://aaronbae.com/api/posts/\",\r\n    USER_URL: \"https://aaronbae.com/api/users/\",\r\n  }\r\n}\r\nconst dev = {\r\n  url: {\r\n    POST_URL: \"http://localhost:4000/posts/\",\r\n    USER_URL: \"http://localhost:4000/users/\",\r\n  }\r\n}\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import { config } from '../Constants'\r\n\r\nexport const RECEIVE_POSTS = \"RECEIVE_POSTS\";\r\nexport const CREATE_NEW_POST = \"CREATE_NEW_POST\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const CLEAR_POSTS = \"CLEAR_POSTS\";\r\n\r\n// TERMINALS\r\nexport function create_new_post() {\r\n  return {\r\n    type: CREATE_NEW_POST,\r\n    date: new Date().toISOString()\r\n  }\r\n}\r\nexport function update_post(new_post, index) {\r\n  return {\r\n    type: UPDATE_POST, \r\n    new_post: new_post, \r\n    index: index\r\n  }\r\n}\r\nexport function clear_posts() {\r\n  return {\r\n    type: CLEAR_POSTS,\r\n    posts: [],\r\n    id2index: {}\r\n  }\r\n}\r\nfunction receive_posts(res) {\r\n  var id2index = {}   \r\n  if(!Array.isArray(res)){\r\n    res = [res]\r\n  }\r\n  for( var index in res ) {\r\n    id2index[res[index]._id] = index\r\n  }\r\n  return {\r\n    type: RECEIVE_POSTS,\r\n    posts: res,\r\n    id2index: id2index,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\n// PROCESSORS\r\nexport function fetch_public_posts() {\r\n  return dispatch => {\r\n    fetch(config.url.POST_URL+\"public\")\r\n      .then(res => res.json())\r\n      .then(res => dispatch(receive_posts(res)))\r\n  }\r\n}\r\n\r\nexport function fetch_posts() {\r\n  return dispatch => {\r\n    fetch(config.url.POST_URL)\r\n      .then(res => res.json())\r\n      .then(res => dispatch(receive_posts(res)))\r\n  }\r\n}\r\n\r\nexport function fetch_post_by_id(post_id) {\r\n  return dispatch => {\r\n    fetch(config.url.POST_URL+post_id)\r\n      .then(res => res.json())\r\n      .then(res => dispatch(receive_posts(res)))\r\n  }\r\n}\r\n","import { config } from '../Constants'\r\nimport { fetch_posts } from './BlogActions'\r\n\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const FAILED_ADMIN_PASSWORD = \"FAILED_ADMIN_PASSWORD\";\r\nexport const SUCCEEDED_ADMIN_PASSWORD = \"SUCCEEDED_ADMIN_PASSWORD\";\r\nexport const CHANGE_EDIT_DATA = \"CHANGE_EDIT_DATA\";\r\nexport const CHANGE_EDIT_MODE = \"CHANGE_EDIT_MODE\";\r\nexport const VIEWPOST = \"VIEW_POST\";\r\n\r\n// Admin Actions\r\nexport function sign_out() {\r\n  return {\r\n    type: SIGN_OUT,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\nfunction receive_account_results(res) {\r\n  if(res.status === 400){\r\n    return {\r\n      type: FAILED_ADMIN_PASSWORD,\r\n      receivedAt: Date.now()\r\n    }\r\n  }\r\n  return {\r\n    type: SUCCEEDED_ADMIN_PASSWORD,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\nexport function check_account(id, password) {\r\n  let data = {\r\n    login_id: id,\r\n    login_password: password\r\n  }\r\n  return dispatch => {\r\n    var url = config.url.USER_URL + \"login\"\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }).then(res => dispatch(receive_account_results(res)))\r\n  }\r\n}\r\n\r\n// UI Changing Actions\r\nexport function change_edit_mode(boolean_value) {\r\n  return {\r\n    type: CHANGE_EDIT_MODE, \r\n    edit_mode: boolean_value\r\n  }\r\n}\r\nexport function change_edit_data(edit_data) {\r\n  return {\r\n    type: CHANGE_EDIT_DATA, \r\n    edit_data: edit_data\r\n  }\r\n}\r\nexport function viewpost(post_id) {\r\n  return {\r\n    type: VIEWPOST, \r\n    post_id: post_id\r\n  }\r\n}\r\n\r\n// Data Manipulating Actions\r\nexport function save_local_changes(post) {\r\n  var url = config.url.POST_URL + \"update/\" + post._id.toString()\r\n  if(post._id === -1){\r\n    url = config.url.POST_URL + \"add/\" \r\n    delete post._id\r\n  } \r\n  return dispatch => {\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(post)\r\n    }).then(res => dispatch(change_edit_mode(false)))\r\n  }\r\n}\r\n\r\nexport function delete_post(post_id) {\r\n  var url = config.url.POST_URL + \"delete/\" +post_id.toString()\r\n  return dispatch => {\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n    .then(res => dispatch(fetch_posts()))\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './RedirectButton.scss';\r\n\r\nclass RedirectButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addClasses: props.addClasses + \" link-button\",\r\n      message: props.message,\r\n      route: props.route\r\n    }\r\n    this.handleRedirect = this.handleRedirect.bind(this);\r\n  }\r\n\r\n  handleRedirect(route) {\r\n    this.props.history.push(route)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <button\r\n        className={this.state.addClasses} \r\n        onClick={this.handleRedirect.bind(this, this.state.route)}>\r\n          {this.state.message}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(RedirectButton);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { sign_out } from '../Redux/AdminActions'\r\nimport { clear_posts } from '../Redux/BlogActions'\r\n\r\nimport RedirectButton from '../Utils/RedirectButton';\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogOut = this.handleLogOut.bind(this);\r\n  }\r\n\r\n  handleLogOut(e) {\r\n    e.stopPropagation();\r\n    // TODO: give a warning\r\n    // TODO: clear cache\r\n    const { dispatch } = this.props;\r\n    dispatch(sign_out());\r\n    dispatch(clear_posts());\r\n    this.props.history.push(\"/login\")\r\n  }\r\n\r\n  render() {\r\n    const { logged_in } = this.props;\r\n    const path = this.props.history.location.pathname;\r\n    return (\r\n      <div className=\"header-container d-flex row\">\r\n        <div><RedirectButton addClasses=\"navbrand\" message=\"Aaron Bae\" route=\"/\" /></div>\r\n\r\n        <div className=\"d-none d-sm-block collapsable\">\r\n          <div className={path===\"/\"?\"tab active\":\"tab\"}>\r\n            <RedirectButton addClasses=\"navlink\" message=\"Home\" route=\"/\" />\r\n          </div>\r\n\r\n          <div className=\"tab line\"></div>\r\n          <div className={path.startsWith(\"/blog\") || path.startsWith(\"/admin\")?\"tab active\":\"tab\"}>\r\n            {logged_in && \r\n              <RedirectButton addClasses=\"navlink\" message=\"Blog\" route=\"/admin\" />\r\n            }\r\n            {!logged_in &&\r\n              <RedirectButton addClasses=\"navlink\" message=\"Blog\" route=\"/blog\" />\r\n            }\r\n          </div>\r\n\r\n          <div className={path===\"/login\"?\"tab admin-container active\":\"admin-container\"}>\r\n            {logged_in && \r\n              <button className=\"navlink adminButton\" onClick={this.handleLogOut}>Sign Out</button>\r\n            }\r\n            {!logged_in &&\r\n              <RedirectButton addClasses=\"navlink adminButton\" message=\"Admin\" route=\"/login\" />\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"d-block d-sm-none dropdown-container\">\r\n          <div className=\"dropdown\">\r\n            <button className=\"btn\" type=\"button\" data-toggle=\"dropdown\">\r\n              <img className='menu-icon' src=\"assets/icons/hamburger_icon.png\" alt=\"menu\" />\r\n            </button>\r\n            <div className=\"dropdown-menu dropdown-menu-right\" >\r\n              <RedirectButton addClasses=\"dropdown-item\" message=\"Home\" route=\"/\" />\r\n              <RedirectButton addClasses=\"dropdown-item\" message=\"Blog\" route=\"/blog\" />\r\n              <div className=\"dropdown-divider\"></div>\r\n              <RedirectButton addClasses=\"dropdown-item\" message=\"Admin\" route=\"/login\" />\r\n            </div>\r\n          </div>\r\n        </div>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { logged_in: state.AdminReducer.logged_in }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Header));\r\n","import React, { Component } from 'react';\r\nimport './Footer.scss';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row footer\">\r\n        <div className=\"col\">\r\n          <div className='row'>\r\n            <div className=\"col-12\">\r\n              <a href=\"https://github.com/aaronbae\" title=\"GitHub\">\r\n                <img src=\"assets/icons/github.png\" alt=\"GitHub\" className='footer-link-icon' />\r\n              </a>\r\n              <a href=\"https://www.linkedin.com/in/aaron-bae/\" title=\"LinkedIn\">\r\n                <img src=\"assets/icons/linkedin.png\" alt=\"LinkedIn\" className='footer-link-icon' />\r\n              </a>\r\n              <a href=\"mailto:aaronbae@uw.edu\" title=\"email\">\r\n                <img src=\"assets/icons/gmail.png\" alt=\"Email\" className='footer-link-icon' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\"><p>Designed and Built by Aaron Bae</p></div>  \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport './Home.scss';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row all-home-container\">\r\n        <div className=\"side-panel center col-md-12 col-lg-3\">\r\n          <div className='row row-spacer'></div>\r\n          <div className=\"row\">\r\n            <img className='round profile-img' src=\"assets/profile2.jpg\" alt=\"profile\" />\r\n          </div>\r\n          <div className='row row-spacer'></div>\r\n          <div className=\"row\">\r\n            <ul className=\"col\">\r\n              <li className='row name-item'><span className=\"h2 my-name\">Aaron Beomjun Bae</span></li>\r\n              <li className=\"row bio-one-liner\"><span>Masters in Computer Science</span></li>\r\n              <li className=\"row bio-one-liner\"><span>UC Irvine Class of 2021</span></li>\r\n              <li className=\"row bio-one-liner\"><span>Focus on Natural Language Processing</span></li>\r\n              <li className=\"row bio-one-liner\"><span>Bachelor of Science in Mathematics</span></li>\r\n              <li className=\"row bio-one-liner\"><span>University of Washington Class of 2019</span></li>\r\n              <li className=\"row bio-one-liner\">\r\n                <a href=\"assets/downloadables/resume.pdf\" download>Download a copy of my resume</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className='row row-spacer'></div>\r\n          <div className='row'>\r\n            <div className=\"col-12\">\r\n              <a href=\"https://github.com/aaronbae\" title=\"GitHub\">\r\n                <img src=\"assets/icons/github.png\" alt=\"GitHub\" className='external-link-icon' />\r\n              </a>\r\n              <a href=\"https://www.linkedin.com/in/aaron-bae/\" title=\"LinkedIn\">\r\n                <img src=\"assets/icons/linkedin.png\" alt=\"LinkedIn\" className='external-link-icon' />\r\n              </a>\r\n              <a href=\"mailto:aaronbae@uw.edu\" title=\"email\">\r\n                <img src=\"assets/icons/gmail.png\" alt=\"Email\" className='external-link-icon' />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className='row row-spacer'></div>\r\n        </div>\r\n\r\n\r\n        <div className=\"main-panel col-md-12 col-lg-9\">\r\n          <div className=\"row total-section\">\r\n            <div className=\"col\">\r\n              <div className=\"row title-section\">\r\n                <p className=\"col h3\">Education</p>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <div className=\"row content-section\">\r\n                    <div className=\"col-md-12 col-lg-3 center\">\r\n                      <img className=\"education-img\" src=\"assets/uci_seal_500.png\" alt=\"University of California Irvine\" />\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-9\">\r\n                      <span><span  className=\"h6\">Masters in Computer Science</span>, <i>University of California - Irvine</i></span>\r\n                      <ul className=\"education-bullets\">\r\n                        <li>Started attending since September 2019.</li>\r\n                        <li>Focus in natural language processing using transformer based models.</li>\r\n                        <li>Participating in Center for Machine Learning and Intelligent Systems.</li>\r\n                        <li>Looking for full time software engineering or data scientist role after graduation</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row content-section\">\r\n                    <div className=\"col-md-12 col-lg-3 center\">\r\n                      <img className=\"education-img\" src=\"assets/uw_seal_500.jpg\" alt=\"University of Washington\" />\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-9\">\r\n                      <span><span  className=\"h6\">Bachelor of Science in Mathematics</span>, <i>University of Washington</i></span>\r\n                      <ul className=\"education-bullets\">\r\n                        <li>Attended from September 2015 until June 2019</li>\r\n                        <li>Applicable Mathematics classes such as Matrix Algebra, Differential Equations, and Mathematical Reasoning </li>\r\n                        <li>Applicable Data Science classes such as Database Management, Data Structures and Algorithms, and Artificial Intelligence </li>\r\n                        <li>Efficient in Python, Java, JavaScript, MySQL, AWS, D3, NodeJS, React, AJAX, Ruby, Sparks</li>\r\n                        <li>Abundant research experience from Washington Experimental Mathematics Lab (WXML) and assistantship to graduate researcher at Foster School of Business.</li>\r\n                        <li>Member of the Sigma Nu Fraternity Gamma Chi Chapter.</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row total-section\">\r\n            <div className=\"col\">\r\n              <div className=\"row title-section\">\r\n                <p className=\"col h3\">Technical Experiences</p>\r\n              </div>\r\n              <div className=\"row content-section\">\r\n                <div className=\"col\">\r\n\r\n\r\n                <div className=\"row individual-experience\">\r\n                    <div className=\"col logo-col center no-padding\">\r\n                      <div className=\"logo-wrapper\"><img src=\"assets/icons/uci.png\" alt=\"university of california, irvine logo\" className=\"company-logo\"/></div>\r\n                    </div>\r\n                    <div className=\"col experience-col\">\r\n                      <div className=\"row experience-title\">\r\n                        <div><span className=\"h5\">Graduate Student Researcher</span></div>\r\n                        <div className=\"support-info ml-auto\">\r\n                          <span>- University of California, Irvine</span>\r\n                          <span className=\"float-right\">March 2020 - Present</span>    \r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <p className=\"h6\">Professor Padhraic Smyth Research Team</p>\r\n                        <p>As a graduate researcher for Professor Padhraic Smyth, I am working on ways to analyze dialogue \r\n                          dataset. Datasets like Switchboard Corpus and ICSI Meeting Recording Corpus contains a \r\n                          turn-by-turn grouped utterances along with semantic annotations. The goal of the project is to \r\n                          analyze this conversational dataset to identify questions in any group conversations and possibly\r\n                          classify person-to-person dynamics like leadership qualities.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"row individual-experience\">\r\n                    <div className=\"col logo-col center no-padding\">\r\n                      <div className=\"logo-wrapper\"><img src=\"assets/icons/uw_logo.png\" alt=\"university of washington logo\" className=\"company-logo\"/></div>\r\n                    </div>\r\n                    <div className=\"col experience-col\">\r\n                      <div className=\"row experience-title\">\r\n                        <div><span className=\"h5\">Undergraduate Researcher</span></div>\r\n                        <div className=\"support-info ml-auto\">\r\n                          <span>- University of Washington</span>\r\n                          <span className=\"float-right\">Jun 2018 - Jun 2019</span>    \r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <p className=\"h6\">Washington Experimental Mathematics Lab</p>\r\n                        <p>I was invited to work with Professor Christopher Hoffman to participate on his Mathematics \r\n                          in Gerrymandering Project. He works to analyze search the state space for the ways to draw \r\n                          out the districts. We used C++ and Python as the engine of the project, and built NodeJS \r\n                          servers to distribute, visualize, and explain the political data we mined.\r\n                        </p>\r\n                        <p className=\"h6\">Assitantship to Emisa Nateigh, Ph.D:</p>\r\n                        <p>As a lab assistant to Emisa Nateigh, a Ph.D student at the University of Washington Foster \r\n                          School of business, I helped to create a machine learning system to perform Multi-Tasking \r\n                          Gaussian Process learning algorithm on the collected medical data. Mainly, used Python and \r\n                          NumPy to carry out the statistical process. Used MatplotLib and D3.js to visualize the \r\n                          information.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n\r\n                  <div className=\"row individual-experience\">\r\n                    <div className=\"col logo-col center no-padding\">\r\n                      <div className=\"logo-wrapper\"><img src=\"assets/icons/dapper.jpg\" alt=\"dapper company logo\" className=\"company-logo\"/></div>\r\n                    </div>\r\n                    <div className=\"col experience-col\">\r\n                      <div className=\"row experience-title\">\r\n                        <div><span className=\"h5\">Backend Software Engineer</span></div>\r\n                        <div className=\"support-info ml-auto\">\r\n                          <span>- Dapper Grooming</span>\r\n                          <span className=\"float-right\">Jun 2018 - August 2019</span> \r\n                        </div>   \r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <p className=\"h6\">Dapper Grooming | Backend Server Development Team</p>\r\n                        <p>Continuing my intersets in backend web development, I worked with a University \r\n                          of Washington alumn who was starting a company called Dapper. The company\r\n                          needed a basic web based platform to launch their project, and I helped them \r\n                          by creating an AWS server to handle their client traffic.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n\r\n\r\n                  <div className=\"row individual-experience\">\r\n                    <div className=\"col logo-col no-padding center\">\r\n                      <div className=\"logo-wrapper\"><img src=\"assets/icons/crowdcow.jpg\" alt=\"crowd cow company logo\" className=\"company-logo\"/></div>\r\n                    </div>\r\n                    <div className=\"col experience-col\">\r\n                      <div className=\"row experience-title\">\r\n                        <div><span className=\"h5\">Software Engineering Intern</span></div>\r\n                        <div className=\"support-info ml-auto\">\r\n                          <span>- Crowd Cow</span>\r\n                          <span className=\"float-right\">Jun 2017 - August 2017</span>\r\n                        </div>  \r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <p className=\"h6\">Frontend Developer:</p>\r\n                        <p>As a frontend developer, I worked on improving CrowdCow's private e-commerce platform by \r\n                          changing the client purchase UI pipeline. Also, worked on various features like in-house \r\n                          data visualization dashboard that displays company statistics.\r\n                        </p>\r\n                        <p className=\"h6\">Backend Developer:</p>\r\n                        <p>As a backend developer, I worked on middlman the information between the database and the \r\n                          client servers. Main technologies that I used were MySQL, Ruby on Rails, Git, Budler, RuboCop, \r\n                          Stripe, and Puma.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","export function format_date(date_string) {\r\n  var given_date = new Date(date_string)\r\n  var corrected_d = new Date(given_date.getTime() - new Date().getTimezoneOffset()*60000) \r\n  var month = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\r\n  var days = [\"Monday\",\"Tueday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\r\n  var result = days[corrected_d.getDay()] + \", \" + month[corrected_d.getMonth()]+\" \"+corrected_d.getDate()+\", \"+corrected_d.getFullYear()\r\n  return result\r\n}\r\n","import React, { Component } from 'react';\r\nimport { format_date } from '../Utils/HelperFunctions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './PostCard.scss';\r\n\r\nclass PostCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post_id: props.post_id\r\n    }\r\n    this.handlePostClick = this.handlePostClick.bind(this);\r\n  }\r\n\r\n  handlePostClick(e) {\r\n    e.stopPropagation();\r\n    this.props.history.push(\"/blog/\"+this.props.post_id)\r\n  }\r\n\r\n  render() {\r\n    const { title, date, summarized_content } = this.props\r\n    const formatted_date = format_date(date)\r\n    return (\r\n      <div className=\"individual-post-container col-12 col-sm-6\" onClick={this.handlePostClick}>\r\n        <div className=\"row individual-post\">\r\n          <div className=\"col\">\r\n            <div className=\"row date\">{formatted_date}</div>\r\n            <div className=\"row title\">{title}</div>\r\n            <div className=\"row\">{summarized_content}</div>\r\n            <div className=\"row read-more\">Read More</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  summarized_content: PropTypes.string.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { posts, id2index } = state.BlogReducer\r\n  let this_post = posts[id2index[ownProps.post_id]]\r\n  return {\r\n    title: this_post.title.substring(0,61) + (this_post.title.length > 61 ? \"...\" : \"\" ),\r\n    date: this_post.createtime,\r\n    summarized_content: this_post.content.substring(0, 100) + \"...\"\r\n  }\r\n}\r\n\r\nexport default  withRouter(connect(mapStateToProps)(PostCard));","import React, { Component } from 'react';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  fetch_public_posts\r\n} from '../Redux/BlogActions'\r\n\r\n// components \r\nimport PostCard from './PostCard';\r\nimport './MainBlogPage.scss';\r\n\r\nclass MainBlogPage extends Component {\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props\r\n    dispatch(fetch_public_posts())\r\n  }\r\n\r\n  render() { \r\n    const { posts } = this.props\r\n    return (\r\n      <div className='row all-blog-container'>\r\n        <div className=\"offset-sm-0 col-sm-12 offset-md-2 col-md-8\">\r\n          <div className=\"row whats-new-container\">What's New?</div>\r\n          <div className=\"row post-container\">\r\n            {posts.map((item, index) => \r\n              <PostCard key={index} post_id={item._id} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nMainBlogPage.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    posts: state.BlogReducer.posts,\r\n    logged_in: state.AdminReducer.logged_in \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainBlogPage);\r\n","import React, { Component } from 'react';\r\nimport { format_date } from '../Utils/HelperFunctions';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { fetch_post_by_id } from '../Redux/BlogActions'\r\n\r\nimport './PostViewer.scss';\r\n\r\nclass PostViewer extends Component {  \r\n  componentDidMount() {\r\n    const { dispatch } = this.props\r\n    let post_id = this.props.match.params[\"id\"]\r\n    dispatch(fetch_post_by_id(post_id))\r\n    window.scrollTo(0, 0) // Need to scroll to top if coming from /blog\r\n  }\r\n\r\n  render() {\r\n    const { posts } = this.props\r\n    let post_id = this.props.match.params[\"id\"]\r\n    let isPostFetched = posts.length > 0\r\n    // TOOD: Remember that we don't have spinner div developed yet\r\n    if( isPostFetched ) {\r\n      var id2index = this.props.id2index\r\n      var thisPost = posts[id2index[post_id]]\r\n    }\r\n    return (\r\n      <div className=\"row post-viewer-container \">\r\n        {isPostFetched && \r\n          <div className=\"offset-2 col-8 post-viewer-main-col\"> \r\n            <div className=\"row viewer-information-row\">\r\n              <div className=\"col-5 no-padding\">\r\n                {format_date(thisPost.createtime)}\r\n              </div>\r\n              <div className=\"col-7 no-padding\">\r\n                <div className=\"float-right\">\r\n                  <span className=\"tags-label\">Tags : </span>\r\n                  {thisPost.tags.map((item, index) =>\r\n                    <span key={index} className={\"tag \" + item}>\r\n                      {item + \", \"}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row viewer-title-row\">\r\n              {thisPost.title}\r\n            </div>\r\n            <div className=\"row viewer-content-row\">\r\n              {thisPost.content.split(\"\\n\").map((i, key) => {\r\n                return <div className=\"content-paragraph\" key={key}>{i}</div>\r\n              })}\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostViewer.propTypes = {\r\n  id2index: PropTypes.object.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { posts, id2index } = state.BlogReducer\r\n  return {\r\n    id2index: id2index,\r\n    posts: posts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostViewer);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { check_account } from '../Redux/AdminActions'\r\n\r\n// components \r\nimport './LogInPage.scss';\r\n\r\nclass LogInPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSignInButton = this.handleSignInButton.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { logged_in } = this.props;\r\n    if( logged_in ) {\r\n      this.props.history.push(\"/admin\")\r\n    }\r\n  }\r\n\r\n  handleSignInButton(e) {\r\n    e.stopPropagation();\r\n    var both_inputs = document.getElementsByClassName(\"text-input\")\r\n    const { dispatch } = this.props;\r\n    dispatch(check_account(both_inputs[0].value, both_inputs[1].value))\r\n  }\r\n\r\n  render() { \r\n    const { failed_attempt } = this.props;\r\n    return (\r\n      <div className='row all-signin-container'>\r\n        <div className=\"main-column col-10 col-sm-5 col-md-4\">\r\n          <div className=\"form-unit\">\r\n            <div className=\"row admin-title-row\">\r\n              <h3>Admin Access</h3>\r\n            </div>\r\n            <div className=\"row form-item-row\">\r\n              <input className={failed_attempt?\"incorrect text-input\":\"text-input\"} type=\"text\" placeholder=\"Admin Id\"/>\r\n            </div>\r\n            <div className=\"row form-item-row\">\r\n              <input className={failed_attempt?\"incorrect text-input\":\"text-input\"} type=\"password\" placeholder=\"Admin Password\"/>\r\n            </div>\r\n            <div className=\"row buttons-row form-item-row\">\r\n              <button className=\"sign-in-button\" onClick={this.handleSignInButton}>Sign In</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogInPage.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  failed_attempt: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    logged_in: state.AdminReducer.logged_in,\r\n    failed_attempt: state.AdminReducer.failed_attempt\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(LogInPage));\r\n","import React, { Component } from 'react';\r\nimport { format_date } from '../Utils/HelperFunctions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { viewpost } from '../Redux/AdminActions'\r\n\r\nimport './AdminPost.scss';\r\n\r\nclass AdminPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post_id: props.post_id\r\n    }\r\n    this.handlePostClick = this.handlePostClick.bind(this);\r\n  }\r\n\r\n  handlePostClick(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, edit_mode } = this.props\r\n    if(edit_mode){\r\n      // TODO: send a warning\r\n    } else {\r\n      dispatch(viewpost(this.state.post_id))  \r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, date, summarized_content } = this.props\r\n    const formatted_date = format_date(date)\r\n    return (\r\n      <div className=\"row admin-post-container\" onClick={this.handlePostClick}>\r\n        <div className=\"individual-post\">\r\n          <div className=\"offset-1 col-10\">\r\n            <div className=\"row date\">{formatted_date}</div>\r\n            <div className=\"row title\"><p className=\"h5\">{title}</p></div>\r\n            <div className=\"row\">{summarized_content}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAdminPost.propTypes = {\r\n  edit_mode: PropTypes.bool.isRequired,\r\n  selected_post: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  summarized_content: PropTypes.string.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  const { edit_mode, selected_post } = state.AdminReducer\r\n  const { posts } = state.BlogReducer\r\n  let this_post = posts[ownProps.post_id]\r\n  return {\r\n    edit_mode: edit_mode,\r\n    selected_post: selected_post,\r\n    title: this_post.title.substring(0,61) + (this_post.title.length > 61 ? \"...\" : \"\" ),\r\n    date: this_post.createtime,\r\n    summarized_content: this_post.content.substring(0, 100) + \"...\"\r\n  }\r\n}\r\n\r\nexport default  withRouter(connect(mapStateToProps)(AdminPost));","import React, { Component } from 'react';\r\nimport './Toggle.scss';\r\n\r\nclass Toggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // calculate height\r\n    var width = parseInt(props.width.slice(0, -2)) * 0.8\r\n    var height = (width/1.7).toString() + \"px\"\r\n\r\n    this.state = {\r\n      checked: props.checked,\r\n      click_behavior: props.click_behavior,\r\n      style_object: {\r\n        width: width.toString() + \"px\",\r\n        height: height\r\n      }\r\n    }\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.checked !== this.props.checked) {\r\n      this.setState({checked: this.props.checked});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"public-toggle-container\">\r\n        <label className=\"switch\" style={this.state.style_object}>\r\n          <input type=\"checkbox\" checked={this.state.checked} onChange={this.state.click_behavior}/>\r\n          <span className=\"slider round\"></span>\r\n        </label>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Toggle;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { update_post } from '../Redux/BlogActions'\r\nimport { change_edit_data } from '../Redux/AdminActions'\r\nimport Toggle from '../Utils/Toggle';\r\n\r\n\r\nclass PublicToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.update_public = this.update_public.bind(this);\r\n  }\r\n\r\n  update_public(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, edit_data, selected_post } = this.props\r\n    let old_value = this.props.edit_data.public\r\n    let new_edit_data = {...edit_data, public: !old_value}\r\n    dispatch(update_post(new_edit_data, selected_post))\r\n    dispatch(change_edit_data(new_edit_data))\r\n  }\r\n\r\n  render() {\r\n    const { edit_data } = this.props\r\n    return (\r\n      <Toggle checked={edit_data.public} width=\"50px\" click_behavior={this.update_public}/>\r\n    )\r\n  }\r\n}\r\n\r\nPublicToggle.propTypes = {\r\n  edit_data: PropTypes.object.isRequired,\r\n  selected_post: PropTypes.number.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { edit_data, selected_post } = state.AdminReducer\r\n  return { \r\n    edit_data: edit_data,\r\n    selected_post: selected_post\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(PublicToggle);\r\n","import React, { Component } from 'react';\r\nimport { format_date } from '../Utils/HelperFunctions';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  fetch_posts,\r\n  update_post\r\n} from '../Redux/BlogActions'\r\n\r\nimport {\r\n  change_edit_mode,\r\n  save_local_changes,\r\n  delete_post,\r\n  change_edit_data\r\n} from '../Redux/AdminActions'\r\n\r\n\r\nimport PublicToggle from './PublicToggle';\r\nimport './PostEditor.scss';\r\n\r\nclass PostEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.enterEditMode = this.enterEditMode.bind(this);\r\n    this.update_title = this.update_title.bind(this);\r\n    this.update_content = this.update_content.bind(this);\r\n    this.update_tags = this.update_tags.bind(this);\r\n    this.save_changes = this.save_changes.bind(this);\r\n    this.cancel_changes = this.cancel_changes.bind(this);\r\n    this.handle_delete_button = this.handle_delete_button.bind(this);\r\n  }\r\n\r\n  enterEditMode(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, selected_post, posts  } = this.props\r\n    const curr_post = posts[selected_post]\r\n    let new_edit_data = {\r\n      title: curr_post.title,\r\n      content: curr_post.content,\r\n      tags: curr_post.tags,\r\n      public: curr_post.public\r\n    }\r\n    dispatch(change_edit_mode(true))\r\n    dispatch(update_post(new_edit_data, selected_post)) // updates posts\r\n    dispatch(change_edit_data(new_edit_data)) // update edit_data\r\n  }\r\n\r\n  update_title(e) {\r\n    e.stopPropagation();\r\n    // auto re-size\r\n    e.target.style.height = e.target.scrollHeight.toString() + \"px\" \r\n\r\n    const { dispatch, edit_data, selected_post } = this.props\r\n    let new_edit_data = {...edit_data, title: e.target.value}\r\n    dispatch(update_post(new_edit_data, selected_post)) // updates posts\r\n    dispatch(change_edit_data(new_edit_data)) // update edit_data\r\n  }\r\n\r\n  update_content(e) {\r\n    e.stopPropagation();\r\n    // auto re-size\r\n    e.target.style.height = e.target.scrollHeight.toString() + \"px\" \r\n\r\n    const { dispatch, edit_data, selected_post } = this.props\r\n    let new_edit_data = {...edit_data, content: e.target.value}\r\n    dispatch(update_post(new_edit_data, selected_post)) // updates posts\r\n    dispatch(change_edit_data(new_edit_data)) // update edit_data\r\n  }\r\n\r\n  update_tags(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, edit_data, selected_post } = this.props\r\n    let new_edit_data = {...edit_data, tags: e.target.value.split(',')}\r\n    dispatch(update_post(new_edit_data, selected_post)) // updates posts\r\n    dispatch(change_edit_data(new_edit_data)) // update edit_data\r\n  }\r\n\r\n  save_changes(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, selected_post, posts  } = this.props\r\n    var curr_post = posts[selected_post]\r\n    dispatch(save_local_changes(curr_post))\r\n  }\r\n\r\n  cancel_changes(e) {\r\n    e.stopPropagation();\r\n    const { dispatch  } = this.props\r\n    dispatch(fetch_posts())\r\n    dispatch(change_edit_mode(false))\r\n  }\r\n\r\n  handle_delete_button(e) {\r\n    e.stopPropagation();\r\n    const { dispatch, selected_post, posts  } = this.props\r\n    dispatch(delete_post(posts[selected_post]['_id']))\r\n    dispatch(change_edit_mode(false))\r\n  }\r\n  \r\n  render() {\r\n    const { edit_mode, logged_in, selected_post, posts, edit_data } = this.props\r\n    let formatted_date = \"\"\r\n    if( selected_post !== -1 ) formatted_date = format_date(posts[selected_post].createtime)\r\n    return (\r\n      <div className=\"row post-editor-container\">\r\n        {selected_post > -1 &&\r\n          <div className={edit_mode ? \"col post-editor-main-col hidden\" : \"col post-editor-main-col\"}> \r\n            <div className=\"row title-row\">\r\n              <p className=\"h3\">{posts[selected_post].title}</p>\r\n            </div>\r\n            <div className=\"row information-row\">\r\n              <div className=\"col-5 no-padding\">\r\n                {formatted_date}\r\n              </div>\r\n              <div className=\"col-7 no-padding\">\r\n                <div className=\"float-right\">\r\n                  <span className=\"tags-label\">Tags : </span>\r\n                  {posts[selected_post].tags.map((item, index) =>\r\n                    <span key={index} className={\"tag \" + item}>\r\n                      {item + \", \"}                  \r\n                    </span>\r\n                  )}           \r\n                  {logged_in &&\r\n                    <span className=\"edit-button\" onClick={this.enterEditMode} >Edit Post</span>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"padding-row row\"></div>\r\n            <div className=\"row content-row\">\r\n              {posts[selected_post].content.split(\"\\n\").map((i, key) => {\r\n                return <div className=\"content-paragraph\" key={key}>{i}</div>\r\n              })}\r\n            </div>\r\n          </div>\r\n        }\r\n        {selected_post > -1 && \r\n          <div className={edit_mode ? \"col post-editor-main-col\" : \"col post-editor-main-col hidden\"}>\r\n            <div className=\"row title-row\">\r\n              <textarea className=\"title-input h3\" value={edit_data.title} onChange={this.update_title} placeholder=\"Your Title...\"/>\r\n            </div>\r\n            <div className=\"row information-row\">\r\n              <div className=\"col-5 no-padding\">\r\n                {posts[selected_post].createtime}\r\n              </div>\r\n              <div className=\"col-7 no-padding\">\r\n                <div className=\"float-right\">\r\n                  <span className=\"tags-label\">Tags : </span>\r\n                  <input  className=\"tags-input\" type=\"text\" value={edit_data.tags} onChange={this.update_tags} placeholder=\"tag, tag, ...\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row toggle-row\">\r\n              <div className=\"offset-5 col-7 no-padding\">\r\n                <div className=\"float-right\">\r\n                  <span>Public: </span> \r\n                  <div className=\"toggle-wrapper\">\r\n                    <PublicToggle />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"row content-row\">\r\n              <textarea  className=\"content-input\" value={edit_data.content} onChange={this.update_content} placeholder=\"What's on your Mind?\"/>\r\n            </div> \r\n            <div className=\"row button-row\">\r\n              <div>\r\n                <button className=\"save-button\" type=\"button\" onClick={this.save_changes}>Save</button>\r\n                <button className={posts[selected_post]['_id']===-1 ? \"delete-button hidden\" : \"delete-button\"} type=\"button\" onClick={this.handle_delete_button}>Delete</button>\r\n                <button className=\"cancel-button\" type=\"button\" onClick={this.cancel_changes}>Cancel</button>\r\n              </div>\r\n            </div>          \r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostEditor.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  edit_mode: PropTypes.bool.isRequired,\r\n  edit_data: PropTypes.object.isRequired,\r\n  selected_post: PropTypes.number.isRequired,\r\n  posts: PropTypes.array.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { edit_mode, edit_data, selected_post } = state.AdminReducer\r\n  const { posts } = state.BlogReducer\r\n  return {\r\n    logged_in: state.AdminReducer.logged_in,\r\n    edit_mode: edit_mode,\r\n    edit_data: edit_data,\r\n    selected_post: selected_post,\r\n    posts: posts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostEditor);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Redux handlers\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  fetch_public_posts,\r\n  fetch_posts, \r\n  create_new_post, \r\n  update_post\r\n} from '../Redux/BlogActions'\r\nimport { \r\n  viewpost,\r\n  change_edit_mode,\r\n  change_edit_data\r\n} from '../Redux/AdminActions'\r\n\r\n// components \r\nimport AdminPost from './AdminPost';\r\nimport PostEditor from './PostEditor';\r\nimport './AdminBlog.scss';\r\n\r\nclass AdminBlog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNewPostButton = this.handleNewPostButton.bind(this);\r\n  }\r\n\r\n  handleNewPostButton(e) {\r\n    e.stopPropagation();\r\n    const { dispatch } = this.props\r\n    let new_edit_data = {\r\n      title: \"\",\r\n      content: \"\",\r\n      tags: [],\r\n      public: true\r\n    }\r\n    dispatch(create_new_post())\r\n    dispatch(viewpost(0))  \r\n    dispatch(update_post(new_edit_data, 0))\r\n    dispatch(change_edit_data(new_edit_data))\r\n    dispatch(change_edit_mode(true))\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch, logged_in } = this.props\r\n    if(logged_in){\r\n      dispatch(fetch_posts())\r\n    } else {\r\n      dispatch(fetch_public_posts())\r\n    }\r\n  }\r\n\r\n  renderRedirect() {\r\n    const { logged_in } = this.props\r\n    if(!logged_in) {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n  }\r\n\r\n  render() { \r\n    const { posts, logged_in } = this.props\r\n    return (\r\n      <div className='row admin-blog-container'>\r\n        {this.renderRedirect()}\r\n        <div id=\"blog-column\" className=\"col-12 col-sm-4 post-column\">\r\n          <div className=\"row center post-column-title\">\r\n            <p className=\"h4\">Recent Posts</p>\r\n            {logged_in &&\r\n              <button className=\"new-post-button h3\" type=\"button\" onClick={this.handleNewPostButton}>+</button>\r\n            }\r\n          </div>\r\n          {posts.map((item, index) => \r\n            <AdminPost key={index} post_id={index} />\r\n          )}\r\n        </div>\r\n        <div className=\"col-12 col-sm-8\">\r\n          <PostEditor />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAdminBlog.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    logged_in: state.AdminReducer.logged_in,\r\n    posts: state.BlogReducer.posts \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AdminBlog);\r\n","import React, { Component } from 'react';\r\nimport './NotReady.scss';\r\n\r\nclass NonExistentRoute extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row all-notready-container\">\r\n        <div className=\"jumbotron\">\r\n          <h1 className=\"display-4\">This Page Doesn't Exist...</h1>\r\n          <p className=\"lead\">Looks like you are trying to reach a page that does not exist. Check your URL one more time! Meanwhile, here is a cool link below!</p>\r\n          <a className=\"btn btn-primary btn-lg\" href=\"https://www.youtube.com/watch?v=DNWWi8RYzhM\" role=\"button\">Surprise Link</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NonExistentRoute;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Home from '../Home/Home';\r\nimport MainBlogPage from '../Blog/MainBlogPage';\r\nimport PostViewer from '../Blog/PostViewer';\r\nimport LogInPage from '../Admin/LogInPage';\r\nimport AdminBlog from '../Admin/AdminBlog';\r\n//import NotReady from '../Warnings/NotReady';\r\nimport NonExistentRoute from '../Warnings/NonExistentRoute';\r\nimport './Main.scss';\r\n\r\nclass Main extends Component {\r\n  // NOTE THAT path=\"/api/\" is already reserved for backend\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className='container-fluid base_container'>\r\n          <Header />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/blog\" component={MainBlogPage} />\r\n              <Route exact path=\"/blog/:id\" component={PostViewer} />\r\n              <Route exact path=\"/admin\" component={AdminBlog} />\r\n              <Route exact path=\"/admin\" component={AdminBlog} />\r\n              <Route exact path=\"/login\" component={LogInPage} />\r\n              <Route component={NonExistentRoute} />\r\n            </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import {\r\n  CLEAR_POSTS,\r\n  CREATE_NEW_POST,\r\n  UPDATE_POST,\r\n  RECEIVE_POSTS\r\n} from './BlogActions'\r\n\r\n// The initial application state\r\nlet initialState = {\r\n  id2index: {},\r\n  posts: []\r\n}\r\n\r\n// Takes care of changing the application state\r\nfunction BlogReducer(state = initialState, action) {\r\n  var new_posts = [...state.posts]\r\n  switch (action.type) {\r\n    case CLEAR_POSTS:\r\n      return { ...state, posts: action.posts, id2index: action.id2index }\r\n    case CREATE_NEW_POST:\r\n      let new_post = {\r\n        tags: [],\r\n        _id: -1,\r\n        author: 1,\r\n        title: \"\",\r\n        content: \"\",\r\n        createtime: action.date,\r\n        public: true,\r\n        updatetime: action.date\r\n      }\r\n      new_posts.unshift(new_post)\r\n      return { ...state, posts: new_posts }\r\n    case UPDATE_POST:\r\n      new_posts[action.index].title = action.new_post.title\r\n      new_posts[action.index].content = action.new_post.content\r\n      new_posts[action.index].tags = action.new_post.tags\r\n      new_posts[action.index].public = action.new_post.public\r\n      return { ...state, posts: new_posts}\r\n    case RECEIVE_POSTS:\r\n      return { ...state, posts: action.posts, id2index: action.id2index }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default BlogReducer","import {\r\n  VIEWPOST,\r\n  SIGN_OUT,\r\n  FAILED_ADMIN_PASSWORD,\r\n  SUCCEEDED_ADMIN_PASSWORD,\r\n  CHANGE_EDIT_MODE,\r\n  CHANGE_EDIT_DATA\r\n} from './AdminActions'\r\n\r\n// The initial application state\r\nlet initialState = {\r\n  failed_attempt: false,\r\n  logged_in: false,\r\n  edit_mode: false,\r\n  edit_data: {\r\n    title: \"\",\r\n    tags: [],\r\n    content: \"\",\r\n    public: true\r\n  },\r\n  selected_post: -1\r\n}\r\n\r\n// Takes care of changing the application state\r\nfunction AdminReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case VIEWPOST:\r\n      return { ...state, selected_post: action.post_id }\r\n    case SIGN_OUT:\r\n      return { ...state, logged_in: false }\r\n    case FAILED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: true }\r\n    case SUCCEEDED_ADMIN_PASSWORD:\r\n      return { ...state, failed_attempt: false, logged_in: true }\r\n    case CHANGE_EDIT_MODE:\r\n      return { ...state, edit_mode: action.edit_mode }\r\n    case CHANGE_EDIT_DATA:\r\n      return {...state, edit_data: action.edit_data }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AdminReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './Common/Main';\r\n\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport BlogReducer from './Redux/BlogReducer';\r\nimport AdminReducer from './Redux/AdminReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  BlogReducer,\r\n  AdminReducer\r\n});\r\nconst rootStore = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nReactDOM.render(\r\n  <Provider store={rootStore}>\r\n    <Main />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}