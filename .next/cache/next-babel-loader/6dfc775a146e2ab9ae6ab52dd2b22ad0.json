{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaron\\\\Desktop\\\\aaronbae.com\\\\src\\\\pages\\\\blog\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetch_posts, fetch_public_posts, create_new_post } from '../../redux/BlogActions';\nimport PostPreview from '../../components/Blog/PostPreview';\nimport Pagination from '../../components/Blog/Pagination';\nimport { posts_to_array } from '../../library/format';\nimport '../../styles/Blog/index.css';\nexport default function Blog() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useState = useState(false),\n      new_post_redirect = _useState[0],\n      setRedirect = _useState[1];\n\n  var posts = useSelector(function (state) {\n    return state.BlogReducer.posts;\n  });\n  var logged_in = useSelector(function (store) {\n    return store.AdminReducer.logged_in;\n  });\n  var skip = router.query.skip;\n  useEffect(function () {\n    if (new_post_redirect) {\n      setRedirect(false);\n\n      var new_post_id = posts_to_array(posts)[0]._id;\n\n      router.push(\"/blog/[id]\", \"/blog/\".concat(new_post_id));\n    }\n  }, [posts]);\n  useEffect(function () {\n    if (logged_in) {\n      dispatch(fetch_posts(skip));\n    } else {\n      dispatch(fetch_public_posts(skip));\n    }\n  }, [skip]);\n\n  var compose_new = function compose_new(e) {\n    setRedirect(true);\n    dispatch(create_new_post());\n  };\n\n  return __jsx(\"div\", {\n    id: \"blog-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"card-title blog-whats-new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"What's New?\"), logged_in && __jsx(\"span\", {\n    className: \"blog-compose\",\n    onClick: compose_new,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Compose\")), __jsx(\"div\", {\n    className: \"preview-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, posts && posts_to_array(posts).map(function (item, index) {\n    return __jsx(PostPreview, {\n      key: index,\n      post: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  }), posts && __jsx(Pagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(Blog, \"HdxdI6QqWJQTYzJw1ZUnyYpCLWA=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/src/pages/blog/index.js"],"names":["useEffect","useState","useRouter","useDispatch","useSelector","fetch_posts","fetch_public_posts","create_new_post","PostPreview","Pagination","posts_to_array","Blog","dispatch","router","new_post_redirect","setRedirect","posts","state","BlogReducer","logged_in","store","AdminReducer","skip","query","new_post_id","_id","push","compose_new","e","map","item","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { \r\n  fetch_posts,\r\n  fetch_public_posts, \r\n  create_new_post \r\n} from '../../redux/BlogActions'\r\nimport PostPreview from '../../components/Blog/PostPreview'\r\nimport Pagination from '../../components/Blog/Pagination'\r\nimport { posts_to_array } from '../../library/format'\r\nimport '../../styles/Blog/index.css'\r\n\r\nexport default function Blog() {\r\n  const dispatch = useDispatch()\r\n  const router = useRouter()\r\n  const [new_post_redirect, setRedirect] = useState(false)\r\n  const posts = useSelector(state => state.BlogReducer.posts)\r\n  const logged_in = useSelector(store => store.AdminReducer.logged_in)\r\n  const skip = router.query.skip\r\n\r\n  useEffect(()=>{\r\n    if(new_post_redirect){\r\n      setRedirect(false)\r\n      const new_post_id = posts_to_array(posts)[0]._id\r\n      router.push(\"/blog/[id]\", `/blog/${new_post_id}`)\r\n    }\r\n  }, [posts])\r\n  \r\n  useEffect(() => {\r\n    if(logged_in) {\r\n      dispatch(fetch_posts(skip))\r\n    } else {\r\n      dispatch(fetch_public_posts(skip))\r\n    }\r\n  }, [skip])\r\n\r\n  const compose_new = (e) => {\r\n    setRedirect(true)\r\n    dispatch(create_new_post())\r\n  }\r\n  \r\n  return (\r\n    <div id=\"blog-container\">\r\n      <div className=\"card-wrapper\">\r\n        <div className=\"card-title blog-whats-new\">\r\n          <span>What's New?</span>\r\n          {logged_in &&\r\n            <span className=\"blog-compose\" onClick={compose_new}>Compose</span>\r\n          }\r\n        </div>\r\n        <div className=\"preview-wrapper\">\r\n          {posts && posts_to_array(posts).map((item, index) => \r\n            <PostPreview key={index} post={item} />\r\n          )}\r\n          {posts &&\r\n            <Pagination />\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}