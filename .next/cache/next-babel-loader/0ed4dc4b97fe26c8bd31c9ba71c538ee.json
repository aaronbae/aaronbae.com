{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaron\\\\Desktop\\\\aaronbae.com\\\\src\\\\components\\\\Admin\\\\CRON.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { snake_case_to_normal } from '../../library/format';\nimport '../../styles/Admin/cron.css';\nexport default function CRON(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState({}),\n      cronState = _useState[0],\n      setCronState = _useState[1];\n\n  var initiate_yahoo = function initiate_yahoo() {\n    fetch(process.env.NEXT_PUBLIC_STOCKS_URL + \"/initiate_fetch\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function () {\n      return fetch(process.env.NEXT_PUBLIC_MONITOR_CRON);\n    }).then(function (res) {\n      return res.json();\n    }).then(function (cron) {\n      cron.queue = cron.queue[0];\n      setCronState(cron);\n    });\n  };\n\n  var fetch_cron_info = function fetch_cron_info() {\n    fetch(process.env.NEXT_PUBLIC_MONITOR_CRON).then(function (res) {\n      return res.json();\n    }).then(function (cron) {\n      cron.queue = cron.queue[0];\n      setCronState(cron);\n    });\n  };\n\n  useEffect(function () {\n    fetch_cron_info();\n  }, []);\n  return __jsx(\"div\", {\n    className: \"card-wrapper \".concat(props.className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: \"card-title cron-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"CRON\", __jsx(\"span\", {\n    className: \"cron-refresh cron-title-button\",\n    onClick: fetch_cron_info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Refresh\"), __jsx(\"span\", {\n    className: \"cron-title-button\",\n    onClick: fetch_cron_info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Yahoo\")), __jsx(\"table\", {\n    className: \"cron-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, Object.keys(cronState).map(function (item, index) {\n    var _cronState$item;\n\n    return __jsx(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, snake_case_to_normal(item)), __jsx(\"td\", {\n      className: \"cron-table-values\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, (_cronState$item = cronState[item]) !== null && _cronState$item !== void 0 ? _cronState$item : \"null\"));\n  }))));\n}\n\n_s(CRON, \"1bazGpiA3+syATr0gheJcYt8wlA=\");\n\n_c = CRON;\n\nvar _c;\n\n$RefreshReg$(_c, \"CRON\");","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/src/components/Admin/CRON.js"],"names":["useEffect","useState","snake_case_to_normal","CRON","props","cronState","setCronState","initiate_yahoo","fetch","process","env","NEXT_PUBLIC_STOCKS_URL","method","headers","then","NEXT_PUBLIC_MONITOR_CRON","res","json","cron","queue","fetch_cron_info","className","Object","keys","map","item","index"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,OAAO,6BAAP;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA;;AAAA,kBACAH,QAAQ,CAAC,EAAD,CADR;AAAA,MAC3BI,SAD2B;AAAA,MAChBC,YADgB;;AAGlC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAI;AACzBC,IAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,sBAAZ,GAAmC,iBAApC,EAAuD;AAC1DC,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFiD,KAAvD,CAAL,CAMCC,IAND,CAMM,YAAM;AACV,aAAON,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYK,wBAAb,CAAZ;AACD,KARD,EASCD,IATD,CASM,UAAAE,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KATT,EAUCH,IAVD,CAUM,UAAAI,IAAI,EAAI;AACZA,MAAAA,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACC,KAAL,CAAW,CAAX,CAAb;AACAb,MAAAA,YAAY,CAACY,IAAD,CAAZ;AACD,KAbD;AAeD,GAhBD;;AAiBA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAI;AAC1BZ,IAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYK,wBAAb,CAAL,CAA4CD,IAA5C,CAAiD,UAAAE,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAApD,EACCH,IADD,CACM,UAAAI,IAAI,EAAI;AACZA,MAAAA,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACC,KAAL,CAAW,CAAX,CAAb;AACAb,MAAAA,YAAY,CAACY,IAAD,CAAZ;AACD,KAJD;AAKD,GAND;;AAOAlB,EAAAA,SAAS,CAAC,YAAI;AACZoB,IAAAA,eAAe;AAChB,GAFQ,EAEP,EAFO,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,yBAAkBhB,KAAK,CAACiB,SAAxB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AAAM,IAAA,SAAS,EAAC,gCAAhB;AAAiD,IAAA,OAAO,EAAED,eAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAEA,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,EAME;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,MAAM,CAACC,IAAP,CAAYlB,SAAZ,EAAuBmB,GAAvB,CAA2B,UAACC,IAAD,EAAOC,KAAP;AAAA;;AAAA,WAC1B;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKxB,oBAAoB,CAACuB,IAAD,CAAzB,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmCpB,SAAS,CAACoB,IAAD,CAA5C,6DAAsD,MAAtD,CAFF,CAD0B;AAAA,GAA3B,CADH,CADF,CANF,CADF;AAmBD;;GAlDuBtB,I;;KAAAA,I","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { snake_case_to_normal } from '../../library/format'\r\nimport '../../styles/Admin/cron.css'\r\n\r\nexport default function CRON(props) {\r\n  const [cronState, setCronState] = useState({});\r\n\r\n  const initiate_yahoo = ()=>{\r\n    fetch(process.env.NEXT_PUBLIC_STOCKS_URL+\"/initiate_fetch\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(() => {\r\n      return fetch(process.env.NEXT_PUBLIC_MONITOR_CRON)\r\n    })\r\n    .then(res => res.json())\r\n    .then(cron => {\r\n      cron.queue = cron.queue[0]\r\n      setCronState(cron)\r\n    })\r\n\r\n  }\r\n  const fetch_cron_info = ()=>{\r\n    fetch(process.env.NEXT_PUBLIC_MONITOR_CRON).then(res => res.json())\r\n    .then(cron => {\r\n      cron.queue = cron.queue[0]\r\n      setCronState(cron)\r\n    })\r\n  }\r\n  useEffect(()=>{\r\n    fetch_cron_info()\r\n  },[])\r\n\r\n  return (\r\n    <div className={`card-wrapper ${props.className}`}>\r\n      <p className=\"card-title cron-title\">\r\n        CRON\r\n        <span className=\"cron-refresh cron-title-button\" onClick={fetch_cron_info}>Refresh</span>\r\n        <span className=\"cron-title-button\" onClick={fetch_cron_info}>Yahoo</span>\r\n      </p>\r\n      <table className=\"cron-table\">\r\n        <tbody>\r\n          {Object.keys(cronState).map((item, index)=>\r\n            <tr key={index}>\r\n              <td>{snake_case_to_normal(item)}</td>\r\n              <td className=\"cron-table-values\">{cronState[item] ?? \"null\"}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}