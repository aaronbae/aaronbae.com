{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetch_posts, fetch_public_posts, create_new_post } from '../../redux/BlogActions';\nimport PostPreview from '../../components/Blog/PostPreview';\nimport Pagination from '../../components/Blog/Pagination';\nimport { posts_to_array } from '../../library/format';\nimport '../../styles/Blog/index.css';\nexport default function Blog() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    0: new_post_redirect,\n    1: setRedirect\n  } = useState(false);\n  const posts = useSelector(state => state.BlogReducer.posts);\n  const logged_in = useSelector(store => store.AdminReducer.logged_in);\n  const skip = router.query.skip;\n  useEffect(() => {\n    if (new_post_redirect) {\n      setRedirect(false);\n\n      const new_post_id = posts_to_array(posts)[0]._id;\n\n      router.push(\"/blog/[id]\", `/blog/${new_post_id}`);\n    }\n  }, [posts]);\n  useEffect(() => {\n    if (logged_in) {\n      dispatch(fetch_posts(skip));\n    } else {\n      dispatch(fetch_public_posts(skip));\n    }\n  }, [skip]);\n\n  const compose_new = e => {\n    setRedirect(true);\n    dispatch(create_new_post());\n  };\n\n  return __jsx(\"div\", {\n    id: \"blog-container\"\n  }, __jsx(\"div\", {\n    className: \"card-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"card-title blog-whats-new\"\n  }, __jsx(\"span\", null, \"What's New?\"), logged_in && __jsx(\"span\", {\n    className: \"blog-compose\",\n    onClick: compose_new\n  }, \"Compose\")), __jsx(\"div\", {\n    className: \"preview-wrapper\"\n  }, posts && posts_to_array(posts).map((item, index) => __jsx(PostPreview, {\n    key: index,\n    post: item\n  })), posts && __jsx(Pagination, null))));\n}","map":null,"metadata":{},"sourceType":"module"}