{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format_post_content, create_img_element } from '../../library/format';\nimport { update_content } from '../../redux/BlogActions';\nimport '../../styles/Blog/post-content.css';\nexport default function PostContent(_ref) {\n  var post_id = _ref.post_id;\n  var dispatch = useDispatch();\n  var post = useSelector(function (store) {\n    return store.BlogReducer.posts[post_id];\n  });\n  var edit_mode = useSelector(function (store) {\n    return store.BlogReducer.edit_mode;\n  });\n  var wrapper = useRef(null);\n  var tooltip = useRef(null);\n\n  var get_caret_element = function get_caret_element() {\n    var selection = window.getSelection();\n\n    if (selection.rangeCount) {\n      return selection.getRangeAt(0).commonAncestorContainer;\n    }\n\n    return null;\n  };\n\n  var hide_tooltip = function hide_tooltip() {\n    tooltip.current.classList.remove(\"show\");\n  };\n\n  var update_caret_div = function update_caret_div() {\n    var element = get_caret_element();\n\n    if (edit_mode && element && element.nodeType === 1 && element.childElementCount <= 1) {\n      wrapper.current.style.top = element.offsetTop + \"px\";\n      wrapper.current.style.left = element.offsetLeft - 130 + \"px\";\n      tooltip.current.classList.add(\"show\");\n    } else {\n      hide_tooltip();\n    }\n  };\n\n  var remote_trigger = function remote_trigger() {\n    // remote trigger, because actual input is invisible\n    var element = get_caret_element();\n\n    if (element) {\n      element.innerHTML = process.env.NEXT_PUBLIC_IMAGE_MARKER;\n    }\n\n    document.getElementById(\"post-image-input\").click();\n  };\n\n  var find_image_marker = function find_image_marker() {\n    var editor = document.getElementById(\"post-content-editor\");\n    var children = editor.children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].innerHTML === process.env.NEXT_PUBLIC_IMAGE_MARKER) {\n        return children[i];\n      }\n    }\n\n    return null;\n  };\n\n  var add_new_image = function add_new_image(e) {\n    var f = e.target.files[0];\n    var element = find_image_marker();\n    var editor = document.getElementById(\"post-content-editor\");\n\n    if (element && f && /^.*(png|jpg|jpeg)$/i.test(f.type)) {\n      var data = new FormData();\n      data.append('file', f);\n      fetch(process.env.NEXT_PUBLIC_FILE_URL + 'upload', {\n        method: 'POST',\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        element.innerHTML = create_img_element(res.url);\n        dispatch(update_content(post, editor.innerHTML));\n      });\n    }\n  };\n\n  var default_to_divs = function default_to_divs(e) {\n    // Empty content defaults to emtpy divs\n    if (e.target.innerText.length <= 1 && e.key === \"Backspace\") {\n      e.target.innerHTML = \"<div></div>\";\n      e.preventDefault();\n    }\n  };\n\n  var change_content = function change_content(e) {\n    update_caret_div();\n    dispatch(update_content(post, e.target.innerHTML));\n  };\n\n  return __jsx(\"div\", {\n    className: \"post-content\"\n  }, __jsx(\"div\", {\n    id: \"post-tooltip-wrapper\",\n    ref: wrapper\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"post-image-input\",\n    onChange: add_new_image\n  }), __jsx(\"label\", {\n    ref: tooltip,\n    htmlFor: \"post-image-input\",\n    onMouseDown: remote_trigger,\n    className: \"post-tooltip\"\n  }, \"Add Image\")), __jsx(\"div\", {\n    id: \"post-content-editor\",\n    contentEditable: edit_mode,\n    suppressContentEditableWarning: true,\n    \"data-placeholder\": \"What's on your mind?\",\n    onKeyDown: default_to_divs,\n    onKeyUp: change_content,\n    onClick: update_caret_div,\n    onBlur: hide_tooltip,\n    dangerouslySetInnerHTML: {\n      __html: format_post_content(post)\n    }\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}