{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaron\\\\Desktop\\\\aaronbae.com\\\\src\\\\components\\\\Blog\\\\PostContent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format_post_content, create_img_element } from '../../library/format';\nimport { update_content } from '../../redux/BlogActions';\nimport '../../styles/Blog/post-content.css';\nexport default function PostContent(_ref) {\n  _s();\n\n  var post_id = _ref.post_id;\n  var dispatch = useDispatch();\n  var post = useSelector(function (store) {\n    return store.BlogReducer.posts[post_id];\n  });\n  var edit_mode = useSelector(function (store) {\n    return store.BlogReducer.edit_mode;\n  });\n  var wrapper = useRef(null);\n  var tooltip = useRef(null);\n\n  var get_caret_element = function get_caret_element() {\n    var selection = window.getSelection();\n\n    if (selection.rangeCount) {\n      return selection.getRangeAt(0).commonAncestorContainer;\n    }\n\n    return null;\n  };\n\n  var hide_tooltip = function hide_tooltip() {\n    tooltip.current.classList.remove(\"show\");\n  };\n\n  var update_caret_div = function update_caret_div() {\n    var element = get_caret_element();\n\n    if (edit_mode && element && element.nodeType === 1 && element.childElementCount <= 1) {\n      wrapper.current.style.top = element.offsetTop + \"px\";\n      wrapper.current.style.left = element.offsetLeft - 130 + \"px\";\n      tooltip.current.classList.add(\"show\");\n    } else {\n      hide_tooltip();\n    }\n  };\n\n  var remote_trigger = function remote_trigger() {\n    // remote trigger, because actual input is invisible\n    var element = get_caret_element();\n\n    if (element) {\n      element.innerHTML = process.env.NEXT_PUBLIC_IMAGE_MARKER;\n    }\n\n    document.getElementById(\"post-image-input\").click();\n  };\n\n  var find_image_marker = function find_image_marker() {\n    var editor = document.getElementById(\"post-content-editor\");\n    var children = editor.children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].innerHTML === process.env.NEXT_PUBLIC_IMAGE_MARKER) {\n        return children[i];\n      }\n    }\n\n    return null;\n  };\n\n  var add_new_image = function add_new_image(e) {\n    var f = e.target.files[0];\n    var element = find_image_marker();\n    var editor = document.getElementById(\"post-content-editor\");\n\n    if (element && f && /^.*(png|jpg|jpeg)$/i.test(f.type)) {\n      var data = new FormData();\n      data.append('file', f);\n      fetch(process.env.NEXT_PUBLIC_FILE_URL + 'upload', {\n        method: 'POST',\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        element.innerHTML = create_img_element(res.url);\n        dispatch(update_content(post, editor.innerHTML));\n      });\n    }\n  };\n\n  var default_to_divs = function default_to_divs(e) {\n    // Empty content defaults to emtpy divs\n    if (e.target.innerText.length <= 1 && e.key === \"Backspace\") {\n      e.target.innerHTML = \"<div></div>\";\n      e.preventDefault();\n    }\n  };\n\n  var change_content = function change_content(e) {\n    update_caret_div();\n    dispatch(update_content(post, e.target.innerHTML));\n  };\n\n  return __jsx(\"div\", {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: \"post-tooltip-wrapper\",\n    ref: wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"post-image-input\",\n    onChange: add_new_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    ref: tooltip,\n    htmlFor: \"post-image-input\",\n    onMouseDown: remote_trigger,\n    className: \"post-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Add Image\")), __jsx(\"div\", {\n    id: \"post-content-editor\",\n    contentEditable: edit_mode,\n    suppressContentEditableWarning: true,\n    \"data-placeholder\": \"What's on your mind?\",\n    onKeyDown: default_to_divs,\n    onKeyUp: change_content,\n    onClick: update_caret_div,\n    onBlur: hide_tooltip,\n    dangerouslySetInnerHTML: {\n      __html: format_post_content(post)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(PostContent, \"xxsn0WK4VZ5L7xEV5SbV16r7Z/A=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/src/components/Blog/PostContent.js"],"names":["useRef","useDispatch","useSelector","format_post_content","create_img_element","update_content","PostContent","post_id","dispatch","post","store","BlogReducer","posts","edit_mode","wrapper","tooltip","get_caret_element","selection","window","getSelection","rangeCount","getRangeAt","commonAncestorContainer","hide_tooltip","current","classList","remove","update_caret_div","element","nodeType","childElementCount","style","top","offsetTop","left","offsetLeft","add","remote_trigger","innerHTML","process","env","NEXT_PUBLIC_IMAGE_MARKER","document","getElementById","click","find_image_marker","editor","children","i","length","add_new_image","e","f","target","files","test","type","data","FormData","append","fetch","NEXT_PUBLIC_FILE_URL","method","body","then","res","json","url","default_to_divs","innerText","key","preventDefault","change_content","__html"],"mappings":"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","sourcesContent":["import { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { format_post_content, create_img_element } from '../../library/format'\r\nimport { update_content } from '../../redux/BlogActions'\r\nimport '../../styles/Blog/post-content.css'\r\n\r\nexport default function PostContent({post_id}) {\r\n  const dispatch = useDispatch()\r\n  const post = useSelector(store => store.BlogReducer.posts[post_id])\r\n  const edit_mode = useSelector(store => store.BlogReducer.edit_mode)\r\n  const wrapper = useRef(null)\r\n  const tooltip = useRef(null)\r\n\r\n  const get_caret_element = () => {\r\n    const selection = window.getSelection()\r\n    if(selection.rangeCount){\r\n      return selection.getRangeAt(0).commonAncestorContainer\r\n    } \r\n    return null\r\n  }\r\n  const hide_tooltip = () => {\r\n    tooltip.current.classList.remove(\"show\")\r\n  }\r\n  const update_caret_div = () => {\r\n    const element = get_caret_element()\r\n    if(edit_mode && element && element.nodeType === 1 && element.childElementCount <= 1){\r\n      wrapper.current.style.top = element.offsetTop+\"px\"\r\n      wrapper.current.style.left = element.offsetLeft-130+\"px\"\r\n      tooltip.current.classList.add(\"show\")\r\n    } else {\r\n      hide_tooltip()\r\n    }\r\n  }\r\n  const remote_trigger = () => {\r\n    // remote trigger, because actual input is invisible\r\n    const element = get_caret_element()\r\n    if(element){\r\n      element.innerHTML = process.env.NEXT_PUBLIC_IMAGE_MARKER\r\n    }\r\n    document.getElementById(\"post-image-input\").click()\r\n  }\r\n  const find_image_marker = () => {\r\n    const editor = document.getElementById(\"post-content-editor\")\r\n    const children = editor.children\r\n    for(let i=0; i < children.length; i++){\r\n      if(children[i].innerHTML===process.env.NEXT_PUBLIC_IMAGE_MARKER){\r\n        return children[i]\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  const add_new_image = (e) => {\r\n    let f = e.target.files[0]\r\n    let element = find_image_marker()\r\n    const editor = document.getElementById(\"post-content-editor\")\r\n    if(element && f && /^.*(png|jpg|jpeg)$/i.test(f.type)){\r\n      const data = new FormData() \r\n      data.append('file', f)\r\n      fetch(process.env.NEXT_PUBLIC_FILE_URL + 'upload', {\r\n        method: 'POST',\r\n        body: data\r\n      }).then(res => res.json())\r\n      .then(res => {\r\n        element.innerHTML = create_img_element(res.url)\r\n        dispatch(update_content(post, editor.innerHTML))\r\n      })\r\n    }\r\n  }\r\n  const default_to_divs = (e) => {\r\n    // Empty content defaults to emtpy divs\r\n    if(e.target.innerText.length<=1 && e.key===\"Backspace\"){\r\n      e.target.innerHTML = \"<div></div>\"\r\n      e.preventDefault()\r\n    }\r\n  }\r\n  const change_content = (e) => {\r\n    update_caret_div()\r\n    dispatch(update_content(post, e.target.innerHTML))\r\n  }\r\n  return (\r\n    <div className=\"post-content\">\r\n      <div id=\"post-tooltip-wrapper\" ref={wrapper}>\r\n        <input type=\"file\" name=\"file\" id=\"post-image-input\" onChange={add_new_image}/>\r\n        <label ref={tooltip} htmlFor=\"post-image-input\" onMouseDown={remote_trigger} className=\"post-tooltip\">\r\n          Add Image\r\n        </label>\r\n      </div>\r\n      <div id=\"post-content-editor\"\r\n        contentEditable={edit_mode}\r\n        suppressContentEditableWarning={true}\r\n        data-placeholder={\"What's on your mind?\"}\r\n        onKeyDown={default_to_divs}\r\n        onKeyUp={change_content}\r\n        onClick={update_caret_div}\r\n        onBlur={hide_tooltip}\r\n        dangerouslySetInnerHTML={{\r\n          __html: format_post_content(post)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}