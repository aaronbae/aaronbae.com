{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaron\\\\Desktop\\\\aaronbae.com\\\\frontend\\\\src\\\\components\\\\Admin\\\\DB.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { ResponsiveContainer, PieChart, Pie } from 'recharts';\nimport { format_to_gb } from '../../library/format';\nimport '../../styles/Admin/db.css';\nexport default function DB(props) {\n  const {\n    0: dbState,\n    1: setDBState\n  } = useState({});\n  useEffect(() => {\n    fetch(\"http://localhost:4000/api/monitor/db\").then(res => res.json()).then(db => {\n      console.log(db);\n      setDBState(db);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: `card-wrapper ${props.className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"aaronbaeDB\"), dbState && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(ResponsiveContainer, {\n    width: \"100%\",\n    height: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, __jsx(PieChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(Pie, {\n    data: [{\n      name: \"used\",\n      memory: format_to_gb(dbState.machine_memory_used, 3)\n    }, {\n      name: \"free\",\n      memory: format_to_gb(dbState.machine_memory_total - dbState.machine_memory_used, 3)\n    }],\n    dataKey: \"memory\",\n    nameKey: \"name\",\n    cx: \"50%\",\n    cy: \"50%\",\n    outerRadius: 60,\n    fill: \"#ffa600\",\n    label: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }))), __jsx(\"p\", {\n    className: \"memory-used-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Machine Memory Used\"), __jsx(\"table\", {\n    className: \"db-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Collection\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Doc Count\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Memory (GB)\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, dbState.collections && dbState.collections.map((item, index) => __jsx(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, item.name), __jsx(\"td\", {\n    className: \"db-table-values\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, item.n), __jsx(\"td\", {\n    className: \"db-table-values\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, format_to_gb(item.reserved, 3))))))));\n}","map":{"version":3,"sources":["C:/Users/Aaron/Desktop/aaronbae.com/frontend/src/components/Admin/DB.js"],"names":["useEffect","useState","ResponsiveContainer","PieChart","Pie","format_to_gb","DB","props","dbState","setDBState","fetch","then","res","json","db","console","log","className","name","memory","machine_memory_used","machine_memory_total","collections","map","item","index","n","reserved"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { ResponsiveContainer, PieChart, Pie } from 'recharts';\r\nimport { format_to_gb } from '../../library/format'\r\nimport '../../styles/Admin/db.css'\r\n\r\nexport default function DB(props) {\r\n  const [dbState, setDBState] = useState({});\r\n\r\n  useEffect(()=>{\r\n    fetch(\"http://localhost:4000/api/monitor/db\").then(res => res.json())\r\n    .then(db => {\r\n      console.log(db)\r\n      setDBState(db)\r\n    })\r\n  },[])\r\n  return (\r\n    <div className={`card-wrapper ${props.className}`}>\r\n      <p className=\"card-title\">aaronbaeDB</p>\r\n      {dbState && \r\n        <div>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <PieChart>\r\n              <Pie \r\n                data={[\r\n                  {name: \"used\", memory: format_to_gb(dbState.machine_memory_used, 3)}, \r\n                  {name: \"free\", memory: format_to_gb(dbState.machine_memory_total - dbState.machine_memory_used, 3)}]} \r\n                dataKey=\"memory\" nameKey=\"name\" \r\n                cx=\"50%\" cy=\"50%\" \r\n                outerRadius={60} fill=\"#ffa600\" label />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n          <p className=\"memory-used-label\">Machine Memory Used</p>\r\n          <table className=\"db-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Collection</th>\r\n                <th>Doc Count</th>\r\n                <th>Memory (GB)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {dbState.collections && dbState.collections.map((item, index)=>\r\n                <tr key={index}>\r\n                  <td>{item.name}</td>\r\n                  <td className=\"db-table-values\">{item.n}</td>\r\n                  <td className=\"db-table-values\">{format_to_gb(item.reserved, 3)}</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}