{"ast":null,"code":"export function round(value, float_digits) {\n  const rounder = Math.pow(10, float_digits);\n  return Math.round(value * rounder) / rounder;\n}\nexport function format_to_gb(integer_value, floating_points) {\n  return round(integer_value / 1073741824, floating_points);\n}\nexport function snake_case_to_normal(string) {\n  function upper_case(shit) {\n    return shit.charAt(0).toUpperCase() + shit.slice(1);\n  }\n\n  return string.split(\"_\").map(x => upper_case(x)).join(\" \");\n}\nexport function create_img_element(url) {\n  url = url.replace(/https:\\/\\/aaronbaebucket.s3.([^/]+)\\//gi, \"https://aaronbae.com/api/files/\");\n  return `<img src='${url}' class='aws-image' alt='Loaded from AWS'>`;\n}\nexport function format_post_content(post) {\n  if (post.content === \"<br>\" || post.content === \"\") {\n    return \"<div></div>\";\n  } // Temporary stop gap\n\n\n  post.content = post.content.replace(/https:\\/\\/aaronbae.com\\/api\\/files\\//gi, `${process.env.NEXT_PUBLIC_FILE_URL}`);\n  return post.content;\n}\nexport function raw_tags_to_array(raw_tags_input) {\n  const punctuation = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n  return raw_tags_input.split(\",\").map(s => s.trim().replace(punctuation, ''));\n}\nexport function posts_to_array(posts) {\n  const sorted_array = Object.values(posts).sort(function (a, b) {\n    if (a.createtime >= b.createtime) {\n      return -1;\n    }\n\n    return 1;\n  });\n  return sorted_array;\n}\nexport function page_to_skip(page, total_pages) {\n  return 5 * (Math.min(total_pages, Math.max(1, page)) - 1);\n}\nexport function pagination_array(current_page, total_pages) {\n  const start = Math.max(1, Math.min(current_page - 2, total_pages - 4));\n  return [...Array(5).keys()].map(x => x + start);\n}\nexport function query_param_string_to_objects(query_string) {\n  let result = {};\n\n  for (const p of query_string.toLowerCase().replace(\"?\", \"\").split(\"&\")) {\n    let p_split = p.toString().split(\"=\");\n    result[p_split[0]] = p_split[1];\n  }\n\n  return result;\n}\nexport function post_to_url(post) {\n  let modified_title = post.title.replace(/[^A-Za-z0-9\\s]/g, \"\").toLowerCase();\n  modified_title = modified_title.split(\" \").join(\"-\");\n  return `/blog/${modified_title}-${post._id}`;\n}\nexport function url_to_post_id(url) {\n  let splitted = url.split(\"-\");\n  return splitted[splitted.length - 1];\n}\nexport function format_date(date_string) {\n  var given_date = new Date(date_string);\n  var corrected_d = new Date(given_date.getTime() - new Date().getTimezoneOffset() * 60000);\n  var month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var days = [\"Monday\", \"Tueday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  var result = days[corrected_d.getDay()] + \", \" + month[corrected_d.getMonth()] + \" \" + corrected_d.getDate() + \", \" + corrected_d.getFullYear();\n  return result;\n}\nexport function summarize_content(content) {\n  return content.replace(/<div>|<\\/div>|<br>|<img\\s+.*>/gi, \" \").substring(0, 200) + \"...\";\n}\nexport function find_image_from_post(post) {\n  const matches = post.content.match(/https\\:\\/\\/aaronbae.com([-a-zA-Z0-9()@:%_\\+.~#?&//=]*).(png|jpg|jpeg)/gi);\n  return matches ? matches[0] : \"\";\n}","map":null,"metadata":{},"sourceType":"module"}